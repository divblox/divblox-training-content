Index: divblox/config/database/data_model_orm/generated/AllowedApiOperationGen.class.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- divblox/config/database/data_model_orm/generated/AllowedApiOperationGen.class.php	(revision 8088b90ea0ab6ee30e69c949666fde75c4664610)
+++ divblox/config/database/data_model_orm/generated/AllowedApiOperationGen.class.php	(date 1589789351202)
@@ -17,10 +17,10 @@
  * @subpackage GeneratedDataObjects
  * @property-read integer $Id the value for intId (Read-Only PK)
  * @property boolean $IsActive the value for blnIsActive 
+ * @property-read string $LastUpdated the value for strLastUpdated (Read-Only Timestamp)
  * @property integer $ApiKey the value for intApiKey 
  * @property string $SearchMetaInfo the value for strSearchMetaInfo 
  * @property integer $ApiOperation the value for intApiOperation 
- * @property-read string $LastUpdated the value for strLastUpdated (Read-Only Timestamp)
  * @property integer $ObjectOwner the value for intObjectOwner 
  * @property ApiKey $ApiKeyObject the value for the ApiKey object referenced by intApiKey 
  * @property ApiOperation $ApiOperationObject the value for the ApiOperation object referenced by intApiOperation 
@@ -48,6 +48,14 @@
     const IsActiveDefault = null;
 
 
+    /**
+     * Protected member variable that maps to the database column AllowedApiOperation.LastUpdated
+     * @var string strLastUpdated
+     */
+    protected $strLastUpdated;
+    const LastUpdatedDefault = null;
+
+
     /**
      * Protected member variable that maps to the database column AllowedApiOperation.ApiKey
      * @var integer intApiKey
@@ -72,14 +80,6 @@
     const ApiOperationDefault = null;
 
 
-    /**
-     * Protected member variable that maps to the database column AllowedApiOperation.LastUpdated
-     * @var string strLastUpdated
-     */
-    protected $strLastUpdated;
-    const LastUpdatedDefault = null;
-
-
     /**
      * Protected member variable that maps to the database column AllowedApiOperation.ObjectOwner
      * @var integer intObjectOwner
@@ -134,10 +134,10 @@
     public function Initialize() {
         $this->intId = AllowedApiOperation::IdDefault;
         $this->blnIsActive = AllowedApiOperation::IsActiveDefault;
+        $this->strLastUpdated = AllowedApiOperation::LastUpdatedDefault;
         $this->intApiKey = AllowedApiOperation::ApiKeyDefault;
         $this->strSearchMetaInfo = AllowedApiOperation::SearchMetaInfoDefault;
         $this->intApiOperation = AllowedApiOperation::ApiOperationDefault;
-        $this->strLastUpdated = AllowedApiOperation::LastUpdatedDefault;
         $this->intObjectOwner = AllowedApiOperation::ObjectOwnerDefault;
     }
 
@@ -477,10 +477,10 @@
         } else {
             $objBuilder->AddSelectItem($strTableName, 'Id', $strAliasPrefix . 'Id');
             $objBuilder->AddSelectItem($strTableName, 'IsActive', $strAliasPrefix . 'IsActive');
+            $objBuilder->AddSelectItem($strTableName, 'LastUpdated', $strAliasPrefix . 'LastUpdated');
             $objBuilder->AddSelectItem($strTableName, 'ApiKey', $strAliasPrefix . 'ApiKey');
             $objBuilder->AddSelectItem($strTableName, 'SearchMetaInfo', $strAliasPrefix . 'SearchMetaInfo');
             $objBuilder->AddSelectItem($strTableName, 'ApiOperation', $strAliasPrefix . 'ApiOperation');
-            $objBuilder->AddSelectItem($strTableName, 'LastUpdated', $strAliasPrefix . 'LastUpdated');
             $objBuilder->AddSelectItem($strTableName, 'ObjectOwner', $strAliasPrefix . 'ObjectOwner');
         }
     }
@@ -609,6 +609,9 @@
         $strAlias = $strAliasPrefix . 'IsActive';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->blnIsActive = $objDbRow->GetColumn($strAliasName, 'Bit');
+        $strAlias = $strAliasPrefix . 'LastUpdated';
+        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
+        $objToReturn->strLastUpdated = $objDbRow->GetColumn($strAliasName, 'VarChar');
         $strAlias = $strAliasPrefix . 'ApiKey';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->intApiKey = $objDbRow->GetColumn($strAliasName, 'Integer');
@@ -618,9 +621,6 @@
         $strAlias = $strAliasPrefix . 'ApiOperation';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->intApiOperation = $objDbRow->GetColumn($strAliasName, 'Integer');
-        $strAlias = $strAliasPrefix . 'LastUpdated';
-        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
-        $objToReturn->strLastUpdated = $objDbRow->GetColumn($strAliasName, 'VarChar');
         $strAlias = $strAliasPrefix . 'ObjectOwner';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->intObjectOwner = $objDbRow->GetColumn($strAliasName, 'Integer');
@@ -857,10 +857,10 @@
             $newAuditLogEntry->ModificationType = 'Create';
             $ChangedArray = array_merge($ChangedArray,array("Id" => $this->intId));
             $ChangedArray = array_merge($ChangedArray,array("IsActive" => $this->blnIsActive));
+            $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
             $ChangedArray = array_merge($ChangedArray,array("ApiKey" => $this->intApiKey));
             $ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => $this->strSearchMetaInfo));
             $ChangedArray = array_merge($ChangedArray,array("ApiOperation" => $this->intApiOperation));
-            $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
             $ChangedArray = array_merge($ChangedArray,array("ObjectOwner" => $this->intObjectOwner));
             $newAuditLogEntry->AuditLogEntryDetail = json_encode($ChangedArray);
         } else {
@@ -881,6 +881,14 @@
                 $ChangedArray = array_merge($ChangedArray,array("IsActive" => array("Before" => $ExistingValueStr,"After" => $this->blnIsActive)));
                 //$ChangedArray = array_merge($ChangedArray,array("IsActive" => "From: ".$ExistingValueStr." to: ".$this->blnIsActive));
             }
+            $ExistingValueStr = "NULL";
+            if (!is_null($ExistingObj->LastUpdated)) {
+                $ExistingValueStr = $ExistingObj->LastUpdated;
+            }
+            if ($ExistingObj->LastUpdated != $this->strLastUpdated) {
+                $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => array("Before" => $ExistingValueStr,"After" => $this->strLastUpdated)));
+                //$ChangedArray = array_merge($ChangedArray,array("LastUpdated" => "From: ".$ExistingValueStr." to: ".$this->strLastUpdated));
+            }
             $ExistingValueStr = "NULL";
             if (!is_null($ExistingObj->ApiKey)) {
                 $ExistingValueStr = $ExistingObj->ApiKey;
@@ -905,14 +913,6 @@
                 $ChangedArray = array_merge($ChangedArray,array("ApiOperation" => array("Before" => $ExistingValueStr,"After" => $this->intApiOperation)));
                 //$ChangedArray = array_merge($ChangedArray,array("ApiOperation" => "From: ".$ExistingValueStr." to: ".$this->intApiOperation));
             }
-            $ExistingValueStr = "NULL";
-            if (!is_null($ExistingObj->LastUpdated)) {
-                $ExistingValueStr = $ExistingObj->LastUpdated;
-            }
-            if ($ExistingObj->LastUpdated != $this->strLastUpdated) {
-                $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => array("Before" => $ExistingValueStr,"After" => $this->strLastUpdated)));
-                //$ChangedArray = array_merge($ChangedArray,array("LastUpdated" => "From: ".$ExistingValueStr." to: ".$this->strLastUpdated));
-            }
             $ExistingValueStr = "NULL";
             if (!is_null($ExistingObj->ObjectOwner)) {
                 $ExistingValueStr = $ExistingObj->ObjectOwner;
@@ -1028,10 +1028,10 @@
         $newAuditLogEntry->ModificationType = 'Delete';
         $ChangedArray = array_merge($ChangedArray,array("Id" => $this->intId));
         $ChangedArray = array_merge($ChangedArray,array("IsActive" => $this->blnIsActive));
+        $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
         $ChangedArray = array_merge($ChangedArray,array("ApiKey" => $this->intApiKey));
         $ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => $this->strSearchMetaInfo));
         $ChangedArray = array_merge($ChangedArray,array("ApiOperation" => $this->intApiOperation));
-        $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
         $ChangedArray = array_merge($ChangedArray,array("ObjectOwner" => $this->intObjectOwner));
         $newAuditLogEntry->AuditLogEntryDetail = json_encode($ChangedArray);
         try {
@@ -1111,10 +1111,10 @@
 
         // Update $this's local variables to match
         $this->blnIsActive = $objReloaded->blnIsActive;
+        $this->strLastUpdated = $objReloaded->strLastUpdated;
         $this->ApiKey = $objReloaded->ApiKey;
         $this->strSearchMetaInfo = $objReloaded->strSearchMetaInfo;
         $this->ApiOperation = $objReloaded->ApiOperation;
-        $this->strLastUpdated = $objReloaded->strLastUpdated;
         $this->intObjectOwner = $objReloaded->intObjectOwner;
     }
     ////////////////////
@@ -1147,6 +1147,13 @@
                  */
                 return $this->blnIsActive;
 
+            case 'LastUpdated':
+                /**
+                 * Gets the value for strLastUpdated (Read-Only Timestamp)
+                 * @return string
+                 */
+                return $this->strLastUpdated;
+
             case 'ApiKey':
                 /**
                  * Gets the value for intApiKey 
@@ -1168,13 +1175,6 @@
                  */
                 return $this->intApiOperation;
 
-            case 'LastUpdated':
-                /**
-                 * Gets the value for strLastUpdated (Read-Only Timestamp)
-                 * @return string
-                 */
-                return $this->strLastUpdated;
-
             case 'ObjectOwner':
                 /**
                  * Gets the value for intObjectOwner 
@@ -1447,10 +1447,10 @@
         $strToReturn = '<complexType name="AllowedApiOperation"><sequence>';
         $strToReturn .= '<element name="Id" type="xsd:int"/>';
         $strToReturn .= '<element name="IsActive" type="xsd:boolean"/>';
+        $strToReturn .= '<element name="LastUpdated" type="xsd:string"/>';
         $strToReturn .= '<element name="ApiKeyObject" type="xsd1:ApiKey"/>';
         $strToReturn .= '<element name="SearchMetaInfo" type="xsd:string"/>';
         $strToReturn .= '<element name="ApiOperationObject" type="xsd1:ApiOperation"/>';
-        $strToReturn .= '<element name="LastUpdated" type="xsd:string"/>';
         $strToReturn .= '<element name="ObjectOwner" type="xsd:int"/>';
         $strToReturn .= '<element name="__blnRestored" type="xsd:boolean"/>';
         $strToReturn .= '</sequence></complexType>';
@@ -1480,6 +1480,8 @@
             $objToReturn->intId = $objSoapObject->Id;
         if (property_exists($objSoapObject, 'IsActive'))
             $objToReturn->blnIsActive = $objSoapObject->IsActive;
+        if (property_exists($objSoapObject, 'LastUpdated'))
+            $objToReturn->strLastUpdated = $objSoapObject->LastUpdated;
         if ((property_exists($objSoapObject, 'ApiKeyObject')) &&
             ($objSoapObject->ApiKeyObject))
             $objToReturn->ApiKeyObject = ApiKey::GetObjectFromSoapObject($objSoapObject->ApiKeyObject);
@@ -1488,8 +1490,6 @@
         if ((property_exists($objSoapObject, 'ApiOperationObject')) &&
             ($objSoapObject->ApiOperationObject))
             $objToReturn->ApiOperationObject = ApiOperation::GetObjectFromSoapObject($objSoapObject->ApiOperationObject);
-        if (property_exists($objSoapObject, 'LastUpdated'))
-            $objToReturn->strLastUpdated = $objSoapObject->LastUpdated;
         if (property_exists($objSoapObject, 'ObjectOwner'))
             $objToReturn->intObjectOwner = $objSoapObject->ObjectOwner;
         if (property_exists($objSoapObject, '__blnRestored'))
@@ -1534,10 +1534,10 @@
         ///////////////////
         $iArray['Id'] = $this->intId;
         $iArray['IsActive'] = $this->blnIsActive;
+        $iArray['LastUpdated'] = $this->strLastUpdated;
         $iArray['ApiKey'] = $this->intApiKey;
         $iArray['SearchMetaInfo'] = $this->strSearchMetaInfo;
         $iArray['ApiOperation'] = $this->intApiOperation;
-        $iArray['LastUpdated'] = $this->strLastUpdated;
         $iArray['ObjectOwner'] = $this->intObjectOwner;
         return new ArrayIterator($iArray);
     }
@@ -1575,12 +1575,12 @@
      *
      * @property-read dxQueryNode $Id
      * @property-read dxQueryNode $IsActive
+     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $ApiKey
      * @property-read dxQueryNodeApiKey $ApiKeyObject
      * @property-read dxQueryNode $SearchMetaInfo
      * @property-read dxQueryNode $ApiOperation
      * @property-read dxQueryNodeApiOperation $ApiOperationObject
-     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $ObjectOwner
      *
      *
@@ -1597,6 +1597,8 @@
 					return new dxQueryNode('Id', 'Id', 'Integer', $this);
 				case 'IsActive':
 					return new dxQueryNode('IsActive', 'IsActive', 'Bit', $this);
+				case 'LastUpdated':
+					return new dxQueryNode('LastUpdated', 'LastUpdated', 'VarChar', $this);
 				case 'ApiKey':
 					return new dxQueryNode('ApiKey', 'ApiKey', 'Integer', $this);
 				case 'ApiKeyObject':
@@ -1607,8 +1609,6 @@
 					return new dxQueryNode('ApiOperation', 'ApiOperation', 'Integer', $this);
 				case 'ApiOperationObject':
 					return new dxQueryNodeApiOperation('ApiOperation', 'ApiOperationObject', 'Integer', $this);
-				case 'LastUpdated':
-					return new dxQueryNode('LastUpdated', 'LastUpdated', 'VarChar', $this);
 				case 'ObjectOwner':
 					return new dxQueryNode('ObjectOwner', 'ObjectOwner', 'Integer', $this);
 
@@ -1628,12 +1628,12 @@
     /**
      * @property-read dxQueryNode $Id
      * @property-read dxQueryNode $IsActive
+     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $ApiKey
      * @property-read dxQueryNodeApiKey $ApiKeyObject
      * @property-read dxQueryNode $SearchMetaInfo
      * @property-read dxQueryNode $ApiOperation
      * @property-read dxQueryNodeApiOperation $ApiOperationObject
-     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $ObjectOwner
      *
      *
@@ -1650,6 +1650,8 @@
 					return new dxQueryNode('Id', 'Id', 'integer', $this);
 				case 'IsActive':
 					return new dxQueryNode('IsActive', 'IsActive', 'boolean', $this);
+				case 'LastUpdated':
+					return new dxQueryNode('LastUpdated', 'LastUpdated', 'string', $this);
 				case 'ApiKey':
 					return new dxQueryNode('ApiKey', 'ApiKey', 'integer', $this);
 				case 'ApiKeyObject':
@@ -1660,8 +1662,6 @@
 					return new dxQueryNode('ApiOperation', 'ApiOperation', 'integer', $this);
 				case 'ApiOperationObject':
 					return new dxQueryNodeApiOperation('ApiOperation', 'ApiOperationObject', 'integer', $this);
-				case 'LastUpdated':
-					return new dxQueryNode('LastUpdated', 'LastUpdated', 'string', $this);
 				case 'ObjectOwner':
 					return new dxQueryNode('ObjectOwner', 'ObjectOwner', 'integer', $this);
 
Index: divblox/config/database/data_model_orm/generated/AdditionalAccountInformationGen.class.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- divblox/config/database/data_model_orm/generated/AdditionalAccountInformationGen.class.php	(revision 8088b90ea0ab6ee30e69c949666fde75c4664610)
+++ divblox/config/database/data_model_orm/generated/AdditionalAccountInformationGen.class.php	(date 1589789351182)
@@ -19,9 +19,9 @@
  * @property string $Type the value for strType 
  * @property string $Label the value for strLabel 
  * @property string $Value the value for strValue 
+ * @property-read string $LastUpdated the value for strLastUpdated (Read-Only Timestamp)
  * @property integer $Account the value for intAccount 
  * @property string $SearchMetaInfo the value for strSearchMetaInfo 
- * @property-read string $LastUpdated the value for strLastUpdated (Read-Only Timestamp)
  * @property integer $ObjectOwner the value for intObjectOwner 
  * @property Account $AccountObject the value for the Account object referenced by intAccount 
  * @property-read boolean $__Restored whether or not this object was restored from the database (as opposed to created new)
@@ -66,6 +66,14 @@
     const ValueDefault = null;
 
 
+    /**
+     * Protected member variable that maps to the database column AdditionalAccountInformation.LastUpdated
+     * @var string strLastUpdated
+     */
+    protected $strLastUpdated;
+    const LastUpdatedDefault = null;
+
+
     /**
      * Protected member variable that maps to the database column AdditionalAccountInformation.Account
      * @var integer intAccount
@@ -82,14 +90,6 @@
     const SearchMetaInfoDefault = null;
 
 
-    /**
-     * Protected member variable that maps to the database column AdditionalAccountInformation.LastUpdated
-     * @var string strLastUpdated
-     */
-    protected $strLastUpdated;
-    const LastUpdatedDefault = null;
-
-
     /**
      * Protected member variable that maps to the database column AdditionalAccountInformation.ObjectOwner
      * @var integer intObjectOwner
@@ -136,9 +136,9 @@
         $this->strType = AdditionalAccountInformation::TypeDefault;
         $this->strLabel = AdditionalAccountInformation::LabelDefault;
         $this->strValue = AdditionalAccountInformation::ValueDefault;
+        $this->strLastUpdated = AdditionalAccountInformation::LastUpdatedDefault;
         $this->intAccount = AdditionalAccountInformation::AccountDefault;
         $this->strSearchMetaInfo = AdditionalAccountInformation::SearchMetaInfoDefault;
-        $this->strLastUpdated = AdditionalAccountInformation::LastUpdatedDefault;
         $this->intObjectOwner = AdditionalAccountInformation::ObjectOwnerDefault;
     }
 
@@ -480,9 +480,9 @@
             $objBuilder->AddSelectItem($strTableName, 'Type', $strAliasPrefix . 'Type');
             $objBuilder->AddSelectItem($strTableName, 'Label', $strAliasPrefix . 'Label');
             $objBuilder->AddSelectItem($strTableName, 'Value', $strAliasPrefix . 'Value');
+            $objBuilder->AddSelectItem($strTableName, 'LastUpdated', $strAliasPrefix . 'LastUpdated');
             $objBuilder->AddSelectItem($strTableName, 'Account', $strAliasPrefix . 'Account');
             $objBuilder->AddSelectItem($strTableName, 'SearchMetaInfo', $strAliasPrefix . 'SearchMetaInfo');
-            $objBuilder->AddSelectItem($strTableName, 'LastUpdated', $strAliasPrefix . 'LastUpdated');
             $objBuilder->AddSelectItem($strTableName, 'ObjectOwner', $strAliasPrefix . 'ObjectOwner');
         }
     }
@@ -617,15 +617,15 @@
         $strAlias = $strAliasPrefix . 'Value';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->strValue = $objDbRow->GetColumn($strAliasName, 'Blob');
+        $strAlias = $strAliasPrefix . 'LastUpdated';
+        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
+        $objToReturn->strLastUpdated = $objDbRow->GetColumn($strAliasName, 'VarChar');
         $strAlias = $strAliasPrefix . 'Account';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->intAccount = $objDbRow->GetColumn($strAliasName, 'Integer');
         $strAlias = $strAliasPrefix . 'SearchMetaInfo';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->strSearchMetaInfo = $objDbRow->GetColumn($strAliasName, 'Blob');
-        $strAlias = $strAliasPrefix . 'LastUpdated';
-        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
-        $objToReturn->strLastUpdated = $objDbRow->GetColumn($strAliasName, 'VarChar');
         $strAlias = $strAliasPrefix . 'ObjectOwner';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->intObjectOwner = $objDbRow->GetColumn($strAliasName, 'Integer');
@@ -825,9 +825,9 @@
             $ChangedArray = array_merge($ChangedArray,array("Type" => $this->strType));
             $ChangedArray = array_merge($ChangedArray,array("Label" => $this->strLabel));
             $ChangedArray = array_merge($ChangedArray,array("Value" => $this->strValue));
+            $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
             $ChangedArray = array_merge($ChangedArray,array("Account" => $this->intAccount));
             $ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => $this->strSearchMetaInfo));
-            $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
             $ChangedArray = array_merge($ChangedArray,array("ObjectOwner" => $this->intObjectOwner));
             $newAuditLogEntry->AuditLogEntryDetail = json_encode($ChangedArray);
         } else {
@@ -864,6 +864,14 @@
                 $ChangedArray = array_merge($ChangedArray,array("Value" => array("Before" => $ExistingValueStr,"After" => $this->strValue)));
                 //$ChangedArray = array_merge($ChangedArray,array("Value" => "From: ".$ExistingValueStr." to: ".$this->strValue));
             }
+            $ExistingValueStr = "NULL";
+            if (!is_null($ExistingObj->LastUpdated)) {
+                $ExistingValueStr = $ExistingObj->LastUpdated;
+            }
+            if ($ExistingObj->LastUpdated != $this->strLastUpdated) {
+                $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => array("Before" => $ExistingValueStr,"After" => $this->strLastUpdated)));
+                //$ChangedArray = array_merge($ChangedArray,array("LastUpdated" => "From: ".$ExistingValueStr." to: ".$this->strLastUpdated));
+            }
             $ExistingValueStr = "NULL";
             if (!is_null($ExistingObj->Account)) {
                 $ExistingValueStr = $ExistingObj->Account;
@@ -880,14 +888,6 @@
                 $ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => array("Before" => $ExistingValueStr,"After" => $this->strSearchMetaInfo)));
                 //$ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => "From: ".$ExistingValueStr." to: ".$this->strSearchMetaInfo));
             }
-            $ExistingValueStr = "NULL";
-            if (!is_null($ExistingObj->LastUpdated)) {
-                $ExistingValueStr = $ExistingObj->LastUpdated;
-            }
-            if ($ExistingObj->LastUpdated != $this->strLastUpdated) {
-                $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => array("Before" => $ExistingValueStr,"After" => $this->strLastUpdated)));
-                //$ChangedArray = array_merge($ChangedArray,array("LastUpdated" => "From: ".$ExistingValueStr." to: ".$this->strLastUpdated));
-            }
             $ExistingValueStr = "NULL";
             if (!is_null($ExistingObj->ObjectOwner)) {
                 $ExistingValueStr = $ExistingObj->ObjectOwner;
@@ -1008,9 +1008,9 @@
         $ChangedArray = array_merge($ChangedArray,array("Type" => $this->strType));
         $ChangedArray = array_merge($ChangedArray,array("Label" => $this->strLabel));
         $ChangedArray = array_merge($ChangedArray,array("Value" => $this->strValue));
+        $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
         $ChangedArray = array_merge($ChangedArray,array("Account" => $this->intAccount));
         $ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => $this->strSearchMetaInfo));
-        $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
         $ChangedArray = array_merge($ChangedArray,array("ObjectOwner" => $this->intObjectOwner));
         $newAuditLogEntry->AuditLogEntryDetail = json_encode($ChangedArray);
         try {
@@ -1092,9 +1092,9 @@
         $this->strType = $objReloaded->strType;
         $this->strLabel = $objReloaded->strLabel;
         $this->strValue = $objReloaded->strValue;
+        $this->strLastUpdated = $objReloaded->strLastUpdated;
         $this->Account = $objReloaded->Account;
         $this->strSearchMetaInfo = $objReloaded->strSearchMetaInfo;
-        $this->strLastUpdated = $objReloaded->strLastUpdated;
         $this->intObjectOwner = $objReloaded->intObjectOwner;
     }
     ////////////////////
@@ -1141,6 +1141,13 @@
                  */
                 return $this->strValue;
 
+            case 'LastUpdated':
+                /**
+                 * Gets the value for strLastUpdated (Read-Only Timestamp)
+                 * @return string
+                 */
+                return $this->strLastUpdated;
+
             case 'Account':
                 /**
                  * Gets the value for intAccount 
@@ -1155,13 +1162,6 @@
                  */
                 return $this->strSearchMetaInfo;
 
-            case 'LastUpdated':
-                /**
-                 * Gets the value for strLastUpdated (Read-Only Timestamp)
-                 * @return string
-                 */
-                return $this->strLastUpdated;
-
             case 'ObjectOwner':
                 /**
                  * Gets the value for intObjectOwner 
@@ -1402,9 +1402,9 @@
         $strToReturn .= '<element name="Type" type="xsd:string"/>';
         $strToReturn .= '<element name="Label" type="xsd:string"/>';
         $strToReturn .= '<element name="Value" type="xsd:string"/>';
+        $strToReturn .= '<element name="LastUpdated" type="xsd:string"/>';
         $strToReturn .= '<element name="AccountObject" type="xsd1:Account"/>';
         $strToReturn .= '<element name="SearchMetaInfo" type="xsd:string"/>';
-        $strToReturn .= '<element name="LastUpdated" type="xsd:string"/>';
         $strToReturn .= '<element name="ObjectOwner" type="xsd:int"/>';
         $strToReturn .= '<element name="__blnRestored" type="xsd:boolean"/>';
         $strToReturn .= '</sequence></complexType>';
@@ -1437,13 +1437,13 @@
             $objToReturn->strLabel = $objSoapObject->Label;
         if (property_exists($objSoapObject, 'Value'))
             $objToReturn->strValue = $objSoapObject->Value;
+        if (property_exists($objSoapObject, 'LastUpdated'))
+            $objToReturn->strLastUpdated = $objSoapObject->LastUpdated;
         if ((property_exists($objSoapObject, 'AccountObject')) &&
             ($objSoapObject->AccountObject))
             $objToReturn->AccountObject = Account::GetObjectFromSoapObject($objSoapObject->AccountObject);
         if (property_exists($objSoapObject, 'SearchMetaInfo'))
             $objToReturn->strSearchMetaInfo = $objSoapObject->SearchMetaInfo;
-        if (property_exists($objSoapObject, 'LastUpdated'))
-            $objToReturn->strLastUpdated = $objSoapObject->LastUpdated;
         if (property_exists($objSoapObject, 'ObjectOwner'))
             $objToReturn->intObjectOwner = $objSoapObject->ObjectOwner;
         if (property_exists($objSoapObject, '__blnRestored'))
@@ -1486,9 +1486,9 @@
         $iArray['Type'] = $this->strType;
         $iArray['Label'] = $this->strLabel;
         $iArray['Value'] = $this->strValue;
+        $iArray['LastUpdated'] = $this->strLastUpdated;
         $iArray['Account'] = $this->intAccount;
         $iArray['SearchMetaInfo'] = $this->strSearchMetaInfo;
-        $iArray['LastUpdated'] = $this->strLastUpdated;
         $iArray['ObjectOwner'] = $this->intObjectOwner;
         return new ArrayIterator($iArray);
     }
@@ -1528,10 +1528,10 @@
      * @property-read dxQueryNode $Type
      * @property-read dxQueryNode $Label
      * @property-read dxQueryNode $Value
+     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $Account
      * @property-read dxQueryNodeAccount $AccountObject
      * @property-read dxQueryNode $SearchMetaInfo
-     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $ObjectOwner
      *
      *
@@ -1552,14 +1552,14 @@
 					return new dxQueryNode('Label', 'Label', 'VarChar', $this);
 				case 'Value':
 					return new dxQueryNode('Value', 'Value', 'Blob', $this);
+				case 'LastUpdated':
+					return new dxQueryNode('LastUpdated', 'LastUpdated', 'VarChar', $this);
 				case 'Account':
 					return new dxQueryNode('Account', 'Account', 'Integer', $this);
 				case 'AccountObject':
 					return new dxQueryNodeAccount('Account', 'AccountObject', 'Integer', $this);
 				case 'SearchMetaInfo':
 					return new dxQueryNode('SearchMetaInfo', 'SearchMetaInfo', 'Blob', $this);
-				case 'LastUpdated':
-					return new dxQueryNode('LastUpdated', 'LastUpdated', 'VarChar', $this);
 				case 'ObjectOwner':
 					return new dxQueryNode('ObjectOwner', 'ObjectOwner', 'Integer', $this);
 
@@ -1581,10 +1581,10 @@
      * @property-read dxQueryNode $Type
      * @property-read dxQueryNode $Label
      * @property-read dxQueryNode $Value
+     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $Account
      * @property-read dxQueryNodeAccount $AccountObject
      * @property-read dxQueryNode $SearchMetaInfo
-     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $ObjectOwner
      *
      *
@@ -1605,14 +1605,14 @@
 					return new dxQueryNode('Label', 'Label', 'string', $this);
 				case 'Value':
 					return new dxQueryNode('Value', 'Value', 'string', $this);
+				case 'LastUpdated':
+					return new dxQueryNode('LastUpdated', 'LastUpdated', 'string', $this);
 				case 'Account':
 					return new dxQueryNode('Account', 'Account', 'integer', $this);
 				case 'AccountObject':
 					return new dxQueryNodeAccount('Account', 'AccountObject', 'integer', $this);
 				case 'SearchMetaInfo':
 					return new dxQueryNode('SearchMetaInfo', 'SearchMetaInfo', 'string', $this);
-				case 'LastUpdated':
-					return new dxQueryNode('LastUpdated', 'LastUpdated', 'string', $this);
 				case 'ObjectOwner':
 					return new dxQueryNode('ObjectOwner', 'ObjectOwner', 'integer', $this);
 
Index: divblox/config/database/data_model_orm/generated/BackgroundProcessUpdateGen.class.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- divblox/config/database/data_model_orm/generated/BackgroundProcessUpdateGen.class.php	(revision 8088b90ea0ab6ee30e69c949666fde75c4664610)
+++ divblox/config/database/data_model_orm/generated/BackgroundProcessUpdateGen.class.php	(date 1589789351334)
@@ -18,9 +18,9 @@
  * @property-read integer $Id the value for intId (Read-Only PK)
  * @property dxDateTime $UpdateDateTime the value for dttUpdateDateTime 
  * @property string $UpdateMessage the value for strUpdateMessage 
+ * @property-read string $LastUpdated the value for strLastUpdated (Read-Only Timestamp)
  * @property integer $BackgroundProcess the value for intBackgroundProcess 
  * @property string $SearchMetaInfo the value for strSearchMetaInfo 
- * @property-read string $LastUpdated the value for strLastUpdated (Read-Only Timestamp)
  * @property integer $ObjectOwner the value for intObjectOwner 
  * @property BackgroundProcess $BackgroundProcessObject the value for the BackgroundProcess object referenced by intBackgroundProcess 
  * @property-read boolean $__Restored whether or not this object was restored from the database (as opposed to created new)
@@ -55,6 +55,14 @@
     const UpdateMessageDefault = null;
 
 
+    /**
+     * Protected member variable that maps to the database column BackgroundProcessUpdate.LastUpdated
+     * @var string strLastUpdated
+     */
+    protected $strLastUpdated;
+    const LastUpdatedDefault = null;
+
+
     /**
      * Protected member variable that maps to the database column BackgroundProcessUpdate.BackgroundProcess
      * @var integer intBackgroundProcess
@@ -71,14 +79,6 @@
     const SearchMetaInfoDefault = null;
 
 
-    /**
-     * Protected member variable that maps to the database column BackgroundProcessUpdate.LastUpdated
-     * @var string strLastUpdated
-     */
-    protected $strLastUpdated;
-    const LastUpdatedDefault = null;
-
-
     /**
      * Protected member variable that maps to the database column BackgroundProcessUpdate.ObjectOwner
      * @var integer intObjectOwner
@@ -124,9 +124,9 @@
         $this->intId = BackgroundProcessUpdate::IdDefault;
         $this->dttUpdateDateTime = (BackgroundProcessUpdate::UpdateDateTimeDefault === null)?null:new dxDateTime(BackgroundProcessUpdate::UpdateDateTimeDefault);
         $this->strUpdateMessage = BackgroundProcessUpdate::UpdateMessageDefault;
+        $this->strLastUpdated = BackgroundProcessUpdate::LastUpdatedDefault;
         $this->intBackgroundProcess = BackgroundProcessUpdate::BackgroundProcessDefault;
         $this->strSearchMetaInfo = BackgroundProcessUpdate::SearchMetaInfoDefault;
-        $this->strLastUpdated = BackgroundProcessUpdate::LastUpdatedDefault;
         $this->intObjectOwner = BackgroundProcessUpdate::ObjectOwnerDefault;
     }
 
@@ -467,9 +467,9 @@
             $objBuilder->AddSelectItem($strTableName, 'Id', $strAliasPrefix . 'Id');
             $objBuilder->AddSelectItem($strTableName, 'UpdateDateTime', $strAliasPrefix . 'UpdateDateTime');
             $objBuilder->AddSelectItem($strTableName, 'UpdateMessage', $strAliasPrefix . 'UpdateMessage');
+            $objBuilder->AddSelectItem($strTableName, 'LastUpdated', $strAliasPrefix . 'LastUpdated');
             $objBuilder->AddSelectItem($strTableName, 'BackgroundProcess', $strAliasPrefix . 'BackgroundProcess');
             $objBuilder->AddSelectItem($strTableName, 'SearchMetaInfo', $strAliasPrefix . 'SearchMetaInfo');
-            $objBuilder->AddSelectItem($strTableName, 'LastUpdated', $strAliasPrefix . 'LastUpdated');
             $objBuilder->AddSelectItem($strTableName, 'ObjectOwner', $strAliasPrefix . 'ObjectOwner');
         }
     }
@@ -601,15 +601,15 @@
         $strAlias = $strAliasPrefix . 'UpdateMessage';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->strUpdateMessage = $objDbRow->GetColumn($strAliasName, 'Blob');
+        $strAlias = $strAliasPrefix . 'LastUpdated';
+        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
+        $objToReturn->strLastUpdated = $objDbRow->GetColumn($strAliasName, 'VarChar');
         $strAlias = $strAliasPrefix . 'BackgroundProcess';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->intBackgroundProcess = $objDbRow->GetColumn($strAliasName, 'Integer');
         $strAlias = $strAliasPrefix . 'SearchMetaInfo';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->strSearchMetaInfo = $objDbRow->GetColumn($strAliasName, 'Blob');
-        $strAlias = $strAliasPrefix . 'LastUpdated';
-        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
-        $objToReturn->strLastUpdated = $objDbRow->GetColumn($strAliasName, 'VarChar');
         $strAlias = $strAliasPrefix . 'ObjectOwner';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->intObjectOwner = $objDbRow->GetColumn($strAliasName, 'Integer');
@@ -808,9 +808,9 @@
             $ChangedArray = array_merge($ChangedArray,array("Id" => $this->intId));
             $ChangedArray = array_merge($ChangedArray,array("UpdateDateTime" => $this->dttUpdateDateTime));
             $ChangedArray = array_merge($ChangedArray,array("UpdateMessage" => $this->strUpdateMessage));
+            $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
             $ChangedArray = array_merge($ChangedArray,array("BackgroundProcess" => $this->intBackgroundProcess));
             $ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => $this->strSearchMetaInfo));
-            $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
             $ChangedArray = array_merge($ChangedArray,array("ObjectOwner" => $this->intObjectOwner));
             $newAuditLogEntry->AuditLogEntryDetail = json_encode($ChangedArray);
         } else {
@@ -839,6 +839,14 @@
                 $ChangedArray = array_merge($ChangedArray,array("UpdateMessage" => array("Before" => $ExistingValueStr,"After" => $this->strUpdateMessage)));
                 //$ChangedArray = array_merge($ChangedArray,array("UpdateMessage" => "From: ".$ExistingValueStr." to: ".$this->strUpdateMessage));
             }
+            $ExistingValueStr = "NULL";
+            if (!is_null($ExistingObj->LastUpdated)) {
+                $ExistingValueStr = $ExistingObj->LastUpdated;
+            }
+            if ($ExistingObj->LastUpdated != $this->strLastUpdated) {
+                $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => array("Before" => $ExistingValueStr,"After" => $this->strLastUpdated)));
+                //$ChangedArray = array_merge($ChangedArray,array("LastUpdated" => "From: ".$ExistingValueStr." to: ".$this->strLastUpdated));
+            }
             $ExistingValueStr = "NULL";
             if (!is_null($ExistingObj->BackgroundProcess)) {
                 $ExistingValueStr = $ExistingObj->BackgroundProcess;
@@ -855,14 +863,6 @@
                 $ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => array("Before" => $ExistingValueStr,"After" => $this->strSearchMetaInfo)));
                 //$ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => "From: ".$ExistingValueStr." to: ".$this->strSearchMetaInfo));
             }
-            $ExistingValueStr = "NULL";
-            if (!is_null($ExistingObj->LastUpdated)) {
-                $ExistingValueStr = $ExistingObj->LastUpdated;
-            }
-            if ($ExistingObj->LastUpdated != $this->strLastUpdated) {
-                $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => array("Before" => $ExistingValueStr,"After" => $this->strLastUpdated)));
-                //$ChangedArray = array_merge($ChangedArray,array("LastUpdated" => "From: ".$ExistingValueStr." to: ".$this->strLastUpdated));
-            }
             $ExistingValueStr = "NULL";
             if (!is_null($ExistingObj->ObjectOwner)) {
                 $ExistingValueStr = $ExistingObj->ObjectOwner;
@@ -979,9 +979,9 @@
         $ChangedArray = array_merge($ChangedArray,array("Id" => $this->intId));
         $ChangedArray = array_merge($ChangedArray,array("UpdateDateTime" => $this->dttUpdateDateTime));
         $ChangedArray = array_merge($ChangedArray,array("UpdateMessage" => $this->strUpdateMessage));
+        $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
         $ChangedArray = array_merge($ChangedArray,array("BackgroundProcess" => $this->intBackgroundProcess));
         $ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => $this->strSearchMetaInfo));
-        $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
         $ChangedArray = array_merge($ChangedArray,array("ObjectOwner" => $this->intObjectOwner));
         $newAuditLogEntry->AuditLogEntryDetail = json_encode($ChangedArray);
         try {
@@ -1062,9 +1062,9 @@
         // Update $this's local variables to match
         $this->dttUpdateDateTime = $objReloaded->dttUpdateDateTime;
         $this->strUpdateMessage = $objReloaded->strUpdateMessage;
+        $this->strLastUpdated = $objReloaded->strLastUpdated;
         $this->BackgroundProcess = $objReloaded->BackgroundProcess;
         $this->strSearchMetaInfo = $objReloaded->strSearchMetaInfo;
-        $this->strLastUpdated = $objReloaded->strLastUpdated;
         $this->intObjectOwner = $objReloaded->intObjectOwner;
     }
     ////////////////////
@@ -1104,6 +1104,13 @@
                  */
                 return $this->strUpdateMessage;
 
+            case 'LastUpdated':
+                /**
+                 * Gets the value for strLastUpdated (Read-Only Timestamp)
+                 * @return string
+                 */
+                return $this->strLastUpdated;
+
             case 'BackgroundProcess':
                 /**
                  * Gets the value for intBackgroundProcess 
@@ -1118,13 +1125,6 @@
                  */
                 return $this->strSearchMetaInfo;
 
-            case 'LastUpdated':
-                /**
-                 * Gets the value for strLastUpdated (Read-Only Timestamp)
-                 * @return string
-                 */
-                return $this->strLastUpdated;
-
             case 'ObjectOwner':
                 /**
                  * Gets the value for intObjectOwner 
@@ -1351,9 +1351,9 @@
         $strToReturn .= '<element name="Id" type="xsd:int"/>';
         $strToReturn .= '<element name="UpdateDateTime" type="xsd:dateTime"/>';
         $strToReturn .= '<element name="UpdateMessage" type="xsd:string"/>';
+        $strToReturn .= '<element name="LastUpdated" type="xsd:string"/>';
         $strToReturn .= '<element name="BackgroundProcessObject" type="xsd1:BackgroundProcess"/>';
         $strToReturn .= '<element name="SearchMetaInfo" type="xsd:string"/>';
-        $strToReturn .= '<element name="LastUpdated" type="xsd:string"/>';
         $strToReturn .= '<element name="ObjectOwner" type="xsd:int"/>';
         $strToReturn .= '<element name="__blnRestored" type="xsd:boolean"/>';
         $strToReturn .= '</sequence></complexType>';
@@ -1384,13 +1384,13 @@
             $objToReturn->dttUpdateDateTime = new dxDateTime($objSoapObject->UpdateDateTime);
         if (property_exists($objSoapObject, 'UpdateMessage'))
             $objToReturn->strUpdateMessage = $objSoapObject->UpdateMessage;
+        if (property_exists($objSoapObject, 'LastUpdated'))
+            $objToReturn->strLastUpdated = $objSoapObject->LastUpdated;
         if ((property_exists($objSoapObject, 'BackgroundProcessObject')) &&
             ($objSoapObject->BackgroundProcessObject))
             $objToReturn->BackgroundProcessObject = BackgroundProcess::GetObjectFromSoapObject($objSoapObject->BackgroundProcessObject);
         if (property_exists($objSoapObject, 'SearchMetaInfo'))
             $objToReturn->strSearchMetaInfo = $objSoapObject->SearchMetaInfo;
-        if (property_exists($objSoapObject, 'LastUpdated'))
-            $objToReturn->strLastUpdated = $objSoapObject->LastUpdated;
         if (property_exists($objSoapObject, 'ObjectOwner'))
             $objToReturn->intObjectOwner = $objSoapObject->ObjectOwner;
         if (property_exists($objSoapObject, '__blnRestored'))
@@ -1434,9 +1434,9 @@
         $iArray['Id'] = $this->intId;
         $iArray['UpdateDateTime'] = $this->dttUpdateDateTime;
         $iArray['UpdateMessage'] = $this->strUpdateMessage;
+        $iArray['LastUpdated'] = $this->strLastUpdated;
         $iArray['BackgroundProcess'] = $this->intBackgroundProcess;
         $iArray['SearchMetaInfo'] = $this->strSearchMetaInfo;
-        $iArray['LastUpdated'] = $this->strLastUpdated;
         $iArray['ObjectOwner'] = $this->intObjectOwner;
         return new ArrayIterator($iArray);
     }
@@ -1475,10 +1475,10 @@
      * @property-read dxQueryNode $Id
      * @property-read dxQueryNode $UpdateDateTime
      * @property-read dxQueryNode $UpdateMessage
+     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $BackgroundProcess
      * @property-read dxQueryNodeBackgroundProcess $BackgroundProcessObject
      * @property-read dxQueryNode $SearchMetaInfo
-     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $ObjectOwner
      *
      *
@@ -1497,14 +1497,14 @@
 					return new dxQueryNode('UpdateDateTime', 'UpdateDateTime', 'DateTime', $this);
 				case 'UpdateMessage':
 					return new dxQueryNode('UpdateMessage', 'UpdateMessage', 'Blob', $this);
+				case 'LastUpdated':
+					return new dxQueryNode('LastUpdated', 'LastUpdated', 'VarChar', $this);
 				case 'BackgroundProcess':
 					return new dxQueryNode('BackgroundProcess', 'BackgroundProcess', 'Integer', $this);
 				case 'BackgroundProcessObject':
 					return new dxQueryNodeBackgroundProcess('BackgroundProcess', 'BackgroundProcessObject', 'Integer', $this);
 				case 'SearchMetaInfo':
 					return new dxQueryNode('SearchMetaInfo', 'SearchMetaInfo', 'Blob', $this);
-				case 'LastUpdated':
-					return new dxQueryNode('LastUpdated', 'LastUpdated', 'VarChar', $this);
 				case 'ObjectOwner':
 					return new dxQueryNode('ObjectOwner', 'ObjectOwner', 'Integer', $this);
 
@@ -1525,10 +1525,10 @@
      * @property-read dxQueryNode $Id
      * @property-read dxQueryNode $UpdateDateTime
      * @property-read dxQueryNode $UpdateMessage
+     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $BackgroundProcess
      * @property-read dxQueryNodeBackgroundProcess $BackgroundProcessObject
      * @property-read dxQueryNode $SearchMetaInfo
-     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $ObjectOwner
      *
      *
@@ -1547,14 +1547,14 @@
 					return new dxQueryNode('UpdateDateTime', 'UpdateDateTime', 'dxDateTime', $this);
 				case 'UpdateMessage':
 					return new dxQueryNode('UpdateMessage', 'UpdateMessage', 'string', $this);
+				case 'LastUpdated':
+					return new dxQueryNode('LastUpdated', 'LastUpdated', 'string', $this);
 				case 'BackgroundProcess':
 					return new dxQueryNode('BackgroundProcess', 'BackgroundProcess', 'integer', $this);
 				case 'BackgroundProcessObject':
 					return new dxQueryNodeBackgroundProcess('BackgroundProcess', 'BackgroundProcessObject', 'integer', $this);
 				case 'SearchMetaInfo':
 					return new dxQueryNode('SearchMetaInfo', 'SearchMetaInfo', 'string', $this);
-				case 'LastUpdated':
-					return new dxQueryNode('LastUpdated', 'LastUpdated', 'string', $this);
 				case 'ObjectOwner':
 					return new dxQueryNode('ObjectOwner', 'ObjectOwner', 'integer', $this);
 
Index: divblox/config/database/data_model_orm/generated/AccountGen.class.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- divblox/config/database/data_model_orm/generated/AccountGen.class.php	(revision 8088b90ea0ab6ee30e69c949666fde75c4664610)
+++ divblox/config/database/data_model_orm/generated/AccountGen.class.php	(date 1589789351158)
@@ -42,9 +42,9 @@
  * @property string $Gender the value for strGender 
  * @property boolean $AccessBlocked the value for blnAccessBlocked 
  * @property string $BlockedReason the value for strBlockedReason 
+ * @property-read string $LastUpdated the value for strLastUpdated (Read-Only Timestamp)
  * @property integer $UserRole the value for intUserRole 
  * @property string $SearchMetaInfo the value for strSearchMetaInfo 
- * @property-read string $LastUpdated the value for strLastUpdated (Read-Only Timestamp)
  * @property integer $ObjectOwner the value for intObjectOwner 
  * @property UserRole $UserRoleObject the value for the UserRole object referenced by intUserRole 
  * @property-read AdditionalAccountInformation $_AdditionalAccountInformation the value for the private _objAdditionalAccountInformation (Read-Only) if set due to an expansion on the AdditionalAccountInformation.Account reverse relationship
@@ -302,6 +302,14 @@
     const BlockedReasonDefault = null;
 
 
+    /**
+     * Protected member variable that maps to the database column Account.LastUpdated
+     * @var string strLastUpdated
+     */
+    protected $strLastUpdated;
+    const LastUpdatedDefault = null;
+
+
     /**
      * Protected member variable that maps to the database column Account.UserRole
      * @var integer intUserRole
@@ -318,14 +326,6 @@
     const SearchMetaInfoDefault = null;
 
 
-    /**
-     * Protected member variable that maps to the database column Account.LastUpdated
-     * @var string strLastUpdated
-     */
-    protected $strLastUpdated;
-    const LastUpdatedDefault = null;
-
-
     /**
      * Protected member variable that maps to the database column Account.ObjectOwner
      * @var integer intObjectOwner
@@ -459,9 +459,9 @@
         $this->strGender = Account::GenderDefault;
         $this->blnAccessBlocked = Account::AccessBlockedDefault;
         $this->strBlockedReason = Account::BlockedReasonDefault;
+        $this->strLastUpdated = Account::LastUpdatedDefault;
         $this->intUserRole = Account::UserRoleDefault;
         $this->strSearchMetaInfo = Account::SearchMetaInfoDefault;
-        $this->strLastUpdated = Account::LastUpdatedDefault;
         $this->intObjectOwner = Account::ObjectOwnerDefault;
     }
 
@@ -826,9 +826,9 @@
             $objBuilder->AddSelectItem($strTableName, 'Gender', $strAliasPrefix . 'Gender');
             $objBuilder->AddSelectItem($strTableName, 'AccessBlocked', $strAliasPrefix . 'AccessBlocked');
             $objBuilder->AddSelectItem($strTableName, 'BlockedReason', $strAliasPrefix . 'BlockedReason');
+            $objBuilder->AddSelectItem($strTableName, 'LastUpdated', $strAliasPrefix . 'LastUpdated');
             $objBuilder->AddSelectItem($strTableName, 'UserRole', $strAliasPrefix . 'UserRole');
             $objBuilder->AddSelectItem($strTableName, 'SearchMetaInfo', $strAliasPrefix . 'SearchMetaInfo');
-            $objBuilder->AddSelectItem($strTableName, 'LastUpdated', $strAliasPrefix . 'LastUpdated');
             $objBuilder->AddSelectItem($strTableName, 'ObjectOwner', $strAliasPrefix . 'ObjectOwner');
         }
     }
@@ -1032,15 +1032,15 @@
         $strAlias = $strAliasPrefix . 'BlockedReason';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->strBlockedReason = $objDbRow->GetColumn($strAliasName, 'Blob');
+        $strAlias = $strAliasPrefix . 'LastUpdated';
+        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
+        $objToReturn->strLastUpdated = $objDbRow->GetColumn($strAliasName, 'VarChar');
         $strAlias = $strAliasPrefix . 'UserRole';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->intUserRole = $objDbRow->GetColumn($strAliasName, 'Integer');
         $strAlias = $strAliasPrefix . 'SearchMetaInfo';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->strSearchMetaInfo = $objDbRow->GetColumn($strAliasName, 'Blob');
-        $strAlias = $strAliasPrefix . 'LastUpdated';
-        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
-        $objToReturn->strLastUpdated = $objDbRow->GetColumn($strAliasName, 'VarChar');
         $strAlias = $strAliasPrefix . 'ObjectOwner';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->intObjectOwner = $objDbRow->GetColumn($strAliasName, 'Integer');
@@ -1339,9 +1339,9 @@
             $ChangedArray = array_merge($ChangedArray,array("Gender" => $this->strGender));
             $ChangedArray = array_merge($ChangedArray,array("AccessBlocked" => $this->blnAccessBlocked));
             $ChangedArray = array_merge($ChangedArray,array("BlockedReason" => $this->strBlockedReason));
+            $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
             $ChangedArray = array_merge($ChangedArray,array("UserRole" => $this->intUserRole));
             $ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => $this->strSearchMetaInfo));
-            $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
             $ChangedArray = array_merge($ChangedArray,array("ObjectOwner" => $this->intObjectOwner));
             $newAuditLogEntry->AuditLogEntryDetail = json_encode($ChangedArray);
         } else {
@@ -1562,6 +1562,14 @@
                 $ChangedArray = array_merge($ChangedArray,array("BlockedReason" => array("Before" => $ExistingValueStr,"After" => $this->strBlockedReason)));
                 //$ChangedArray = array_merge($ChangedArray,array("BlockedReason" => "From: ".$ExistingValueStr." to: ".$this->strBlockedReason));
             }
+            $ExistingValueStr = "NULL";
+            if (!is_null($ExistingObj->LastUpdated)) {
+                $ExistingValueStr = $ExistingObj->LastUpdated;
+            }
+            if ($ExistingObj->LastUpdated != $this->strLastUpdated) {
+                $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => array("Before" => $ExistingValueStr,"After" => $this->strLastUpdated)));
+                //$ChangedArray = array_merge($ChangedArray,array("LastUpdated" => "From: ".$ExistingValueStr." to: ".$this->strLastUpdated));
+            }
             $ExistingValueStr = "NULL";
             if (!is_null($ExistingObj->UserRole)) {
                 $ExistingValueStr = $ExistingObj->UserRole;
@@ -1578,14 +1586,6 @@
                 $ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => array("Before" => $ExistingValueStr,"After" => $this->strSearchMetaInfo)));
                 //$ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => "From: ".$ExistingValueStr." to: ".$this->strSearchMetaInfo));
             }
-            $ExistingValueStr = "NULL";
-            if (!is_null($ExistingObj->LastUpdated)) {
-                $ExistingValueStr = $ExistingObj->LastUpdated;
-            }
-            if ($ExistingObj->LastUpdated != $this->strLastUpdated) {
-                $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => array("Before" => $ExistingValueStr,"After" => $this->strLastUpdated)));
-                //$ChangedArray = array_merge($ChangedArray,array("LastUpdated" => "From: ".$ExistingValueStr." to: ".$this->strLastUpdated));
-            }
             $ExistingValueStr = "NULL";
             if (!is_null($ExistingObj->ObjectOwner)) {
                 $ExistingValueStr = $ExistingObj->ObjectOwner;
@@ -1798,9 +1798,9 @@
         $ChangedArray = array_merge($ChangedArray,array("Gender" => $this->strGender));
         $ChangedArray = array_merge($ChangedArray,array("AccessBlocked" => $this->blnAccessBlocked));
         $ChangedArray = array_merge($ChangedArray,array("BlockedReason" => $this->strBlockedReason));
+        $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
         $ChangedArray = array_merge($ChangedArray,array("UserRole" => $this->intUserRole));
         $ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => $this->strSearchMetaInfo));
-        $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
         $ChangedArray = array_merge($ChangedArray,array("ObjectOwner" => $this->intObjectOwner));
         $newAuditLogEntry->AuditLogEntryDetail = json_encode($ChangedArray);
         try {
@@ -1905,9 +1905,9 @@
         $this->strGender = $objReloaded->strGender;
         $this->blnAccessBlocked = $objReloaded->blnAccessBlocked;
         $this->strBlockedReason = $objReloaded->strBlockedReason;
+        $this->strLastUpdated = $objReloaded->strLastUpdated;
         $this->UserRole = $objReloaded->UserRole;
         $this->strSearchMetaInfo = $objReloaded->strSearchMetaInfo;
-        $this->strLastUpdated = $objReloaded->strLastUpdated;
         $this->intObjectOwner = $objReloaded->intObjectOwner;
     }
     ////////////////////
@@ -2115,6 +2115,13 @@
                  */
                 return $this->strBlockedReason;
 
+            case 'LastUpdated':
+                /**
+                 * Gets the value for strLastUpdated (Read-Only Timestamp)
+                 * @return string
+                 */
+                return $this->strLastUpdated;
+
             case 'UserRole':
                 /**
                  * Gets the value for intUserRole 
@@ -2129,13 +2136,6 @@
                  */
                 return $this->strSearchMetaInfo;
 
-            case 'LastUpdated':
-                /**
-                 * Gets the value for strLastUpdated (Read-Only Timestamp)
-                 * @return string
-                 */
-                return $this->strLastUpdated;
-
             case 'ObjectOwner':
                 /**
                  * Gets the value for intObjectOwner 
@@ -3358,9 +3358,9 @@
         $strToReturn .= '<element name="Gender" type="xsd:string"/>';
         $strToReturn .= '<element name="AccessBlocked" type="xsd:boolean"/>';
         $strToReturn .= '<element name="BlockedReason" type="xsd:string"/>';
+        $strToReturn .= '<element name="LastUpdated" type="xsd:string"/>';
         $strToReturn .= '<element name="UserRoleObject" type="xsd1:UserRole"/>';
         $strToReturn .= '<element name="SearchMetaInfo" type="xsd:string"/>';
-        $strToReturn .= '<element name="LastUpdated" type="xsd:string"/>';
         $strToReturn .= '<element name="ObjectOwner" type="xsd:int"/>';
         $strToReturn .= '<element name="__blnRestored" type="xsd:boolean"/>';
         $strToReturn .= '</sequence></complexType>';
@@ -3439,13 +3439,13 @@
             $objToReturn->blnAccessBlocked = $objSoapObject->AccessBlocked;
         if (property_exists($objSoapObject, 'BlockedReason'))
             $objToReturn->strBlockedReason = $objSoapObject->BlockedReason;
+        if (property_exists($objSoapObject, 'LastUpdated'))
+            $objToReturn->strLastUpdated = $objSoapObject->LastUpdated;
         if ((property_exists($objSoapObject, 'UserRoleObject')) &&
             ($objSoapObject->UserRoleObject))
             $objToReturn->UserRoleObject = UserRole::GetObjectFromSoapObject($objSoapObject->UserRoleObject);
         if (property_exists($objSoapObject, 'SearchMetaInfo'))
             $objToReturn->strSearchMetaInfo = $objSoapObject->SearchMetaInfo;
-        if (property_exists($objSoapObject, 'LastUpdated'))
-            $objToReturn->strLastUpdated = $objSoapObject->LastUpdated;
         if (property_exists($objSoapObject, 'ObjectOwner'))
             $objToReturn->intObjectOwner = $objSoapObject->ObjectOwner;
         if (property_exists($objSoapObject, '__blnRestored'))
@@ -3513,9 +3513,9 @@
         $iArray['Gender'] = $this->strGender;
         $iArray['AccessBlocked'] = $this->blnAccessBlocked;
         $iArray['BlockedReason'] = $this->strBlockedReason;
+        $iArray['LastUpdated'] = $this->strLastUpdated;
         $iArray['UserRole'] = $this->intUserRole;
         $iArray['SearchMetaInfo'] = $this->strSearchMetaInfo;
-        $iArray['LastUpdated'] = $this->strLastUpdated;
         $iArray['ObjectOwner'] = $this->intObjectOwner;
         return new ArrayIterator($iArray);
     }
@@ -3578,10 +3578,10 @@
      * @property-read dxQueryNode $Gender
      * @property-read dxQueryNode $AccessBlocked
      * @property-read dxQueryNode $BlockedReason
+     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $UserRole
      * @property-read dxQueryNodeUserRole $UserRoleObject
      * @property-read dxQueryNode $SearchMetaInfo
-     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $ObjectOwner
      *
      *
@@ -3652,14 +3652,14 @@
 					return new dxQueryNode('AccessBlocked', 'AccessBlocked', 'Bit', $this);
 				case 'BlockedReason':
 					return new dxQueryNode('BlockedReason', 'BlockedReason', 'Blob', $this);
+				case 'LastUpdated':
+					return new dxQueryNode('LastUpdated', 'LastUpdated', 'VarChar', $this);
 				case 'UserRole':
 					return new dxQueryNode('UserRole', 'UserRole', 'Integer', $this);
 				case 'UserRoleObject':
 					return new dxQueryNodeUserRole('UserRole', 'UserRoleObject', 'Integer', $this);
 				case 'SearchMetaInfo':
 					return new dxQueryNode('SearchMetaInfo', 'SearchMetaInfo', 'Blob', $this);
-				case 'LastUpdated':
-					return new dxQueryNode('LastUpdated', 'LastUpdated', 'VarChar', $this);
 				case 'ObjectOwner':
 					return new dxQueryNode('ObjectOwner', 'ObjectOwner', 'Integer', $this);
 				case 'AdditionalAccountInformation':
@@ -3712,10 +3712,10 @@
      * @property-read dxQueryNode $Gender
      * @property-read dxQueryNode $AccessBlocked
      * @property-read dxQueryNode $BlockedReason
+     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $UserRole
      * @property-read dxQueryNodeUserRole $UserRoleObject
      * @property-read dxQueryNode $SearchMetaInfo
-     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $ObjectOwner
      *
      *
@@ -3786,14 +3786,14 @@
 					return new dxQueryNode('AccessBlocked', 'AccessBlocked', 'boolean', $this);
 				case 'BlockedReason':
 					return new dxQueryNode('BlockedReason', 'BlockedReason', 'string', $this);
+				case 'LastUpdated':
+					return new dxQueryNode('LastUpdated', 'LastUpdated', 'string', $this);
 				case 'UserRole':
 					return new dxQueryNode('UserRole', 'UserRole', 'integer', $this);
 				case 'UserRoleObject':
 					return new dxQueryNodeUserRole('UserRole', 'UserRoleObject', 'integer', $this);
 				case 'SearchMetaInfo':
 					return new dxQueryNode('SearchMetaInfo', 'SearchMetaInfo', 'string', $this);
-				case 'LastUpdated':
-					return new dxQueryNode('LastUpdated', 'LastUpdated', 'string', $this);
 				case 'ObjectOwner':
 					return new dxQueryNode('ObjectOwner', 'ObjectOwner', 'integer', $this);
 				case 'AdditionalAccountInformation':
Index: divblox/config/database/data_model_orm/generated/ClientConnectionGen.class.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- divblox/config/database/data_model_orm/generated/ClientConnectionGen.class.php	(revision 8088b90ea0ab6ee30e69c949666fde75c4664610)
+++ divblox/config/database/data_model_orm/generated/ClientConnectionGen.class.php	(date 1589789351382)
@@ -19,9 +19,9 @@
  * @property string $ClientIpAddress the value for strClientIpAddress 
  * @property string $ClientUserAgent the value for strClientUserAgent 
  * @property dxDateTime $UpdateDateTime the value for dttUpdateDateTime 
+ * @property-read string $LastUpdated the value for strLastUpdated (Read-Only Timestamp)
  * @property integer $Account the value for intAccount 
  * @property string $SearchMetaInfo the value for strSearchMetaInfo 
- * @property-read string $LastUpdated the value for strLastUpdated (Read-Only Timestamp)
  * @property integer $ObjectOwner the value for intObjectOwner 
  * @property Account $AccountObject the value for the Account object referenced by intAccount 
  * @property-read ClientAuthenticationToken $_ClientAuthenticationToken the value for the private _objClientAuthenticationToken (Read-Only) if set due to an expansion on the ClientAuthenticationToken.ClientConnection reverse relationship
@@ -68,6 +68,14 @@
     const UpdateDateTimeDefault = null;
 
 
+    /**
+     * Protected member variable that maps to the database column ClientConnection.LastUpdated
+     * @var string strLastUpdated
+     */
+    protected $strLastUpdated;
+    const LastUpdatedDefault = null;
+
+
     /**
      * Protected member variable that maps to the database column ClientConnection.Account
      * @var integer intAccount
@@ -84,14 +92,6 @@
     const SearchMetaInfoDefault = null;
 
 
-    /**
-     * Protected member variable that maps to the database column ClientConnection.LastUpdated
-     * @var string strLastUpdated
-     */
-    protected $strLastUpdated;
-    const LastUpdatedDefault = null;
-
-
     /**
      * Protected member variable that maps to the database column ClientConnection.ObjectOwner
      * @var integer intObjectOwner
@@ -154,9 +154,9 @@
         $this->strClientIpAddress = ClientConnection::ClientIpAddressDefault;
         $this->strClientUserAgent = ClientConnection::ClientUserAgentDefault;
         $this->dttUpdateDateTime = (ClientConnection::UpdateDateTimeDefault === null)?null:new dxDateTime(ClientConnection::UpdateDateTimeDefault);
+        $this->strLastUpdated = ClientConnection::LastUpdatedDefault;
         $this->intAccount = ClientConnection::AccountDefault;
         $this->strSearchMetaInfo = ClientConnection::SearchMetaInfoDefault;
-        $this->strLastUpdated = ClientConnection::LastUpdatedDefault;
         $this->intObjectOwner = ClientConnection::ObjectOwnerDefault;
     }
 
@@ -498,9 +498,9 @@
             $objBuilder->AddSelectItem($strTableName, 'ClientIpAddress', $strAliasPrefix . 'ClientIpAddress');
             $objBuilder->AddSelectItem($strTableName, 'ClientUserAgent', $strAliasPrefix . 'ClientUserAgent');
             $objBuilder->AddSelectItem($strTableName, 'UpdateDateTime', $strAliasPrefix . 'UpdateDateTime');
+            $objBuilder->AddSelectItem($strTableName, 'LastUpdated', $strAliasPrefix . 'LastUpdated');
             $objBuilder->AddSelectItem($strTableName, 'Account', $strAliasPrefix . 'Account');
             $objBuilder->AddSelectItem($strTableName, 'SearchMetaInfo', $strAliasPrefix . 'SearchMetaInfo');
-            $objBuilder->AddSelectItem($strTableName, 'LastUpdated', $strAliasPrefix . 'LastUpdated');
             $objBuilder->AddSelectItem($strTableName, 'ObjectOwner', $strAliasPrefix . 'ObjectOwner');
         }
     }
@@ -635,15 +635,15 @@
         $strAlias = $strAliasPrefix . 'UpdateDateTime';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->dttUpdateDateTime = $objDbRow->GetColumn($strAliasName, 'DateTime');
+        $strAlias = $strAliasPrefix . 'LastUpdated';
+        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
+        $objToReturn->strLastUpdated = $objDbRow->GetColumn($strAliasName, 'VarChar');
         $strAlias = $strAliasPrefix . 'Account';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->intAccount = $objDbRow->GetColumn($strAliasName, 'Integer');
         $strAlias = $strAliasPrefix . 'SearchMetaInfo';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->strSearchMetaInfo = $objDbRow->GetColumn($strAliasName, 'Blob');
-        $strAlias = $strAliasPrefix . 'LastUpdated';
-        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
-        $objToReturn->strLastUpdated = $objDbRow->GetColumn($strAliasName, 'VarChar');
         $strAlias = $strAliasPrefix . 'ObjectOwner';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->intObjectOwner = $objDbRow->GetColumn($strAliasName, 'Integer');
@@ -858,9 +858,9 @@
             $ChangedArray = array_merge($ChangedArray,array("ClientIpAddress" => $this->strClientIpAddress));
             $ChangedArray = array_merge($ChangedArray,array("ClientUserAgent" => $this->strClientUserAgent));
             $ChangedArray = array_merge($ChangedArray,array("UpdateDateTime" => $this->dttUpdateDateTime));
+            $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
             $ChangedArray = array_merge($ChangedArray,array("Account" => $this->intAccount));
             $ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => $this->strSearchMetaInfo));
-            $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
             $ChangedArray = array_merge($ChangedArray,array("ObjectOwner" => $this->intObjectOwner));
             $newAuditLogEntry->AuditLogEntryDetail = json_encode($ChangedArray);
         } else {
@@ -897,6 +897,14 @@
                 $ChangedArray = array_merge($ChangedArray,array("UpdateDateTime" => array("Before" => $ExistingValueStr,"After" => $this->dttUpdateDateTime)));
                 //$ChangedArray = array_merge($ChangedArray,array("UpdateDateTime" => "From: ".$ExistingValueStr." to: ".$this->dttUpdateDateTime));
             }
+            $ExistingValueStr = "NULL";
+            if (!is_null($ExistingObj->LastUpdated)) {
+                $ExistingValueStr = $ExistingObj->LastUpdated;
+            }
+            if ($ExistingObj->LastUpdated != $this->strLastUpdated) {
+                $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => array("Before" => $ExistingValueStr,"After" => $this->strLastUpdated)));
+                //$ChangedArray = array_merge($ChangedArray,array("LastUpdated" => "From: ".$ExistingValueStr." to: ".$this->strLastUpdated));
+            }
             $ExistingValueStr = "NULL";
             if (!is_null($ExistingObj->Account)) {
                 $ExistingValueStr = $ExistingObj->Account;
@@ -913,14 +921,6 @@
                 $ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => array("Before" => $ExistingValueStr,"After" => $this->strSearchMetaInfo)));
                 //$ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => "From: ".$ExistingValueStr." to: ".$this->strSearchMetaInfo));
             }
-            $ExistingValueStr = "NULL";
-            if (!is_null($ExistingObj->LastUpdated)) {
-                $ExistingValueStr = $ExistingObj->LastUpdated;
-            }
-            if ($ExistingObj->LastUpdated != $this->strLastUpdated) {
-                $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => array("Before" => $ExistingValueStr,"After" => $this->strLastUpdated)));
-                //$ChangedArray = array_merge($ChangedArray,array("LastUpdated" => "From: ".$ExistingValueStr." to: ".$this->strLastUpdated));
-            }
             $ExistingValueStr = "NULL";
             if (!is_null($ExistingObj->ObjectOwner)) {
                 $ExistingValueStr = $ExistingObj->ObjectOwner;
@@ -1041,9 +1041,9 @@
         $ChangedArray = array_merge($ChangedArray,array("ClientIpAddress" => $this->strClientIpAddress));
         $ChangedArray = array_merge($ChangedArray,array("ClientUserAgent" => $this->strClientUserAgent));
         $ChangedArray = array_merge($ChangedArray,array("UpdateDateTime" => $this->dttUpdateDateTime));
+        $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
         $ChangedArray = array_merge($ChangedArray,array("Account" => $this->intAccount));
         $ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => $this->strSearchMetaInfo));
-        $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
         $ChangedArray = array_merge($ChangedArray,array("ObjectOwner" => $this->intObjectOwner));
         $newAuditLogEntry->AuditLogEntryDetail = json_encode($ChangedArray);
         try {
@@ -1125,9 +1125,9 @@
         $this->strClientIpAddress = $objReloaded->strClientIpAddress;
         $this->strClientUserAgent = $objReloaded->strClientUserAgent;
         $this->dttUpdateDateTime = $objReloaded->dttUpdateDateTime;
+        $this->strLastUpdated = $objReloaded->strLastUpdated;
         $this->Account = $objReloaded->Account;
         $this->strSearchMetaInfo = $objReloaded->strSearchMetaInfo;
-        $this->strLastUpdated = $objReloaded->strLastUpdated;
         $this->intObjectOwner = $objReloaded->intObjectOwner;
     }
     ////////////////////
@@ -1174,6 +1174,13 @@
                  */
                 return $this->dttUpdateDateTime;
 
+            case 'LastUpdated':
+                /**
+                 * Gets the value for strLastUpdated (Read-Only Timestamp)
+                 * @return string
+                 */
+                return $this->strLastUpdated;
+
             case 'Account':
                 /**
                  * Gets the value for intAccount 
@@ -1188,13 +1195,6 @@
                  */
                 return $this->strSearchMetaInfo;
 
-            case 'LastUpdated':
-                /**
-                 * Gets the value for strLastUpdated (Read-Only Timestamp)
-                 * @return string
-                 */
-                return $this->strLastUpdated;
-
             case 'ObjectOwner':
                 /**
                  * Gets the value for intObjectOwner 
@@ -1600,9 +1600,9 @@
         $strToReturn .= '<element name="ClientIpAddress" type="xsd:string"/>';
         $strToReturn .= '<element name="ClientUserAgent" type="xsd:string"/>';
         $strToReturn .= '<element name="UpdateDateTime" type="xsd:dateTime"/>';
+        $strToReturn .= '<element name="LastUpdated" type="xsd:string"/>';
         $strToReturn .= '<element name="AccountObject" type="xsd1:Account"/>';
         $strToReturn .= '<element name="SearchMetaInfo" type="xsd:string"/>';
-        $strToReturn .= '<element name="LastUpdated" type="xsd:string"/>';
         $strToReturn .= '<element name="ObjectOwner" type="xsd:int"/>';
         $strToReturn .= '<element name="__blnRestored" type="xsd:boolean"/>';
         $strToReturn .= '</sequence></complexType>';
@@ -1635,13 +1635,13 @@
             $objToReturn->strClientUserAgent = $objSoapObject->ClientUserAgent;
         if (property_exists($objSoapObject, 'UpdateDateTime'))
             $objToReturn->dttUpdateDateTime = new dxDateTime($objSoapObject->UpdateDateTime);
+        if (property_exists($objSoapObject, 'LastUpdated'))
+            $objToReturn->strLastUpdated = $objSoapObject->LastUpdated;
         if ((property_exists($objSoapObject, 'AccountObject')) &&
             ($objSoapObject->AccountObject))
             $objToReturn->AccountObject = Account::GetObjectFromSoapObject($objSoapObject->AccountObject);
         if (property_exists($objSoapObject, 'SearchMetaInfo'))
             $objToReturn->strSearchMetaInfo = $objSoapObject->SearchMetaInfo;
-        if (property_exists($objSoapObject, 'LastUpdated'))
-            $objToReturn->strLastUpdated = $objSoapObject->LastUpdated;
         if (property_exists($objSoapObject, 'ObjectOwner'))
             $objToReturn->intObjectOwner = $objSoapObject->ObjectOwner;
         if (property_exists($objSoapObject, '__blnRestored'))
@@ -1686,9 +1686,9 @@
         $iArray['ClientIpAddress'] = $this->strClientIpAddress;
         $iArray['ClientUserAgent'] = $this->strClientUserAgent;
         $iArray['UpdateDateTime'] = $this->dttUpdateDateTime;
+        $iArray['LastUpdated'] = $this->strLastUpdated;
         $iArray['Account'] = $this->intAccount;
         $iArray['SearchMetaInfo'] = $this->strSearchMetaInfo;
-        $iArray['LastUpdated'] = $this->strLastUpdated;
         $iArray['ObjectOwner'] = $this->intObjectOwner;
         return new ArrayIterator($iArray);
     }
@@ -1728,10 +1728,10 @@
      * @property-read dxQueryNode $ClientIpAddress
      * @property-read dxQueryNode $ClientUserAgent
      * @property-read dxQueryNode $UpdateDateTime
+     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $Account
      * @property-read dxQueryNodeAccount $AccountObject
      * @property-read dxQueryNode $SearchMetaInfo
-     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $ObjectOwner
      *
      *
@@ -1753,14 +1753,14 @@
 					return new dxQueryNode('ClientUserAgent', 'ClientUserAgent', 'VarChar', $this);
 				case 'UpdateDateTime':
 					return new dxQueryNode('UpdateDateTime', 'UpdateDateTime', 'DateTime', $this);
+				case 'LastUpdated':
+					return new dxQueryNode('LastUpdated', 'LastUpdated', 'VarChar', $this);
 				case 'Account':
 					return new dxQueryNode('Account', 'Account', 'Integer', $this);
 				case 'AccountObject':
 					return new dxQueryNodeAccount('Account', 'AccountObject', 'Integer', $this);
 				case 'SearchMetaInfo':
 					return new dxQueryNode('SearchMetaInfo', 'SearchMetaInfo', 'Blob', $this);
-				case 'LastUpdated':
-					return new dxQueryNode('LastUpdated', 'LastUpdated', 'VarChar', $this);
 				case 'ObjectOwner':
 					return new dxQueryNode('ObjectOwner', 'ObjectOwner', 'Integer', $this);
 				case 'ClientAuthenticationToken':
@@ -1784,10 +1784,10 @@
      * @property-read dxQueryNode $ClientIpAddress
      * @property-read dxQueryNode $ClientUserAgent
      * @property-read dxQueryNode $UpdateDateTime
+     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $Account
      * @property-read dxQueryNodeAccount $AccountObject
      * @property-read dxQueryNode $SearchMetaInfo
-     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $ObjectOwner
      *
      *
@@ -1809,14 +1809,14 @@
 					return new dxQueryNode('ClientUserAgent', 'ClientUserAgent', 'string', $this);
 				case 'UpdateDateTime':
 					return new dxQueryNode('UpdateDateTime', 'UpdateDateTime', 'dxDateTime', $this);
+				case 'LastUpdated':
+					return new dxQueryNode('LastUpdated', 'LastUpdated', 'string', $this);
 				case 'Account':
 					return new dxQueryNode('Account', 'Account', 'integer', $this);
 				case 'AccountObject':
 					return new dxQueryNodeAccount('Account', 'AccountObject', 'integer', $this);
 				case 'SearchMetaInfo':
 					return new dxQueryNode('SearchMetaInfo', 'SearchMetaInfo', 'string', $this);
-				case 'LastUpdated':
-					return new dxQueryNode('LastUpdated', 'LastUpdated', 'string', $this);
 				case 'ObjectOwner':
 					return new dxQueryNode('ObjectOwner', 'ObjectOwner', 'integer', $this);
 				case 'ClientAuthenticationToken':
Index: divblox/config/database/data_model_orm/generated/PasswordResetGen.class.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- divblox/config/database/data_model_orm/generated/PasswordResetGen.class.php	(revision 8088b90ea0ab6ee30e69c949666fde75c4664610)
+++ divblox/config/database/data_model_orm/generated/PasswordResetGen.class.php	(date 1589789351518)
@@ -18,9 +18,9 @@
  * @property-read integer $Id the value for intId (Read-Only PK)
  * @property string $Token the value for strToken (Unique)
  * @property dxDateTime $CreatedDateTime the value for dttCreatedDateTime 
+ * @property-read string $LastUpdated the value for strLastUpdated (Read-Only Timestamp)
  * @property integer $Account the value for intAccount 
  * @property string $SearchMetaInfo the value for strSearchMetaInfo 
- * @property-read string $LastUpdated the value for strLastUpdated (Read-Only Timestamp)
  * @property integer $ObjectOwner the value for intObjectOwner 
  * @property Account $AccountObject the value for the Account object referenced by intAccount 
  * @property-read boolean $__Restored whether or not this object was restored from the database (as opposed to created new)
@@ -56,6 +56,14 @@
     const CreatedDateTimeDefault = null;
 
 
+    /**
+     * Protected member variable that maps to the database column PasswordReset.LastUpdated
+     * @var string strLastUpdated
+     */
+    protected $strLastUpdated;
+    const LastUpdatedDefault = null;
+
+
     /**
      * Protected member variable that maps to the database column PasswordReset.Account
      * @var integer intAccount
@@ -72,14 +80,6 @@
     const SearchMetaInfoDefault = null;
 
 
-    /**
-     * Protected member variable that maps to the database column PasswordReset.LastUpdated
-     * @var string strLastUpdated
-     */
-    protected $strLastUpdated;
-    const LastUpdatedDefault = null;
-
-
     /**
      * Protected member variable that maps to the database column PasswordReset.ObjectOwner
      * @var integer intObjectOwner
@@ -125,9 +125,9 @@
         $this->intId = PasswordReset::IdDefault;
         $this->strToken = PasswordReset::TokenDefault;
         $this->dttCreatedDateTime = (PasswordReset::CreatedDateTimeDefault === null)?null:new dxDateTime(PasswordReset::CreatedDateTimeDefault);
+        $this->strLastUpdated = PasswordReset::LastUpdatedDefault;
         $this->intAccount = PasswordReset::AccountDefault;
         $this->strSearchMetaInfo = PasswordReset::SearchMetaInfoDefault;
-        $this->strLastUpdated = PasswordReset::LastUpdatedDefault;
         $this->intObjectOwner = PasswordReset::ObjectOwnerDefault;
     }
 
@@ -468,9 +468,9 @@
             $objBuilder->AddSelectItem($strTableName, 'Id', $strAliasPrefix . 'Id');
             $objBuilder->AddSelectItem($strTableName, 'Token', $strAliasPrefix . 'Token');
             $objBuilder->AddSelectItem($strTableName, 'CreatedDateTime', $strAliasPrefix . 'CreatedDateTime');
+            $objBuilder->AddSelectItem($strTableName, 'LastUpdated', $strAliasPrefix . 'LastUpdated');
             $objBuilder->AddSelectItem($strTableName, 'Account', $strAliasPrefix . 'Account');
             $objBuilder->AddSelectItem($strTableName, 'SearchMetaInfo', $strAliasPrefix . 'SearchMetaInfo');
-            $objBuilder->AddSelectItem($strTableName, 'LastUpdated', $strAliasPrefix . 'LastUpdated');
             $objBuilder->AddSelectItem($strTableName, 'ObjectOwner', $strAliasPrefix . 'ObjectOwner');
         }
     }
@@ -602,15 +602,15 @@
         $strAlias = $strAliasPrefix . 'CreatedDateTime';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->dttCreatedDateTime = $objDbRow->GetColumn($strAliasName, 'DateTime');
+        $strAlias = $strAliasPrefix . 'LastUpdated';
+        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
+        $objToReturn->strLastUpdated = $objDbRow->GetColumn($strAliasName, 'VarChar');
         $strAlias = $strAliasPrefix . 'Account';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->intAccount = $objDbRow->GetColumn($strAliasName, 'Integer');
         $strAlias = $strAliasPrefix . 'SearchMetaInfo';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->strSearchMetaInfo = $objDbRow->GetColumn($strAliasName, 'Blob');
-        $strAlias = $strAliasPrefix . 'LastUpdated';
-        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
-        $objToReturn->strLastUpdated = $objDbRow->GetColumn($strAliasName, 'VarChar');
         $strAlias = $strAliasPrefix . 'ObjectOwner';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->intObjectOwner = $objDbRow->GetColumn($strAliasName, 'Integer');
@@ -825,9 +825,9 @@
             $ChangedArray = array_merge($ChangedArray,array("Id" => $this->intId));
             $ChangedArray = array_merge($ChangedArray,array("Token" => $this->strToken));
             $ChangedArray = array_merge($ChangedArray,array("CreatedDateTime" => $this->dttCreatedDateTime));
+            $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
             $ChangedArray = array_merge($ChangedArray,array("Account" => $this->intAccount));
             $ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => $this->strSearchMetaInfo));
-            $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
             $ChangedArray = array_merge($ChangedArray,array("ObjectOwner" => $this->intObjectOwner));
             $newAuditLogEntry->AuditLogEntryDetail = json_encode($ChangedArray);
         } else {
@@ -856,6 +856,14 @@
                 $ChangedArray = array_merge($ChangedArray,array("CreatedDateTime" => array("Before" => $ExistingValueStr,"After" => $this->dttCreatedDateTime)));
                 //$ChangedArray = array_merge($ChangedArray,array("CreatedDateTime" => "From: ".$ExistingValueStr." to: ".$this->dttCreatedDateTime));
             }
+            $ExistingValueStr = "NULL";
+            if (!is_null($ExistingObj->LastUpdated)) {
+                $ExistingValueStr = $ExistingObj->LastUpdated;
+            }
+            if ($ExistingObj->LastUpdated != $this->strLastUpdated) {
+                $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => array("Before" => $ExistingValueStr,"After" => $this->strLastUpdated)));
+                //$ChangedArray = array_merge($ChangedArray,array("LastUpdated" => "From: ".$ExistingValueStr." to: ".$this->strLastUpdated));
+            }
             $ExistingValueStr = "NULL";
             if (!is_null($ExistingObj->Account)) {
                 $ExistingValueStr = $ExistingObj->Account;
@@ -872,14 +880,6 @@
                 $ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => array("Before" => $ExistingValueStr,"After" => $this->strSearchMetaInfo)));
                 //$ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => "From: ".$ExistingValueStr." to: ".$this->strSearchMetaInfo));
             }
-            $ExistingValueStr = "NULL";
-            if (!is_null($ExistingObj->LastUpdated)) {
-                $ExistingValueStr = $ExistingObj->LastUpdated;
-            }
-            if ($ExistingObj->LastUpdated != $this->strLastUpdated) {
-                $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => array("Before" => $ExistingValueStr,"After" => $this->strLastUpdated)));
-                //$ChangedArray = array_merge($ChangedArray,array("LastUpdated" => "From: ".$ExistingValueStr." to: ".$this->strLastUpdated));
-            }
             $ExistingValueStr = "NULL";
             if (!is_null($ExistingObj->ObjectOwner)) {
                 $ExistingValueStr = $ExistingObj->ObjectOwner;
@@ -996,9 +996,9 @@
         $ChangedArray = array_merge($ChangedArray,array("Id" => $this->intId));
         $ChangedArray = array_merge($ChangedArray,array("Token" => $this->strToken));
         $ChangedArray = array_merge($ChangedArray,array("CreatedDateTime" => $this->dttCreatedDateTime));
+        $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
         $ChangedArray = array_merge($ChangedArray,array("Account" => $this->intAccount));
         $ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => $this->strSearchMetaInfo));
-        $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
         $ChangedArray = array_merge($ChangedArray,array("ObjectOwner" => $this->intObjectOwner));
         $newAuditLogEntry->AuditLogEntryDetail = json_encode($ChangedArray);
         try {
@@ -1079,9 +1079,9 @@
         // Update $this's local variables to match
         $this->strToken = $objReloaded->strToken;
         $this->dttCreatedDateTime = $objReloaded->dttCreatedDateTime;
+        $this->strLastUpdated = $objReloaded->strLastUpdated;
         $this->Account = $objReloaded->Account;
         $this->strSearchMetaInfo = $objReloaded->strSearchMetaInfo;
-        $this->strLastUpdated = $objReloaded->strLastUpdated;
         $this->intObjectOwner = $objReloaded->intObjectOwner;
     }
     ////////////////////
@@ -1121,6 +1121,13 @@
                  */
                 return $this->dttCreatedDateTime;
 
+            case 'LastUpdated':
+                /**
+                 * Gets the value for strLastUpdated (Read-Only Timestamp)
+                 * @return string
+                 */
+                return $this->strLastUpdated;
+
             case 'Account':
                 /**
                  * Gets the value for intAccount 
@@ -1135,13 +1142,6 @@
                  */
                 return $this->strSearchMetaInfo;
 
-            case 'LastUpdated':
-                /**
-                 * Gets the value for strLastUpdated (Read-Only Timestamp)
-                 * @return string
-                 */
-                return $this->strLastUpdated;
-
             case 'ObjectOwner':
                 /**
                  * Gets the value for intObjectOwner 
@@ -1368,9 +1368,9 @@
         $strToReturn .= '<element name="Id" type="xsd:int"/>';
         $strToReturn .= '<element name="Token" type="xsd:string"/>';
         $strToReturn .= '<element name="CreatedDateTime" type="xsd:dateTime"/>';
+        $strToReturn .= '<element name="LastUpdated" type="xsd:string"/>';
         $strToReturn .= '<element name="AccountObject" type="xsd1:Account"/>';
         $strToReturn .= '<element name="SearchMetaInfo" type="xsd:string"/>';
-        $strToReturn .= '<element name="LastUpdated" type="xsd:string"/>';
         $strToReturn .= '<element name="ObjectOwner" type="xsd:int"/>';
         $strToReturn .= '<element name="__blnRestored" type="xsd:boolean"/>';
         $strToReturn .= '</sequence></complexType>';
@@ -1401,13 +1401,13 @@
             $objToReturn->strToken = $objSoapObject->Token;
         if (property_exists($objSoapObject, 'CreatedDateTime'))
             $objToReturn->dttCreatedDateTime = new dxDateTime($objSoapObject->CreatedDateTime);
+        if (property_exists($objSoapObject, 'LastUpdated'))
+            $objToReturn->strLastUpdated = $objSoapObject->LastUpdated;
         if ((property_exists($objSoapObject, 'AccountObject')) &&
             ($objSoapObject->AccountObject))
             $objToReturn->AccountObject = Account::GetObjectFromSoapObject($objSoapObject->AccountObject);
         if (property_exists($objSoapObject, 'SearchMetaInfo'))
             $objToReturn->strSearchMetaInfo = $objSoapObject->SearchMetaInfo;
-        if (property_exists($objSoapObject, 'LastUpdated'))
-            $objToReturn->strLastUpdated = $objSoapObject->LastUpdated;
         if (property_exists($objSoapObject, 'ObjectOwner'))
             $objToReturn->intObjectOwner = $objSoapObject->ObjectOwner;
         if (property_exists($objSoapObject, '__blnRestored'))
@@ -1451,9 +1451,9 @@
         $iArray['Id'] = $this->intId;
         $iArray['Token'] = $this->strToken;
         $iArray['CreatedDateTime'] = $this->dttCreatedDateTime;
+        $iArray['LastUpdated'] = $this->strLastUpdated;
         $iArray['Account'] = $this->intAccount;
         $iArray['SearchMetaInfo'] = $this->strSearchMetaInfo;
-        $iArray['LastUpdated'] = $this->strLastUpdated;
         $iArray['ObjectOwner'] = $this->intObjectOwner;
         return new ArrayIterator($iArray);
     }
@@ -1492,10 +1492,10 @@
      * @property-read dxQueryNode $Id
      * @property-read dxQueryNode $Token
      * @property-read dxQueryNode $CreatedDateTime
+     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $Account
      * @property-read dxQueryNodeAccount $AccountObject
      * @property-read dxQueryNode $SearchMetaInfo
-     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $ObjectOwner
      *
      *
@@ -1514,14 +1514,14 @@
 					return new dxQueryNode('Token', 'Token', 'VarChar', $this);
 				case 'CreatedDateTime':
 					return new dxQueryNode('CreatedDateTime', 'CreatedDateTime', 'DateTime', $this);
+				case 'LastUpdated':
+					return new dxQueryNode('LastUpdated', 'LastUpdated', 'VarChar', $this);
 				case 'Account':
 					return new dxQueryNode('Account', 'Account', 'Integer', $this);
 				case 'AccountObject':
 					return new dxQueryNodeAccount('Account', 'AccountObject', 'Integer', $this);
 				case 'SearchMetaInfo':
 					return new dxQueryNode('SearchMetaInfo', 'SearchMetaInfo', 'Blob', $this);
-				case 'LastUpdated':
-					return new dxQueryNode('LastUpdated', 'LastUpdated', 'VarChar', $this);
 				case 'ObjectOwner':
 					return new dxQueryNode('ObjectOwner', 'ObjectOwner', 'Integer', $this);
 
@@ -1542,10 +1542,10 @@
      * @property-read dxQueryNode $Id
      * @property-read dxQueryNode $Token
      * @property-read dxQueryNode $CreatedDateTime
+     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $Account
      * @property-read dxQueryNodeAccount $AccountObject
      * @property-read dxQueryNode $SearchMetaInfo
-     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $ObjectOwner
      *
      *
@@ -1564,14 +1564,14 @@
 					return new dxQueryNode('Token', 'Token', 'string', $this);
 				case 'CreatedDateTime':
 					return new dxQueryNode('CreatedDateTime', 'CreatedDateTime', 'dxDateTime', $this);
+				case 'LastUpdated':
+					return new dxQueryNode('LastUpdated', 'LastUpdated', 'string', $this);
 				case 'Account':
 					return new dxQueryNode('Account', 'Account', 'integer', $this);
 				case 'AccountObject':
 					return new dxQueryNodeAccount('Account', 'AccountObject', 'integer', $this);
 				case 'SearchMetaInfo':
 					return new dxQueryNode('SearchMetaInfo', 'SearchMetaInfo', 'string', $this);
-				case 'LastUpdated':
-					return new dxQueryNode('LastUpdated', 'LastUpdated', 'string', $this);
 				case 'ObjectOwner':
 					return new dxQueryNode('ObjectOwner', 'ObjectOwner', 'integer', $this);
 
Index: divblox/config/database/data_model_orm/generated/PushRegistrationGen.class.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- divblox/config/database/data_model_orm/generated/PushRegistrationGen.class.php	(revision 8088b90ea0ab6ee30e69c949666fde75c4664610)
+++ divblox/config/database/data_model_orm/generated/PushRegistrationGen.class.php	(date 1589789351558)
@@ -24,10 +24,10 @@
  * @property string $RegistrationStatus the value for strRegistrationStatus 
  * @property string $InternalUniqueId the value for strInternalUniqueId (Unique)
  * @property integer $CurrentBadgeCount the value for intCurrentBadgeCount 
+ * @property-read string $LastUpdated the value for strLastUpdated (Read-Only Timestamp)
  * @property integer $ClientAuthenticationToken the value for intClientAuthenticationToken 
  * @property string $SearchMetaInfo the value for strSearchMetaInfo 
  * @property integer $Account the value for intAccount 
- * @property-read string $LastUpdated the value for strLastUpdated (Read-Only Timestamp)
  * @property integer $ObjectOwner the value for intObjectOwner 
  * @property ClientAuthenticationToken $ClientAuthenticationTokenObject the value for the ClientAuthenticationToken object referenced by intClientAuthenticationToken 
  * @property Account $AccountObject the value for the Account object referenced by intAccount 
@@ -116,6 +116,14 @@
     const CurrentBadgeCountDefault = null;
 
 
+    /**
+     * Protected member variable that maps to the database column PushRegistration.LastUpdated
+     * @var string strLastUpdated
+     */
+    protected $strLastUpdated;
+    const LastUpdatedDefault = null;
+
+
     /**
      * Protected member variable that maps to the database column PushRegistration.ClientAuthenticationToken
      * @var integer intClientAuthenticationToken
@@ -140,14 +148,6 @@
     const AccountDefault = null;
 
 
-    /**
-     * Protected member variable that maps to the database column PushRegistration.LastUpdated
-     * @var string strLastUpdated
-     */
-    protected $strLastUpdated;
-    const LastUpdatedDefault = null;
-
-
     /**
      * Protected member variable that maps to the database column PushRegistration.ObjectOwner
      * @var integer intObjectOwner
@@ -209,10 +209,10 @@
         $this->strRegistrationStatus = PushRegistration::RegistrationStatusDefault;
         $this->strInternalUniqueId = PushRegistration::InternalUniqueIdDefault;
         $this->intCurrentBadgeCount = PushRegistration::CurrentBadgeCountDefault;
+        $this->strLastUpdated = PushRegistration::LastUpdatedDefault;
         $this->intClientAuthenticationToken = PushRegistration::ClientAuthenticationTokenDefault;
         $this->strSearchMetaInfo = PushRegistration::SearchMetaInfoDefault;
         $this->intAccount = PushRegistration::AccountDefault;
-        $this->strLastUpdated = PushRegistration::LastUpdatedDefault;
         $this->intObjectOwner = PushRegistration::ObjectOwnerDefault;
     }
 
@@ -559,10 +559,10 @@
             $objBuilder->AddSelectItem($strTableName, 'RegistrationStatus', $strAliasPrefix . 'RegistrationStatus');
             $objBuilder->AddSelectItem($strTableName, 'InternalUniqueId', $strAliasPrefix . 'InternalUniqueId');
             $objBuilder->AddSelectItem($strTableName, 'CurrentBadgeCount', $strAliasPrefix . 'CurrentBadgeCount');
+            $objBuilder->AddSelectItem($strTableName, 'LastUpdated', $strAliasPrefix . 'LastUpdated');
             $objBuilder->AddSelectItem($strTableName, 'ClientAuthenticationToken', $strAliasPrefix . 'ClientAuthenticationToken');
             $objBuilder->AddSelectItem($strTableName, 'SearchMetaInfo', $strAliasPrefix . 'SearchMetaInfo');
             $objBuilder->AddSelectItem($strTableName, 'Account', $strAliasPrefix . 'Account');
-            $objBuilder->AddSelectItem($strTableName, 'LastUpdated', $strAliasPrefix . 'LastUpdated');
             $objBuilder->AddSelectItem($strTableName, 'ObjectOwner', $strAliasPrefix . 'ObjectOwner');
         }
     }
@@ -712,6 +712,9 @@
         $strAlias = $strAliasPrefix . 'CurrentBadgeCount';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->intCurrentBadgeCount = $objDbRow->GetColumn($strAliasName, 'Integer');
+        $strAlias = $strAliasPrefix . 'LastUpdated';
+        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
+        $objToReturn->strLastUpdated = $objDbRow->GetColumn($strAliasName, 'VarChar');
         $strAlias = $strAliasPrefix . 'ClientAuthenticationToken';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->intClientAuthenticationToken = $objDbRow->GetColumn($strAliasName, 'Integer');
@@ -721,9 +724,6 @@
         $strAlias = $strAliasPrefix . 'Account';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->intAccount = $objDbRow->GetColumn($strAliasName, 'Integer');
-        $strAlias = $strAliasPrefix . 'LastUpdated';
-        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
-        $objToReturn->strLastUpdated = $objDbRow->GetColumn($strAliasName, 'VarChar');
         $strAlias = $strAliasPrefix . 'ObjectOwner';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->intObjectOwner = $objDbRow->GetColumn($strAliasName, 'Integer');
@@ -983,10 +983,10 @@
             $ChangedArray = array_merge($ChangedArray,array("RegistrationStatus" => $this->strRegistrationStatus));
             $ChangedArray = array_merge($ChangedArray,array("InternalUniqueId" => $this->strInternalUniqueId));
             $ChangedArray = array_merge($ChangedArray,array("CurrentBadgeCount" => $this->intCurrentBadgeCount));
+            $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
             $ChangedArray = array_merge($ChangedArray,array("ClientAuthenticationToken" => $this->intClientAuthenticationToken));
             $ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => $this->strSearchMetaInfo));
             $ChangedArray = array_merge($ChangedArray,array("Account" => $this->intAccount));
-            $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
             $ChangedArray = array_merge($ChangedArray,array("ObjectOwner" => $this->intObjectOwner));
             $newAuditLogEntry->AuditLogEntryDetail = json_encode($ChangedArray);
         } else {
@@ -1063,6 +1063,14 @@
                 $ChangedArray = array_merge($ChangedArray,array("CurrentBadgeCount" => array("Before" => $ExistingValueStr,"After" => $this->intCurrentBadgeCount)));
                 //$ChangedArray = array_merge($ChangedArray,array("CurrentBadgeCount" => "From: ".$ExistingValueStr." to: ".$this->intCurrentBadgeCount));
             }
+            $ExistingValueStr = "NULL";
+            if (!is_null($ExistingObj->LastUpdated)) {
+                $ExistingValueStr = $ExistingObj->LastUpdated;
+            }
+            if ($ExistingObj->LastUpdated != $this->strLastUpdated) {
+                $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => array("Before" => $ExistingValueStr,"After" => $this->strLastUpdated)));
+                //$ChangedArray = array_merge($ChangedArray,array("LastUpdated" => "From: ".$ExistingValueStr." to: ".$this->strLastUpdated));
+            }
             $ExistingValueStr = "NULL";
             if (!is_null($ExistingObj->ClientAuthenticationToken)) {
                 $ExistingValueStr = $ExistingObj->ClientAuthenticationToken;
@@ -1087,14 +1095,6 @@
                 $ChangedArray = array_merge($ChangedArray,array("Account" => array("Before" => $ExistingValueStr,"After" => $this->intAccount)));
                 //$ChangedArray = array_merge($ChangedArray,array("Account" => "From: ".$ExistingValueStr." to: ".$this->intAccount));
             }
-            $ExistingValueStr = "NULL";
-            if (!is_null($ExistingObj->LastUpdated)) {
-                $ExistingValueStr = $ExistingObj->LastUpdated;
-            }
-            if ($ExistingObj->LastUpdated != $this->strLastUpdated) {
-                $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => array("Before" => $ExistingValueStr,"After" => $this->strLastUpdated)));
-                //$ChangedArray = array_merge($ChangedArray,array("LastUpdated" => "From: ".$ExistingValueStr." to: ".$this->strLastUpdated));
-            }
             $ExistingValueStr = "NULL";
             if (!is_null($ExistingObj->ObjectOwner)) {
                 $ExistingValueStr = $ExistingObj->ObjectOwner;
@@ -1238,10 +1238,10 @@
         $ChangedArray = array_merge($ChangedArray,array("RegistrationStatus" => $this->strRegistrationStatus));
         $ChangedArray = array_merge($ChangedArray,array("InternalUniqueId" => $this->strInternalUniqueId));
         $ChangedArray = array_merge($ChangedArray,array("CurrentBadgeCount" => $this->intCurrentBadgeCount));
+        $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
         $ChangedArray = array_merge($ChangedArray,array("ClientAuthenticationToken" => $this->intClientAuthenticationToken));
         $ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => $this->strSearchMetaInfo));
         $ChangedArray = array_merge($ChangedArray,array("Account" => $this->intAccount));
-        $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
         $ChangedArray = array_merge($ChangedArray,array("ObjectOwner" => $this->intObjectOwner));
         $newAuditLogEntry->AuditLogEntryDetail = json_encode($ChangedArray);
         try {
@@ -1328,10 +1328,10 @@
         $this->strRegistrationStatus = $objReloaded->strRegistrationStatus;
         $this->strInternalUniqueId = $objReloaded->strInternalUniqueId;
         $this->intCurrentBadgeCount = $objReloaded->intCurrentBadgeCount;
+        $this->strLastUpdated = $objReloaded->strLastUpdated;
         $this->ClientAuthenticationToken = $objReloaded->ClientAuthenticationToken;
         $this->strSearchMetaInfo = $objReloaded->strSearchMetaInfo;
         $this->Account = $objReloaded->Account;
-        $this->strLastUpdated = $objReloaded->strLastUpdated;
         $this->intObjectOwner = $objReloaded->intObjectOwner;
     }
     ////////////////////
@@ -1413,6 +1413,13 @@
                  */
                 return $this->intCurrentBadgeCount;
 
+            case 'LastUpdated':
+                /**
+                 * Gets the value for strLastUpdated (Read-Only Timestamp)
+                 * @return string
+                 */
+                return $this->strLastUpdated;
+
             case 'ClientAuthenticationToken':
                 /**
                  * Gets the value for intClientAuthenticationToken 
@@ -1434,13 +1441,6 @@
                  */
                 return $this->intAccount;
 
-            case 'LastUpdated':
-                /**
-                 * Gets the value for strLastUpdated (Read-Only Timestamp)
-                 * @return string
-                 */
-                return $this->strLastUpdated;
-
             case 'ObjectOwner':
                 /**
                  * Gets the value for intObjectOwner 
@@ -1811,10 +1811,10 @@
         $strToReturn .= '<element name="RegistrationStatus" type="xsd:string"/>';
         $strToReturn .= '<element name="InternalUniqueId" type="xsd:string"/>';
         $strToReturn .= '<element name="CurrentBadgeCount" type="xsd:int"/>';
+        $strToReturn .= '<element name="LastUpdated" type="xsd:string"/>';
         $strToReturn .= '<element name="ClientAuthenticationTokenObject" type="xsd1:ClientAuthenticationToken"/>';
         $strToReturn .= '<element name="SearchMetaInfo" type="xsd:string"/>';
         $strToReturn .= '<element name="AccountObject" type="xsd1:Account"/>';
-        $strToReturn .= '<element name="LastUpdated" type="xsd:string"/>';
         $strToReturn .= '<element name="ObjectOwner" type="xsd:int"/>';
         $strToReturn .= '<element name="__blnRestored" type="xsd:boolean"/>';
         $strToReturn .= '</sequence></complexType>';
@@ -1858,6 +1858,8 @@
             $objToReturn->strInternalUniqueId = $objSoapObject->InternalUniqueId;
         if (property_exists($objSoapObject, 'CurrentBadgeCount'))
             $objToReturn->intCurrentBadgeCount = $objSoapObject->CurrentBadgeCount;
+        if (property_exists($objSoapObject, 'LastUpdated'))
+            $objToReturn->strLastUpdated = $objSoapObject->LastUpdated;
         if ((property_exists($objSoapObject, 'ClientAuthenticationTokenObject')) &&
             ($objSoapObject->ClientAuthenticationTokenObject))
             $objToReturn->ClientAuthenticationTokenObject = ClientAuthenticationToken::GetObjectFromSoapObject($objSoapObject->ClientAuthenticationTokenObject);
@@ -1866,8 +1868,6 @@
         if ((property_exists($objSoapObject, 'AccountObject')) &&
             ($objSoapObject->AccountObject))
             $objToReturn->AccountObject = Account::GetObjectFromSoapObject($objSoapObject->AccountObject);
-        if (property_exists($objSoapObject, 'LastUpdated'))
-            $objToReturn->strLastUpdated = $objSoapObject->LastUpdated;
         if (property_exists($objSoapObject, 'ObjectOwner'))
             $objToReturn->intObjectOwner = $objSoapObject->ObjectOwner;
         if (property_exists($objSoapObject, '__blnRestored'))
@@ -1921,10 +1921,10 @@
         $iArray['RegistrationStatus'] = $this->strRegistrationStatus;
         $iArray['InternalUniqueId'] = $this->strInternalUniqueId;
         $iArray['CurrentBadgeCount'] = $this->intCurrentBadgeCount;
+        $iArray['LastUpdated'] = $this->strLastUpdated;
         $iArray['ClientAuthenticationToken'] = $this->intClientAuthenticationToken;
         $iArray['SearchMetaInfo'] = $this->strSearchMetaInfo;
         $iArray['Account'] = $this->intAccount;
-        $iArray['LastUpdated'] = $this->strLastUpdated;
         $iArray['ObjectOwner'] = $this->intObjectOwner;
         return new ArrayIterator($iArray);
     }
@@ -1969,12 +1969,12 @@
      * @property-read dxQueryNode $RegistrationStatus
      * @property-read dxQueryNode $InternalUniqueId
      * @property-read dxQueryNode $CurrentBadgeCount
+     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $ClientAuthenticationToken
      * @property-read dxQueryNodeClientAuthenticationToken $ClientAuthenticationTokenObject
      * @property-read dxQueryNode $SearchMetaInfo
      * @property-read dxQueryNode $Account
      * @property-read dxQueryNodeAccount $AccountObject
-     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $ObjectOwner
      *
      *
@@ -2005,6 +2005,8 @@
 					return new dxQueryNode('InternalUniqueId', 'InternalUniqueId', 'VarChar', $this);
 				case 'CurrentBadgeCount':
 					return new dxQueryNode('CurrentBadgeCount', 'CurrentBadgeCount', 'Integer', $this);
+				case 'LastUpdated':
+					return new dxQueryNode('LastUpdated', 'LastUpdated', 'VarChar', $this);
 				case 'ClientAuthenticationToken':
 					return new dxQueryNode('ClientAuthenticationToken', 'ClientAuthenticationToken', 'Integer', $this);
 				case 'ClientAuthenticationTokenObject':
@@ -2015,8 +2017,6 @@
 					return new dxQueryNode('Account', 'Account', 'Integer', $this);
 				case 'AccountObject':
 					return new dxQueryNodeAccount('Account', 'AccountObject', 'Integer', $this);
-				case 'LastUpdated':
-					return new dxQueryNode('LastUpdated', 'LastUpdated', 'VarChar', $this);
 				case 'ObjectOwner':
 					return new dxQueryNode('ObjectOwner', 'ObjectOwner', 'Integer', $this);
 
@@ -2043,12 +2043,12 @@
      * @property-read dxQueryNode $RegistrationStatus
      * @property-read dxQueryNode $InternalUniqueId
      * @property-read dxQueryNode $CurrentBadgeCount
+     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $ClientAuthenticationToken
      * @property-read dxQueryNodeClientAuthenticationToken $ClientAuthenticationTokenObject
      * @property-read dxQueryNode $SearchMetaInfo
      * @property-read dxQueryNode $Account
      * @property-read dxQueryNodeAccount $AccountObject
-     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $ObjectOwner
      *
      *
@@ -2079,6 +2079,8 @@
 					return new dxQueryNode('InternalUniqueId', 'InternalUniqueId', 'string', $this);
 				case 'CurrentBadgeCount':
 					return new dxQueryNode('CurrentBadgeCount', 'CurrentBadgeCount', 'integer', $this);
+				case 'LastUpdated':
+					return new dxQueryNode('LastUpdated', 'LastUpdated', 'string', $this);
 				case 'ClientAuthenticationToken':
 					return new dxQueryNode('ClientAuthenticationToken', 'ClientAuthenticationToken', 'integer', $this);
 				case 'ClientAuthenticationTokenObject':
@@ -2089,8 +2091,6 @@
 					return new dxQueryNode('Account', 'Account', 'integer', $this);
 				case 'AccountObject':
 					return new dxQueryNodeAccount('Account', 'AccountObject', 'integer', $this);
-				case 'LastUpdated':
-					return new dxQueryNode('LastUpdated', 'LastUpdated', 'string', $this);
 				case 'ObjectOwner':
 					return new dxQueryNode('ObjectOwner', 'ObjectOwner', 'integer', $this);
 
Index: divblox/config/framework/internal_config.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- divblox/config/framework/internal_config.php	(revision 8088b90ea0ab6ee30e69c949666fde75c4664610)
+++ divblox/config/framework/internal_config.php	(date 1589791297640)
@@ -1,0 +1,1 @@
+1ZowCPGurpl2JEimAMLFg4vkXyDNV5b6dhaRHITW0qnYUxz9
\ No newline at end of file
Index: divblox/config/database/data_modeller/data_model/DataModel_Config.inc.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n/**\n * GENERATED FILE. DO NOT MODIFY.\n * This file contains the date of last update for each server instance that has ever been synchronized by the divblox Data Modeller\n * and is used to determine if a database synchronization for a specific instance is required.\n */\nabstract class DataModelConfig {\n\tpublic static $Config = array(\"a\" => 1540205030,\"acceptance\" => 1540242170,\"Env_Two\" => 1540563600,\"Johan_Local\" => 1540724422,\"Local\" => 1584687393,\"Env_One\" => 1542225512,\"Env_One123\" => 1542909510,\"Local_AAA\" => 1557738197);\n\t\n\tpublic static function getLastModifiedDate() {\n        $CurrentDirectory = dirname(__FILE__);\n        chdir(__DIR__);\n        $LastUpdated = time();\n        if (file_exists(\"DataModel_Data.inc.php\")) {\n            $LastUpdated = filemtime(\"DataModel_Data.inc.php\");\n        }\n        chdir($CurrentDirectory);\n        return $LastUpdated;\n    }\n}\n?>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- divblox/config/database/data_modeller/data_model/DataModel_Config.inc.php	(revision 8088b90ea0ab6ee30e69c949666fde75c4664610)
+++ divblox/config/database/data_modeller/data_model/DataModel_Config.inc.php	(date 1589789350993)
@@ -5,7 +5,7 @@
  * and is used to determine if a database synchronization for a specific instance is required.
  */
 abstract class DataModelConfig {
-	public static $Config = array("a" => 1540205030,"acceptance" => 1540242170,"Env_Two" => 1540563600,"Johan_Local" => 1540724422,"Local" => 1584687393,"Env_One" => 1542225512,"Env_One123" => 1542909510,"Local_AAA" => 1557738197);
+	public static $Config = array("a" => 1540205030,"acceptance" => 1540242170,"Env_Two" => 1540563600,"Johan_Local" => 1540724422,"Local" => 1589789350,"Env_One" => 1542225512,"Env_One123" => 1542909510,"Local_AAA" => 1557738197);
 	
 	public static function getLastModifiedDate() {
         $CurrentDirectory = dirname(__FILE__);
Index: divblox/config/database/data_model_orm/generated/ClientAuthenticationTokenGen.class.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n/**\n * The abstract ClientAuthenticationTokenGen class defined here is\n * code-generated and contains all the basic CRUD-type functionality as well as\n * basic methods to handle relationships and index-based loading.\n *\n * To use, you should use the ClientAuthenticationToken subclass which\n * extends this ClientAuthenticationTokenGen class.\n *\n * Because subsequent re-code generations will overwrite any changes to this\n * file, you should leave this file unaltered to prevent yourself from losing\n * any information or code changes.  All customizations should be done by\n * overriding existing or implementing new methods, properties and variables\n * in the ClientAuthenticationToken class.\n *\n * @package divblox_app\n * @subpackage GeneratedDataObjects\n * @property-read integer $Id the value for intId (Read-Only PK)\n * @property string $Token the value for strToken (Unique)\n * @property dxDateTime $UpdateDateTime the value for dttUpdateDateTime \n * @property string $ExpiredToken the value for strExpiredToken (Unique)\n * @property boolean $IsNative the value for blnIsNative \n * @property string $DeviceUuid the value for strDeviceUuid \n * @property string $DevicePlatform the value for strDevicePlatform \n * @property string $DeviceOs the value for strDeviceOs \n * @property integer $ClientConnection the value for intClientConnection \n * @property string $SearchMetaInfo the value for strSearchMetaInfo \n * @property-read string $LastUpdated the value for strLastUpdated (Read-Only Timestamp)\n * @property integer $ObjectOwner the value for intObjectOwner \n * @property dxDateTime $DeviceRegistrationDateTime the value for dttDeviceRegistrationDateTime \n * @property ClientConnection $ClientConnectionObject the value for the ClientConnection object referenced by intClientConnection \n * @property-read PushRegistration $_PushRegistration the value for the private _objPushRegistration (Read-Only) if set due to an expansion on the PushRegistration.ClientAuthenticationToken reverse relationship\n * @property-read PushRegistration[] $_PushRegistrationArray the value for the private _objPushRegistrationArray (Read-Only) if set due to an ExpandAsArray on the PushRegistration.ClientAuthenticationToken reverse relationship\n * @property-read boolean $__Restored whether or not this object was restored from the database (as opposed to created new)\n */\nclass ClientAuthenticationTokenGen extends dxBaseClass implements IteratorAggregate {\n\n    ///////////////////////////////////////////////////////////////////////\n    // PROTECTED MEMBER VARIABLES and TEXT FIELD MAXLENGTHS (if applicable)\n    ///////////////////////////////////////////////////////////////////////\n\n    /**\n     * Protected member variable that maps to the database PK Identity column ClientAuthenticationToken.Id\n     * @var integer intId\n     */\n    protected $intId;\n    const IdDefault = null;\n\n\n    /**\n     * Protected member variable that maps to the database column ClientAuthenticationToken.Token\n     * @var string strToken\n     */\n    protected $strToken;\n    const TokenMaxLength = 50;\n    const TokenDefault = null;\n\n\n    /**\n     * Protected member variable that maps to the database column ClientAuthenticationToken.UpdateDateTime\n     * @var dxDateTime dttUpdateDateTime\n     */\n    protected $dttUpdateDateTime;\n    const UpdateDateTimeDefault = null;\n\n\n    /**\n     * Protected member variable that maps to the database column ClientAuthenticationToken.ExpiredToken\n     * @var string strExpiredToken\n     */\n    protected $strExpiredToken;\n    const ExpiredTokenMaxLength = 50;\n    const ExpiredTokenDefault = null;\n\n\n    /**\n     * Protected member variable that maps to the database column ClientAuthenticationToken.IsNative\n     * @var boolean blnIsNative\n     */\n    protected $blnIsNative;\n    const IsNativeDefault = null;\n\n\n    /**\n     * Protected member variable that maps to the database column ClientAuthenticationToken.DeviceUuid\n     * @var string strDeviceUuid\n     */\n    protected $strDeviceUuid;\n    const DeviceUuidMaxLength = 150;\n    const DeviceUuidDefault = null;\n\n\n    /**\n     * Protected member variable that maps to the database column ClientAuthenticationToken.DevicePlatform\n     * @var string strDevicePlatform\n     */\n    protected $strDevicePlatform;\n    const DevicePlatformMaxLength = 150;\n    const DevicePlatformDefault = null;\n\n\n    /**\n     * Protected member variable that maps to the database column ClientAuthenticationToken.DeviceOs\n     * @var string strDeviceOs\n     */\n    protected $strDeviceOs;\n    const DeviceOsMaxLength = 50;\n    const DeviceOsDefault = null;\n\n\n    /**\n     * Protected member variable that maps to the database column ClientAuthenticationToken.ClientConnection\n     * @var integer intClientConnection\n     */\n    protected $intClientConnection;\n    const ClientConnectionDefault = null;\n\n\n    /**\n     * Protected member variable that maps to the database column ClientAuthenticationToken.SearchMetaInfo\n     * @var string strSearchMetaInfo\n     */\n    protected $strSearchMetaInfo;\n    const SearchMetaInfoDefault = null;\n\n\n    /**\n     * Protected member variable that maps to the database column ClientAuthenticationToken.LastUpdated\n     * @var string strLastUpdated\n     */\n    protected $strLastUpdated;\n    const LastUpdatedDefault = null;\n\n\n    /**\n     * Protected member variable that maps to the database column ClientAuthenticationToken.ObjectOwner\n     * @var integer intObjectOwner\n     */\n    protected $intObjectOwner;\n    const ObjectOwnerDefault = null;\n\n\n    /**\n     * Protected member variable that maps to the database column ClientAuthenticationToken.DeviceRegistrationDateTime\n     * @var dxDateTime dttDeviceRegistrationDateTime\n     */\n    protected $dttDeviceRegistrationDateTime;\n    const DeviceRegistrationDateTimeDefault = null;\n\n\n    /**\n     * Private member variable that stores a reference to a single PushRegistration object\n     * (of type PushRegistration), if this ClientAuthenticationToken object was restored with\n     * an expansion on the PushRegistration association table.\n     * @var PushRegistration _objPushRegistration;\n     */\n    private $_objPushRegistration;\n\n    /**\n     * Private member variable that stores a reference to an array of PushRegistration objects\n     * (of type PushRegistration[]), if this ClientAuthenticationToken object was restored with\n     * an ExpandAsArray on the PushRegistration association table.\n     * @var PushRegistration[] _objPushRegistrationArray;\n     */\n    private $_objPushRegistrationArray = null;\n\n    /**\n     * Protected array of virtual attributes for this object (e.g. extra/other calculated and/or non-object bound\n     * columns from the run-time database query result for this object).  Used by InstantiateDbRow and\n     * GetVirtualAttribute.\n     * @var string[] $__strVirtualAttributeArray\n     */\n    protected $__strVirtualAttributeArray = array();\n\n    /**\n     * Protected internal member variable that specifies whether or not this object is Restored from the database.\n     * Used by Save() to determine if Save() should perform a db UPDATE or INSERT.\n     * @var bool __blnRestored;\n     */\n    protected $__blnRestored;\n\n    ///////////////////////////////\n    // PROTECTED MEMBER OBJECTS\n    ///////////////////////////////\n\n    /**\n     * Protected member variable that contains the object pointed by the reference\n     * in the database column ClientAuthenticationToken.ClientConnection.\n     *\n     * NOTE: Always use the ClientConnectionObject property getter to correctly retrieve this ClientConnection object.\n     * (Because this class implements late binding, this variable reference MAY be null.)\n     * @var ClientConnection objClientConnectionObject\n     */\n    protected $objClientConnectionObject;\n\n\n    /**\n     * Initialize each property with default values from database definition\n     */\n    public function Initialize() {\n        $this->intId = ClientAuthenticationToken::IdDefault;\n        $this->strToken = ClientAuthenticationToken::TokenDefault;\n        $this->dttUpdateDateTime = (ClientAuthenticationToken::UpdateDateTimeDefault === null)?null:new dxDateTime(ClientAuthenticationToken::UpdateDateTimeDefault);\n        $this->strExpiredToken = ClientAuthenticationToken::ExpiredTokenDefault;\n        $this->blnIsNative = ClientAuthenticationToken::IsNativeDefault;\n        $this->strDeviceUuid = ClientAuthenticationToken::DeviceUuidDefault;\n        $this->strDevicePlatform = ClientAuthenticationToken::DevicePlatformDefault;\n        $this->strDeviceOs = ClientAuthenticationToken::DeviceOsDefault;\n        $this->intClientConnection = ClientAuthenticationToken::ClientConnectionDefault;\n        $this->strSearchMetaInfo = ClientAuthenticationToken::SearchMetaInfoDefault;\n        $this->strLastUpdated = ClientAuthenticationToken::LastUpdatedDefault;\n        $this->intObjectOwner = ClientAuthenticationToken::ObjectOwnerDefault;\n        $this->dttDeviceRegistrationDateTime = (ClientAuthenticationToken::DeviceRegistrationDateTimeDefault === null)?null:new dxDateTime(ClientAuthenticationToken::DeviceRegistrationDateTimeDefault);\n    }\n\n    ///////////////////////////////\n    // CLASS-WIDE LOAD AND COUNT METHODS\n    ///////////////////////////////\n\n    /**\n     * Static method to retrieve the Database object that owns this class.\n     * @return dxDatabaseBase reference to the Database object that can query this class\n     */\n    public static function GetDatabase() {\n        return ProjectFunctions::$Database[1];\n    }\n\n    /**\n     * Load a ClientAuthenticationToken from PK Info\n     * @param integer $intId\n     * @param dxQueryClause[] $objOptionalClauses additional optional dxQueryClause objects for this query\n     * @return ClientAuthenticationToken\n     */\n    public static function Load($intId, $objOptionalClauses = null) {\n        $strCacheKey = false;\n        if (ProjectFunctions::$objCacheProvider && !$objOptionalClauses && ProjectFunctions::$Database[1]->Caching) {\n            $strCacheKey = ProjectFunctions::$objCacheProvider->CreateKey(ProjectFunctions::$Database[1]->Database, 'ClientAuthenticationToken', $intId);\n            $objCachedObject = ProjectFunctions::$objCacheProvider->Get($strCacheKey);\n            if ($objCachedObject !== false) {\n                return $objCachedObject;\n            }\n        }\n        // Use QuerySingle to Perform the Query\n        $objToReturn = ClientAuthenticationToken::QuerySingle(\n            dxQuery::AndCondition(\n                dxQuery::Equal(dxQueryN::ClientAuthenticationToken()->Id, $intId)\n            ),\n            $objOptionalClauses\n        );\n        if ($strCacheKey !== false) {\n            ProjectFunctions::$objCacheProvider->Set($strCacheKey, $objToReturn);\n        }\n        return $objToReturn;\n    }\n\n    /**\n     * Load all ClientAuthenticationTokens\n     * @param dxQueryClause[] $objOptionalClauses additional optional dxQueryClause objects for this query\n     * @return ClientAuthenticationToken[]\n     */\n    public static function LoadAll($objOptionalClauses = null) {\n        if (func_num_args() > 1) {\n            throw new dxCallerException(\"LoadAll must be called with an array of optional clauses as a single argument\");\n        }\n        // Call ClientAuthenticationToken::QueryArray to perform the LoadAll query\n        try {\n            return ClientAuthenticationToken::QueryArray(dxQuery::All(), $objOptionalClauses);\n        } catch (dxCallerException $objExc) {\n            $objExc->IncrementOffset();\n            throw $objExc;\n        }\n    }\n\n    /**\n     * Count all ClientAuthenticationTokens\n     * @return int\n     */\n    public static function CountAll() {\n        // Call ClientAuthenticationToken::QueryCount to perform the CountAll query\n        return ClientAuthenticationToken::QueryCount(dxQuery::All());\n    }\n\n    ///////////////////////////////\n    // DIVBLOX QUERY-RELATED METHODS\n    ///////////////////////////////\n\n    /**\n     * Internally called method to assist with calling divblox Query for this class\n     * on load methods.\n     * @param dxQueryBuilder &$objQueryBuilder the QueryBuilder object that will be created\n     * @param dxQueryCondition $objConditions any conditions on the query, itself\n     * @param dxQueryClause[] $objOptionalClausees additional optional dxQueryClause object or array of dxQueryClause objects for this query\n     * @param mixed[] $mixParameterArray a array of name-value pairs to perform PrepareStatement with (sending in null will skip the PrepareStatement step)\n     * @param boolean $blnCountOnly only select a rowcount\n     * @return string the query statement\n     */\n    protected static function BuildQueryStatement(&$objQueryBuilder, dxQueryCondition $objConditions, $objOptionalClauses, $mixParameterArray, $blnCountOnly) {\n        // Get the Database Object for this Class\n        $objDatabase = ClientAuthenticationToken::GetDatabase();\n\n        // Create/Build out the QueryBuilder object with ClientAuthenticationToken-specific SELET and FROM fields\n        $objQueryBuilder = new dxQueryBuilder($objDatabase, 'ClientAuthenticationToken');\n\n        $blnAddAllFieldsToSelect = true;\n        if ($objDatabase->OnlyFullGroupBy) {\n            // see if we have any group by or aggregation clauses, if yes, don't add the fields to select clause\n            if ($objOptionalClauses instanceof dxQueryClause) {\n                if ($objOptionalClauses instanceof dxQueryAggregationClause || $objOptionalClauses instanceof dxQueryGroupBy) {\n                    $blnAddAllFieldsToSelect = false;\n                }\n            } else if (is_array($objOptionalClauses)) {\n                foreach ($objOptionalClauses as $objClause) {\n                    if ($objClause instanceof dxQueryAggregationClause || $objClause instanceof dxQueryGroupBy) {\n                        $blnAddAllFieldsToSelect = false;\n                        break;\n                    }\n                }\n            }\n        }\n        if ($blnAddAllFieldsToSelect) {\n            ClientAuthenticationToken::GetSelectFields($objQueryBuilder, null, dxQuery::extractSelectClause($objOptionalClauses));\n        }\n        $objQueryBuilder->AddFromItem('ClientAuthenticationToken');\n\n        // Set \"CountOnly\" option (if applicable)\n        if ($blnCountOnly)\n            $objQueryBuilder->SetCountOnlyFlag();\n\n        // Apply Any Conditions\n        if ($objConditions)\n            try {\n                $objConditions->UpdateQueryBuilder($objQueryBuilder);\n            } catch (dxCallerException $objExc) {\n                $objExc->IncrementOffset();\n                throw $objExc;\n            }\n\n        // Iterate through all the Optional Clauses (if any) and perform accordingly\n        if ($objOptionalClauses) {\n            if ($objOptionalClauses instanceof dxQueryClause)\n                $objOptionalClauses->UpdateQueryBuilder($objQueryBuilder);\n            else if (is_array($objOptionalClauses))\n                foreach ($objOptionalClauses as $objClause)\n                    $objClause->UpdateQueryBuilder($objQueryBuilder);\n            else\n                throw new dxCallerException('Optional Clauses must be a dxQueryClause object or an array of dxQueryClause objects');\n        }\n\n        // Get the SQL Statement\n        $strQuery = $objQueryBuilder->GetStatement();\n\n        // Prepare the Statement with the Query Parameters (if applicable)\n        if ($mixParameterArray) {\n            if (is_array($mixParameterArray)) {\n                if (ProjectFunctions::getDataSetSize($mixParameterArray))\n                    $strQuery = $objDatabase->PrepareStatement($strQuery, $mixParameterArray);\n\n                // Ensure that there are no other Unresolved Named Parameters\n                if (strpos($strQuery, chr(dxQueryNamedValue::DelimiterCode) . '{') !== false)\n                    throw new dxCallerException('Unresolved named parameters in the query');\n            } else\n                throw new dxCallerException('Parameter Array must be an array of name-value parameter pairs');\n        }\n\n        // Return the Objects\n        return $strQuery;\n    }\n\n    /**\n     * Static divblox Query method to query for a single ClientAuthenticationToken object.\n     * Uses BuildQueryStatment to perform most of the work.\n     * @param dxQueryCondition $objConditions any conditions on the query, itself\n     * @param dxQueryClause[] $objOptionalClausees additional optional dxQueryClause objects for this query\n     * @param mixed[] $mixParameterArray a array of name-value pairs to perform PrepareStatement with\n     * @return ClientAuthenticationToken the queried object\n     */\n    public static function QuerySingle(dxQueryCondition $objConditions, $objOptionalClauses = null, $mixParameterArray = null) {\n        // Get the Query Statement\n        try {\n            $strQuery = ClientAuthenticationToken::BuildQueryStatement($objQueryBuilder, $objConditions, $objOptionalClauses, $mixParameterArray, false);\n        } catch (dxCallerException $objExc) {\n            $objExc->IncrementOffset();\n            throw $objExc;\n        }\n\n        // Perform the Query, Get the First Row, and Instantiate a new ClientAuthenticationToken object\n        $objDbResult = $objQueryBuilder->Database->Query($strQuery);\n\n        // Do we have to expand anything?\n        if ($objQueryBuilder->ExpandAsArrayNode) {\n            $objToReturn = array();\n            $objPrevItemArray = array();\n            while ($objDbRow = $objDbResult->GetNextRow()) {\n                $objItem = ClientAuthenticationToken::InstantiateDbRow($objDbRow, null, $objQueryBuilder->ExpandAsArrayNode, $objPrevItemArray, $objQueryBuilder->ColumnAliasArray);\n                if ($objItem) {\n                    $objToReturn[] = $objItem;\n                    $objPrevItemArray[$objItem->intId][] = $objItem;\n                }\n            }\n            if (ProjectFunctions::getDataSetSize($objToReturn)) {\n                // Since we only want the object to return, lets return the object and not the array.\n                return $objToReturn[0];\n            } else {\n                return null;\n            }\n        } else {\n            // No expands just return the first row\n            $objDbRow = $objDbResult->GetNextRow();\n            if(null === $objDbRow)\n                return null;\n            return ClientAuthenticationToken::InstantiateDbRow($objDbRow, null, null, null, $objQueryBuilder->ColumnAliasArray);\n        }\n    }\n\n    /**\n     * Static divblox Query method to query for an array of ClientAuthenticationToken objects.\n     * Uses BuildQueryStatment to perform most of the work.\n     * @param dxQueryCondition $objConditions any conditions on the query, itself\n     * @param dxQueryClause[] $objOptionalClausees additional optional dxQueryClause objects for this query\n     * @param mixed[] $mixParameterArray a array of name-value pairs to perform PrepareStatement with\n     * @return ClientAuthenticationToken[] the queried objects as an array\n     */\n    public static function QueryArray(dxQueryCondition $objConditions, $objOptionalClauses = null, $mixParameterArray = null) {\n        // Get the Query Statement\n        try {\n            $strQuery = ClientAuthenticationToken::BuildQueryStatement($objQueryBuilder, $objConditions, $objOptionalClauses, $mixParameterArray, false);\n        } catch (dxCallerException $objExc) {\n            $objExc->IncrementOffset();\n            throw $objExc;\n        }\n\n        // Perform the Query and Instantiate the Array Result\n        $objDbResult = $objQueryBuilder->Database->Query($strQuery);\n        return ClientAuthenticationToken::InstantiateDbResult($objDbResult, $objQueryBuilder->ExpandAsArrayNode, $objQueryBuilder->ColumnAliasArray);\n    }\n\n    /**\n     * Static divblox query method to issue a query and get a cursor to progressively fetch its results.\n     * Uses BuildQueryStatment to perform most of the work.\n     * @param dxQueryCondition $objConditions any conditions on the query, itself\n     * @param dxQueryClause[] $objOptionalClauses additional optional dxQueryClause objects for this query\n     * @param mixed[] $mixParameterArray a array of name-value pairs to perform PrepareStatement with\n     * @return dxDatabaseResultBase the cursor resource instance\n     */\n    public static function QueryCursor(dxQueryCondition $objConditions, $objOptionalClauses = null, $mixParameterArray = null) {\n        // Get the query statement\n        try {\n            $strQuery = ClientAuthenticationToken::BuildQueryStatement($objQueryBuilder, $objConditions, $objOptionalClauses, $mixParameterArray, false);\n        } catch (dxCallerException $objExc) {\n            $objExc->IncrementOffset();\n            throw $objExc;\n        }\n\n        // Perform the query\n        $objDbResult = $objQueryBuilder->Database->Query($strQuery);\n\n        // Return the results cursor\n        $objDbResult->QueryBuilder = $objQueryBuilder;\n        return $objDbResult;\n    }\n\n    /**\n     * Static divblox Query method to query for a count of ClientAuthenticationToken objects.\n     * Uses BuildQueryStatment to perform most of the work.\n     * @param dxQueryCondition $objConditions any conditions on the query, itself\n     * @param dxQueryClause[] $objOptionalClausees additional optional dxQueryClause objects for this query\n     * @param mixed[] $mixParameterArray a array of name-value pairs to perform PrepareStatement with\n     * @return integer the count of queried objects as an integer\n     */\n    public static function QueryCount(dxQueryCondition $objConditions, $objOptionalClauses = null, $mixParameterArray = null) {\n        // Get the Query Statement\n        try {\n            $strQuery = ClientAuthenticationToken::BuildQueryStatement($objQueryBuilder, $objConditions, $objOptionalClauses, $mixParameterArray, true);\n        } catch (dxCallerException $objExc) {\n            $objExc->IncrementOffset();\n            throw $objExc;\n        }\n\n        // Perform the Query and return the row_count\n        $objDbResult = $objQueryBuilder->Database->Query($strQuery);\n\n        // Figure out if the query is using GroupBy\n        $blnGrouped = false;\n\n        if ($objOptionalClauses) {\n            if ($objOptionalClauses instanceof dxQueryClause) {\n                if ($objOptionalClauses instanceof dxQueryGroupBy) {\n                    $blnGrouped = true;\n                }\n            } else if (is_array($objOptionalClauses)) {\n                foreach ($objOptionalClauses as $objClause) {\n                    if ($objClause instanceof dxQueryGroupBy) {\n                        $blnGrouped = true;\n                        break;\n                    }\n                }\n            } else {\n                throw new dxCallerException('Optional Clauses must be a dxQueryClause object or an array of dxQueryClause objects');\n            }\n        }\n\n        if ($blnGrouped)\n            // Groups in this query - return the count of Groups (which is the count of all rows)\n            return $objDbResult->CountRows();\n        else {\n            // No Groups - return the sql-calculated count(*) value\n            $strDbRow = $objDbResult->FetchRow();\n            return dxType::Cast($strDbRow[0], dxType::Integer);\n        }\n    }\n\n    public static function QueryArrayCached(dxQueryCondition $objConditions, $objOptionalClauses = null, $mixParameterArray = null, $blnForceUpdate = false) {\n        // Get the Database Object for this Class\n        $objDatabase = ClientAuthenticationToken::GetDatabase();\n\n        $strQuery = ClientAuthenticationToken::BuildQueryStatement($objQueryBuilder, $objConditions, $objOptionalClauses, $mixParameterArray, false);\n\n        $objCache = new dxCache('dxquery/clientauthenticationtoken', $strQuery);\n        $cacheData = $objCache->GetData();\n\n        if (!$cacheData || $blnForceUpdate) {\n            $objDbResult = $objQueryBuilder->Database->Query($strQuery);\n            $arrResult = ClientAuthenticationToken::InstantiateDbResult($objDbResult, $objQueryBuilder->ExpandAsArrayNode, $objQueryBuilder->ColumnAliasArray);\n            $objCache->SaveData(serialize($arrResult));\n        } else {\n            $arrResult = unserialize($cacheData);\n        }\n\n        return $arrResult;\n    }\n\n    /**\n     * Updates a dxQueryBuilder with the SELECT fields for this ClientAuthenticationToken\n     * @param dxQueryBuilder $objBuilder the Query Builder object to update\n     * @param string $strPrefix optional prefix to add to the SELECT fields\n     */\n    public static function GetSelectFields(dxQueryBuilder $objBuilder, $strPrefix = null, dxQuerySelect $objSelect = null) {\n        if ($strPrefix) {\n            $strTableName = $strPrefix;\n            $strAliasPrefix = $strPrefix . '__';\n        } else {\n            $strTableName = 'ClientAuthenticationToken';\n            $strAliasPrefix = '';\n        }\n\n        if ($objSelect) {\n            $objBuilder->AddSelectItem($strTableName, 'Id', $strAliasPrefix . 'Id');\n            $objSelect->AddSelectItems($objBuilder, $strTableName, $strAliasPrefix);\n        } else {\n            $objBuilder->AddSelectItem($strTableName, 'Id', $strAliasPrefix . 'Id');\n            $objBuilder->AddSelectItem($strTableName, 'Token', $strAliasPrefix . 'Token');\n            $objBuilder->AddSelectItem($strTableName, 'UpdateDateTime', $strAliasPrefix . 'UpdateDateTime');\n            $objBuilder->AddSelectItem($strTableName, 'ExpiredToken', $strAliasPrefix . 'ExpiredToken');\n            $objBuilder->AddSelectItem($strTableName, 'IsNative', $strAliasPrefix . 'IsNative');\n            $objBuilder->AddSelectItem($strTableName, 'DeviceUuid', $strAliasPrefix . 'DeviceUuid');\n            $objBuilder->AddSelectItem($strTableName, 'DevicePlatform', $strAliasPrefix . 'DevicePlatform');\n            $objBuilder->AddSelectItem($strTableName, 'DeviceOs', $strAliasPrefix . 'DeviceOs');\n            $objBuilder->AddSelectItem($strTableName, 'ClientConnection', $strAliasPrefix . 'ClientConnection');\n            $objBuilder->AddSelectItem($strTableName, 'SearchMetaInfo', $strAliasPrefix . 'SearchMetaInfo');\n            $objBuilder->AddSelectItem($strTableName, 'LastUpdated', $strAliasPrefix . 'LastUpdated');\n            $objBuilder->AddSelectItem($strTableName, 'ObjectOwner', $strAliasPrefix . 'ObjectOwner');\n            $objBuilder->AddSelectItem($strTableName, 'DeviceRegistrationDateTime', $strAliasPrefix . 'DeviceRegistrationDateTime');\n        }\n    }\n    ///////////////////////////////\n    // INSTANTIATION-RELATED METHODS\n    ///////////////////////////////\n\n    /**\n     * Do a possible array expansion on the given node. If the node is an ExpandAsArray node,\n     * it will add to the corresponding array in the object. Otherwise, it will follow the node\n     * so that any leaf expansions can be handled.\n     *\n     * @param DatabaseRowBase $objDbRow\n     * @param dxQueryBaseNode $objChildNode\n     * @param dxBaseClass $objPreviousItem\n     * @param string[] $strColumnAliasArray\n     */\n\n    public static function ExpandArray ($objDbRow, $strAliasPrefix, $objNode, $objPreviousItemArray, $strColumnAliasArray) {\n        if (!$objNode->ChildNodeArray) {\n            return false;\n        }\n\n        $strAlias = $strAliasPrefix . 'Id';\n        $strColumnAlias = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;\n        $blnExpanded = false;\n\n        foreach ($objPreviousItemArray as $objPreviousItem) {\n            if ($objPreviousItem->intId != $objDbRow->GetColumn($strColumnAlias, 'Integer')) {\n                continue;\n            }\n\n            foreach ($objNode->ChildNodeArray as $objChildNode) {\n                $strPropName = $objChildNode->_PropertyName;\n                $strClassName = $objChildNode->_ClassName;\n                $blnExpanded = false;\n                $strLongAlias = $objChildNode->ExtendedAlias();\n\n                if ($objChildNode->ExpandAsArray) {\n                    $strVarName = '_obj' . $strPropName . 'Array';\n                    if (null === $objPreviousItem->$strVarName) {\n                        $objPreviousItem->$strVarName = array();\n                    }\n                    if ($intPreviousChildItemCount = ProjectFunctions::getDataSetSize($objPreviousItem->$strVarName)) {\n                        $objPreviousChildItems = $objPreviousItem->$strVarName;\n                        if ($objChildNode->_Type == \"association\") {\n                            $objChildNode = $objChildNode->FirstChild();\n                        }\n                        $nextAlias = $objChildNode->ExtendedAlias() . '__';\n\n                        $objChildItem = call_user_func(array ($strClassName, 'InstantiateDbRow'), $objDbRow, $nextAlias, $objChildNode, $objPreviousChildItems, $strColumnAliasArray);\n                        if ($objChildItem) {\n                            $objPreviousItem->{$strVarName}[] = $objChildItem;\n                            $blnExpanded = true;\n                        } elseif ($objChildItem === false) {\n                            $blnExpanded = true;\n                        }\n                    }\n                } else {\n\n                    // Follow single node if keys match\n                    $nodeType = $objChildNode->_Type;\n                    if ($nodeType == 'reverse_reference' || $nodeType == 'association') {\n                        $strVarName = '_obj' . $strPropName;\n                    } else {\n                        $strVarName = 'obj' . $strPropName;\n                    }\n\n                    if (null === $objPreviousItem->$strVarName) {\n                        return false;\n                    }\n\n                    $objPreviousChildItems = array($objPreviousItem->$strVarName);\n                    $blnResult = call_user_func(array ($strClassName, 'ExpandArray'), $objDbRow, $strLongAlias . '__', $objChildNode, $objPreviousChildItems, $strColumnAliasArray);\n\n                    if ($blnResult) {\n                        $blnExpanded = true;\n                    }\n                }\n            }\n        }\n        return $blnExpanded;\n    }\n\n    /**\n     * Instantiate a ClientAuthenticationToken from a Database Row.\n     * Takes in an optional strAliasPrefix, used in case another Object::InstantiateDbRow\n     * is calling this ClientAuthenticationToken::InstantiateDbRow in order to perform\n     * early binding on referenced objects.\n     * @param DatabaseRowBase $objDbRow\n     * @param string $strAliasPrefix\n     * @param dxQueryBaseNode $objExpandAsArrayNode\n     * @param dxBaseClass $arrPreviousItem\n     * @param string[] $strColumnAliasArray\n     * @return mixed Either a ClientAuthenticationToken, or false to indicate the dbrow was used in an expansion, or null to indicate that this leaf is a duplicate.\n    */\n    public static function InstantiateDbRow($objDbRow, $strAliasPrefix = null, $objExpandAsArrayNode = null, $objPreviousItemArray = null, $strColumnAliasArray = array()) {\n        // If blank row, return null\n        if (!$objDbRow) {\n            return null;\n        }\n\n        if (empty ($strAliasPrefix) && $objPreviousItemArray) {\n            $strColumnAlias = !empty($strColumnAliasArray['Id']) ? $strColumnAliasArray['Id'] : 'Id';\n            $key = $objDbRow->GetColumn($strColumnAlias, 'Integer');\n            $objPreviousItemArray = (!empty ($objPreviousItemArray[$key]) ? $objPreviousItemArray[$key] : null);\n        }\n\n        // See if we're doing an array expansion on the previous item\n        if ($objExpandAsArrayNode &&\n                is_array($objPreviousItemArray) &&\n                ProjectFunctions::getDataSetSize($objPreviousItemArray)) {\n\n            if (ClientAuthenticationToken::ExpandArray ($objDbRow, $strAliasPrefix, $objExpandAsArrayNode, $objPreviousItemArray, $strColumnAliasArray)) {\n                return false; // db row was used but no new object was created\n            }\n        }\n\n        // Create a new instance of the ClientAuthenticationToken object\n        $objToReturn = new ClientAuthenticationToken();\n        $objToReturn->__blnRestored = true;\n\n        $strAlias = $strAliasPrefix . 'Id';\n        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;\n        $objToReturn->intId = $objDbRow->GetColumn($strAliasName, 'Integer');\n        $strAlias = $strAliasPrefix . 'Token';\n        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;\n        $objToReturn->strToken = $objDbRow->GetColumn($strAliasName, 'VarChar');\n        $strAlias = $strAliasPrefix . 'UpdateDateTime';\n        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;\n        $objToReturn->dttUpdateDateTime = $objDbRow->GetColumn($strAliasName, 'DateTime');\n        $strAlias = $strAliasPrefix . 'ExpiredToken';\n        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;\n        $objToReturn->strExpiredToken = $objDbRow->GetColumn($strAliasName, 'VarChar');\n        $strAlias = $strAliasPrefix . 'IsNative';\n        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;\n        $objToReturn->blnIsNative = $objDbRow->GetColumn($strAliasName, 'Bit');\n        $strAlias = $strAliasPrefix . 'DeviceUuid';\n        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;\n        $objToReturn->strDeviceUuid = $objDbRow->GetColumn($strAliasName, 'VarChar');\n        $strAlias = $strAliasPrefix . 'DevicePlatform';\n        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;\n        $objToReturn->strDevicePlatform = $objDbRow->GetColumn($strAliasName, 'VarChar');\n        $strAlias = $strAliasPrefix . 'DeviceOs';\n        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;\n        $objToReturn->strDeviceOs = $objDbRow->GetColumn($strAliasName, 'VarChar');\n        $strAlias = $strAliasPrefix . 'ClientConnection';\n        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;\n        $objToReturn->intClientConnection = $objDbRow->GetColumn($strAliasName, 'Integer');\n        $strAlias = $strAliasPrefix . 'SearchMetaInfo';\n        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;\n        $objToReturn->strSearchMetaInfo = $objDbRow->GetColumn($strAliasName, 'Blob');\n        $strAlias = $strAliasPrefix . 'LastUpdated';\n        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;\n        $objToReturn->strLastUpdated = $objDbRow->GetColumn($strAliasName, 'VarChar');\n        $strAlias = $strAliasPrefix . 'ObjectOwner';\n        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;\n        $objToReturn->intObjectOwner = $objDbRow->GetColumn($strAliasName, 'Integer');\n        $strAlias = $strAliasPrefix . 'DeviceRegistrationDateTime';\n        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;\n        $objToReturn->dttDeviceRegistrationDateTime = $objDbRow->GetColumn($strAliasName, 'DateTime');\n\n        if (isset($objPreviousItemArray) && is_array($objPreviousItemArray)) {\n            foreach ($objPreviousItemArray as $objPreviousItem) {\n                if ($objToReturn->Id != $objPreviousItem->Id) {\n                    continue;\n                }\n                // this is a duplicate leaf in a complex join\n                return null; // indicates no object created and the db row has not been used\n            }\n        }\n\n        // Instantiate Virtual Attributes\n        $strVirtualPrefix = $strAliasPrefix . '__';\n        $strVirtualPrefixLength = strlen($strVirtualPrefix);\n        foreach ($objDbRow->GetColumnNameArray() as $strColumnName => $mixValue) {\n            if (strncmp($strColumnName, $strVirtualPrefix, $strVirtualPrefixLength) == 0)\n                $objToReturn->__strVirtualAttributeArray[substr($strColumnName, $strVirtualPrefixLength)] = $mixValue;\n        }\n\n\n        // Prepare to Check for Early/Virtual Binding\n\n        $objExpansionAliasArray = array();\n        if ($objExpandAsArrayNode) {\n            $objExpansionAliasArray = $objExpandAsArrayNode->ChildNodeArray;\n        }\n\n        if (!$strAliasPrefix)\n            $strAliasPrefix = 'ClientAuthenticationToken__';\n\n        // Check for ClientConnectionObject Early Binding\n        $strAlias = $strAliasPrefix . 'ClientConnection__Id';\n        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;\n        if (!is_null($objDbRow->GetColumn($strAliasName))) {\n            $objExpansionNode = (empty($objExpansionAliasArray['ClientConnection']) ? null : $objExpansionAliasArray['ClientConnection']);\n            $objToReturn->objClientConnectionObject = ClientConnection::InstantiateDbRow($objDbRow, $strAliasPrefix . 'ClientConnection__', $objExpansionNode, null, $strColumnAliasArray);\n        }\n\n\n\n        // Check for PushRegistration Virtual Binding\n        $strAlias = $strAliasPrefix . 'pushregistration__Id';\n        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;\n        $objExpansionNode = (empty($objExpansionAliasArray['pushregistration']) ? null : $objExpansionAliasArray['pushregistration']);\n        $blnExpanded = ($objExpansionNode && $objExpansionNode->ExpandAsArray);\n        if ($blnExpanded && null === $objToReturn->_objPushRegistrationArray)\n            $objToReturn->_objPushRegistrationArray = array();\n        if (!is_null($objDbRow->GetColumn($strAliasName))) {\n            if ($blnExpanded) {\n                $objToReturn->_objPushRegistrationArray[] = PushRegistration::InstantiateDbRow($objDbRow, $strAliasPrefix . 'pushregistration__', $objExpansionNode, null, $strColumnAliasArray);\n            } elseif (is_null($objToReturn->_objPushRegistration)) {\n                $objToReturn->_objPushRegistration = PushRegistration::InstantiateDbRow($objDbRow, $strAliasPrefix . 'pushregistration__', $objExpansionNode, null, $strColumnAliasArray);\n            }\n        }\n\n        return $objToReturn;\n    }\n\n    /**\n     * Instantiate an array of ClientAuthenticationTokens from a Database Result\n     * @param DatabaseResultBase $objDbResult\n     * @param dxQueryBaseNode $objExpandAsArrayNode\n     * @param string[] $strColumnAliasArray\n     * @return ClientAuthenticationToken[]\n     */\n    public static function InstantiateDbResult(dxDatabaseResultBase $objDbResult, $objExpandAsArrayNode = null, $strColumnAliasArray = null) {\n        $objToReturn = array();\n\n        if (!$strColumnAliasArray)\n            $strColumnAliasArray = array();\n\n        // If blank resultset, then return empty array\n        if (!$objDbResult)\n            return $objToReturn;\n\n        // Load up the return array with each row\n        if ($objExpandAsArrayNode) {\n            $objToReturn = array();\n            $objPrevItemArray = array();\n            while ($objDbRow = $objDbResult->GetNextRow()) {\n                $objItem = ClientAuthenticationToken::InstantiateDbRow($objDbRow, null, $objExpandAsArrayNode, $objPrevItemArray, $strColumnAliasArray);\n                if ($objItem) {\n                    $objToReturn[] = $objItem;\n                    $objPrevItemArray[$objItem->intId][] = $objItem;\n                }\n            }\n        } else {\n            while ($objDbRow = $objDbResult->GetNextRow())\n                $objToReturn[] = ClientAuthenticationToken::InstantiateDbRow($objDbRow, null, null, null, $strColumnAliasArray);\n        }\n\n        return $objToReturn;\n    }\n\n\n    /**\n     * Instantiate a single ClientAuthenticationToken object from a query cursor (e.g. a DB ResultSet).\n     * Cursor is automatically moved to the \"next row\" of the result set.\n     * Will return NULL if no cursor or if the cursor has no more rows in the resultset.\n     * @param dxDatabaseResultBase $objDbResult cursor resource\n     * @return ClientAuthenticationToken next row resulting from the query\n     */\n    public static function InstantiateCursor(dxDatabaseResultBase $objDbResult) {\n        // If blank resultset, then return empty result\n        if (!$objDbResult) return null;\n\n        // If empty resultset, then return empty result\n        $objDbRow = $objDbResult->GetNextRow();\n        if (!$objDbRow) return null;\n\n        // We need the Column Aliases\n        $strColumnAliasArray = $objDbResult->QueryBuilder->ColumnAliasArray;\n        if (!$strColumnAliasArray) $strColumnAliasArray = array();\n\n        // Pull Expansions\n        $objExpandAsArrayNode = $objDbResult->QueryBuilder->ExpandAsArrayNode;\n        if (!empty ($objExpandAsArrayNode)) {\n            throw new dxCallerException (\"Cannot use InstantiateCursor with ExpandAsArray\");\n        }\n\n        // Load up the return result with a row and return it\n        return ClientAuthenticationToken::InstantiateDbRow($objDbRow, null, null, null, $strColumnAliasArray);\n    }\n\n    ///////////////////////////////////////////////////\n    // INDEX-BASED LOAD METHODS (Single Load and Array)\n    ///////////////////////////////////////////////////\n\n    /**\n     * Load a single ClientAuthenticationToken object,\n     * by Id Index(es)\n     * @param integer $intId\n     * @param dxQueryClause[] $objOptionalClauses additional optional dxQueryClause objects for this query\n     * @return ClientAuthenticationToken\n    */\n    public static function LoadById($intId, $objOptionalClauses = null) {\n        return ClientAuthenticationToken::QuerySingle(\n            dxQuery::AndCondition(\n                dxQuery::Equal(dxQueryN::ClientAuthenticationToken()->Id, $intId)\n            ),\n            $objOptionalClauses\n        );\n    }\n\n    /**\n     * Load a single ClientAuthenticationToken object,\n     * by Token Index(es)\n     * @param string $strToken\n     * @param dxQueryClause[] $objOptionalClauses additional optional dxQueryClause objects for this query\n     * @return ClientAuthenticationToken\n    */\n    public static function LoadByToken($strToken, $objOptionalClauses = null) {\n        return ClientAuthenticationToken::QuerySingle(\n            dxQuery::AndCondition(\n                dxQuery::Equal(dxQueryN::ClientAuthenticationToken()->Token, $strToken)\n            ),\n            $objOptionalClauses\n        );\n    }\n\n    /**\n     * Load a single ClientAuthenticationToken object,\n     * by ExpiredToken Index(es)\n     * @param string $strExpiredToken\n     * @param dxQueryClause[] $objOptionalClauses additional optional dxQueryClause objects for this query\n     * @return ClientAuthenticationToken\n    */\n    public static function LoadByExpiredToken($strExpiredToken, $objOptionalClauses = null) {\n        return ClientAuthenticationToken::QuerySingle(\n            dxQuery::AndCondition(\n                dxQuery::Equal(dxQueryN::ClientAuthenticationToken()->ExpiredToken, $strExpiredToken)\n            ),\n            $objOptionalClauses\n        );\n    }\n\n    /**\n     * Load an array of ClientAuthenticationToken objects,\n     * by ClientConnection Index(es)\n     * @param integer $intClientConnection\n     * @param dxQueryClause[] $objOptionalClauses additional optional dxQueryClause objects for this query\n     * @return ClientAuthenticationToken[]\n    */\n    public static function LoadArrayByClientConnection($intClientConnection, $objOptionalClauses = null) {\n        // Call ClientAuthenticationToken::QueryArray to perform the LoadArrayByClientConnection query\n        try {\n            return ClientAuthenticationToken::QueryArray(\n                dxQuery::Equal(dxQueryN::ClientAuthenticationToken()->ClientConnection, $intClientConnection),\n                $objOptionalClauses);\n        } catch (dxCallerException $objExc) {\n            $objExc->IncrementOffset();\n            throw $objExc;\n        }\n    }\n\n    /**\n     * Count ClientAuthenticationTokens\n     * by ClientConnection Index(es)\n     * @param integer $intClientConnection\n     * @return int\n    */\n    public static function CountByClientConnection($intClientConnection) {\n        // Call ClientAuthenticationToken::QueryCount to perform the CountByClientConnection query\n        return ClientAuthenticationToken::QueryCount(\n            dxQuery::Equal(dxQueryN::ClientAuthenticationToken()->ClientConnection, $intClientConnection)\n        );\n    }\n    ////////////////////////////////////////////////////\n    // INDEX-BASED LOAD METHODS (Array via Many to Many)\n    ////////////////////////////////////////////////////\n\n\n    //////////////////////////\n    // SAVE, DELETE AND RELOAD\n    //////////////////////////\n\n    /**\n    * Save this ClientAuthenticationToken\n    * @param bool $blnForceInsert\n    * @param bool $blnForceUpdate\n    * @return int\n    */\n    public function Save($blnForceInsert = false, $blnForceUpdate = false) {\n        $ObjectAccessArray = ProjectAccessManager::getObjectAccess(ProjectFunctions::getCurrentAccountId(),\"ClientAuthenticationToken\",$this->intId);\n        // Get the Database Object for this Class\n        $objDatabase = ClientAuthenticationToken::GetDatabase();\n        $mixToReturn = null;\n        if (!is_numeric($this->intObjectOwner)) {\n            $this->intObjectOwner = ProjectFunctions::getCurrentAccountId();\n        }\n        $ExistingObj = ClientAuthenticationToken::Load($this->intId);\n        $newAuditLogEntry = new AuditLogEntry();\n        $ChangedArray = array();\n        $newAuditLogEntry->EntryTimeStamp = dxDateTime::Now();\n        $newAuditLogEntry->ObjectId = $this->intId;\n        $newAuditLogEntry->ObjectName = 'ClientAuthenticationToken';\n        $newAuditLogEntry->UserEmail = ProjectFunctions::getCurrentUserEmailForAudit();\n        if (!$ExistingObj) {\n            $newAuditLogEntry->ModificationType = 'Create';\n            $ChangedArray = array_merge($ChangedArray,array(\"Id\" => $this->intId));\n            $ChangedArray = array_merge($ChangedArray,array(\"Token\" => $this->strToken));\n            $ChangedArray = array_merge($ChangedArray,array(\"UpdateDateTime\" => $this->dttUpdateDateTime));\n            $ChangedArray = array_merge($ChangedArray,array(\"ExpiredToken\" => $this->strExpiredToken));\n            $ChangedArray = array_merge($ChangedArray,array(\"IsNative\" => $this->blnIsNative));\n            $ChangedArray = array_merge($ChangedArray,array(\"DeviceUuid\" => $this->strDeviceUuid));\n            $ChangedArray = array_merge($ChangedArray,array(\"DevicePlatform\" => $this->strDevicePlatform));\n            $ChangedArray = array_merge($ChangedArray,array(\"DeviceOs\" => $this->strDeviceOs));\n            $ChangedArray = array_merge($ChangedArray,array(\"ClientConnection\" => $this->intClientConnection));\n            $ChangedArray = array_merge($ChangedArray,array(\"SearchMetaInfo\" => $this->strSearchMetaInfo));\n            $ChangedArray = array_merge($ChangedArray,array(\"LastUpdated\" => $this->strLastUpdated));\n            $ChangedArray = array_merge($ChangedArray,array(\"ObjectOwner\" => $this->intObjectOwner));\n            $ChangedArray = array_merge($ChangedArray,array(\"DeviceRegistrationDateTime\" => $this->dttDeviceRegistrationDateTime));\n            $newAuditLogEntry->AuditLogEntryDetail = json_encode($ChangedArray);\n        } else {\n            $newAuditLogEntry->ModificationType = 'Update';\n            $ExistingValueStr = \"NULL\";\n            if (!is_null($ExistingObj->Id)) {\n                $ExistingValueStr = $ExistingObj->Id;\n            }\n            if ($ExistingObj->Id != $this->intId) {\n                $ChangedArray = array_merge($ChangedArray,array(\"Id\" => array(\"Before\" => $ExistingValueStr,\"After\" => $this->intId)));\n                //$ChangedArray = array_merge($ChangedArray,array(\"Id\" => \"From: \".$ExistingValueStr.\" to: \".$this->intId));\n            }\n            $ExistingValueStr = \"NULL\";\n            if (!is_null($ExistingObj->Token)) {\n                $ExistingValueStr = $ExistingObj->Token;\n            }\n            if ($ExistingObj->Token != $this->strToken) {\n                $ChangedArray = array_merge($ChangedArray,array(\"Token\" => array(\"Before\" => $ExistingValueStr,\"After\" => $this->strToken)));\n                //$ChangedArray = array_merge($ChangedArray,array(\"Token\" => \"From: \".$ExistingValueStr.\" to: \".$this->strToken));\n            }\n            $ExistingValueStr = \"NULL\";\n            if (!is_null($ExistingObj->UpdateDateTime)) {\n                $ExistingValueStr = $ExistingObj->UpdateDateTime;\n            }\n            if ($ExistingObj->UpdateDateTime != $this->dttUpdateDateTime) {\n                $ChangedArray = array_merge($ChangedArray,array(\"UpdateDateTime\" => array(\"Before\" => $ExistingValueStr,\"After\" => $this->dttUpdateDateTime)));\n                //$ChangedArray = array_merge($ChangedArray,array(\"UpdateDateTime\" => \"From: \".$ExistingValueStr.\" to: \".$this->dttUpdateDateTime));\n            }\n            $ExistingValueStr = \"NULL\";\n            if (!is_null($ExistingObj->ExpiredToken)) {\n                $ExistingValueStr = $ExistingObj->ExpiredToken;\n            }\n            if ($ExistingObj->ExpiredToken != $this->strExpiredToken) {\n                $ChangedArray = array_merge($ChangedArray,array(\"ExpiredToken\" => array(\"Before\" => $ExistingValueStr,\"After\" => $this->strExpiredToken)));\n                //$ChangedArray = array_merge($ChangedArray,array(\"ExpiredToken\" => \"From: \".$ExistingValueStr.\" to: \".$this->strExpiredToken));\n            }\n            $ExistingValueStr = \"NULL\";\n            if (!is_null($ExistingObj->IsNative)) {\n                $ExistingValueStr = $ExistingObj->IsNative;\n            }\n            if ($ExistingObj->IsNative != $this->blnIsNative) {\n                $ChangedArray = array_merge($ChangedArray,array(\"IsNative\" => array(\"Before\" => $ExistingValueStr,\"After\" => $this->blnIsNative)));\n                //$ChangedArray = array_merge($ChangedArray,array(\"IsNative\" => \"From: \".$ExistingValueStr.\" to: \".$this->blnIsNative));\n            }\n            $ExistingValueStr = \"NULL\";\n            if (!is_null($ExistingObj->DeviceUuid)) {\n                $ExistingValueStr = $ExistingObj->DeviceUuid;\n            }\n            if ($ExistingObj->DeviceUuid != $this->strDeviceUuid) {\n                $ChangedArray = array_merge($ChangedArray,array(\"DeviceUuid\" => array(\"Before\" => $ExistingValueStr,\"After\" => $this->strDeviceUuid)));\n                //$ChangedArray = array_merge($ChangedArray,array(\"DeviceUuid\" => \"From: \".$ExistingValueStr.\" to: \".$this->strDeviceUuid));\n            }\n            $ExistingValueStr = \"NULL\";\n            if (!is_null($ExistingObj->DevicePlatform)) {\n                $ExistingValueStr = $ExistingObj->DevicePlatform;\n            }\n            if ($ExistingObj->DevicePlatform != $this->strDevicePlatform) {\n                $ChangedArray = array_merge($ChangedArray,array(\"DevicePlatform\" => array(\"Before\" => $ExistingValueStr,\"After\" => $this->strDevicePlatform)));\n                //$ChangedArray = array_merge($ChangedArray,array(\"DevicePlatform\" => \"From: \".$ExistingValueStr.\" to: \".$this->strDevicePlatform));\n            }\n            $ExistingValueStr = \"NULL\";\n            if (!is_null($ExistingObj->DeviceOs)) {\n                $ExistingValueStr = $ExistingObj->DeviceOs;\n            }\n            if ($ExistingObj->DeviceOs != $this->strDeviceOs) {\n                $ChangedArray = array_merge($ChangedArray,array(\"DeviceOs\" => array(\"Before\" => $ExistingValueStr,\"After\" => $this->strDeviceOs)));\n                //$ChangedArray = array_merge($ChangedArray,array(\"DeviceOs\" => \"From: \".$ExistingValueStr.\" to: \".$this->strDeviceOs));\n            }\n            $ExistingValueStr = \"NULL\";\n            if (!is_null($ExistingObj->ClientConnection)) {\n                $ExistingValueStr = $ExistingObj->ClientConnection;\n            }\n            if ($ExistingObj->ClientConnection != $this->intClientConnection) {\n                $ChangedArray = array_merge($ChangedArray,array(\"ClientConnection\" => array(\"Before\" => $ExistingValueStr,\"After\" => $this->intClientConnection)));\n                //$ChangedArray = array_merge($ChangedArray,array(\"ClientConnection\" => \"From: \".$ExistingValueStr.\" to: \".$this->intClientConnection));\n            }\n            $ExistingValueStr = \"NULL\";\n            if (!is_null($ExistingObj->SearchMetaInfo)) {\n                $ExistingValueStr = $ExistingObj->SearchMetaInfo;\n            }\n            if ($ExistingObj->SearchMetaInfo != $this->strSearchMetaInfo) {\n                $ChangedArray = array_merge($ChangedArray,array(\"SearchMetaInfo\" => array(\"Before\" => $ExistingValueStr,\"After\" => $this->strSearchMetaInfo)));\n                //$ChangedArray = array_merge($ChangedArray,array(\"SearchMetaInfo\" => \"From: \".$ExistingValueStr.\" to: \".$this->strSearchMetaInfo));\n            }\n            $ExistingValueStr = \"NULL\";\n            if (!is_null($ExistingObj->LastUpdated)) {\n                $ExistingValueStr = $ExistingObj->LastUpdated;\n            }\n            if ($ExistingObj->LastUpdated != $this->strLastUpdated) {\n                $ChangedArray = array_merge($ChangedArray,array(\"LastUpdated\" => array(\"Before\" => $ExistingValueStr,\"After\" => $this->strLastUpdated)));\n                //$ChangedArray = array_merge($ChangedArray,array(\"LastUpdated\" => \"From: \".$ExistingValueStr.\" to: \".$this->strLastUpdated));\n            }\n            $ExistingValueStr = \"NULL\";\n            if (!is_null($ExistingObj->ObjectOwner)) {\n                $ExistingValueStr = $ExistingObj->ObjectOwner;\n            }\n            if ($ExistingObj->ObjectOwner != $this->intObjectOwner) {\n                $ChangedArray = array_merge($ChangedArray,array(\"ObjectOwner\" => array(\"Before\" => $ExistingValueStr,\"After\" => $this->intObjectOwner)));\n                //$ChangedArray = array_merge($ChangedArray,array(\"ObjectOwner\" => \"From: \".$ExistingValueStr.\" to: \".$this->intObjectOwner));\n            }\n            $ExistingValueStr = \"NULL\";\n            if (!is_null($ExistingObj->DeviceRegistrationDateTime)) {\n                $ExistingValueStr = $ExistingObj->DeviceRegistrationDateTime;\n            }\n            if ($ExistingObj->DeviceRegistrationDateTime != $this->dttDeviceRegistrationDateTime) {\n                $ChangedArray = array_merge($ChangedArray,array(\"DeviceRegistrationDateTime\" => array(\"Before\" => $ExistingValueStr,\"After\" => $this->dttDeviceRegistrationDateTime)));\n                //$ChangedArray = array_merge($ChangedArray,array(\"DeviceRegistrationDateTime\" => \"From: \".$ExistingValueStr.\" to: \".$this->dttDeviceRegistrationDateTime));\n            }\n            $newAuditLogEntry->AuditLogEntryDetail = json_encode($ChangedArray);\n        }\n        try {\n            if ((!$this->__blnRestored) || ($blnForceInsert)) {\n                if (!in_array(AccessOperation::CREATE_STR,$ObjectAccessArray)) {\n                    // This user is not allowed to create an object of this type\n                    throw new Exception(\"User is not allowed to perform operation \".AccessOperation::CREATE_STR.\" on entity of type 'ClientAuthenticationToken'. Allowed access is \".json_encode($ObjectAccessArray));\n                }\n                // Perform an INSERT query\n                $objDatabase->NonQuery('\n                INSERT INTO `ClientAuthenticationToken` (\n\t\t\t\t\t\t\t`Token`,\n\t\t\t\t\t\t\t`UpdateDateTime`,\n\t\t\t\t\t\t\t`ExpiredToken`,\n\t\t\t\t\t\t\t`IsNative`,\n\t\t\t\t\t\t\t`DeviceUuid`,\n\t\t\t\t\t\t\t`DevicePlatform`,\n\t\t\t\t\t\t\t`DeviceOs`,\n\t\t\t\t\t\t\t`ClientConnection`,\n\t\t\t\t\t\t\t`SearchMetaInfo`,\n\t\t\t\t\t\t\t`ObjectOwner`,\n\t\t\t\t\t\t\t`DeviceRegistrationDateTime`\n\t\t\t\t\t\t) VALUES (\n\t\t\t\t\t\t\t' . $objDatabase->SqlVariable($this->strToken) . ',\n\t\t\t\t\t\t\t' . $objDatabase->SqlVariable($this->dttUpdateDateTime) . ',\n\t\t\t\t\t\t\t' . $objDatabase->SqlVariable($this->strExpiredToken) . ',\n\t\t\t\t\t\t\t' . $objDatabase->SqlVariable($this->blnIsNative) . ',\n\t\t\t\t\t\t\t' . $objDatabase->SqlVariable($this->strDeviceUuid) . ',\n\t\t\t\t\t\t\t' . $objDatabase->SqlVariable($this->strDevicePlatform) . ',\n\t\t\t\t\t\t\t' . $objDatabase->SqlVariable($this->strDeviceOs) . ',\n\t\t\t\t\t\t\t' . $objDatabase->SqlVariable($this->intClientConnection) . ',\n\t\t\t\t\t\t\t' . $objDatabase->SqlVariable($this->strSearchMetaInfo) . ',\n\t\t\t\t\t\t\t' . $objDatabase->SqlVariable($this->intObjectOwner) . ',\n\t\t\t\t\t\t\t' . $objDatabase->SqlVariable($this->dttDeviceRegistrationDateTime) . '\n\t\t\t\t\t\t)\n                ');\n\t\t\t\t\t// Update Identity column and return its value\n                $mixToReturn = $this->intId = $objDatabase->InsertId('ClientAuthenticationToken', 'Id');\n            } else {\n                // Perform an UPDATE query\n                // First checking for Optimistic Locking constraints (if applicable)\n                if (!in_array(AccessOperation::UPDATE_STR,$ObjectAccessArray)) {\n                    // This user is not allowed to create an object of this type\n                    throw new Exception(\"User is not allowed to perform operation \".AccessOperation::UPDATE_STR.\" on entity of type 'ClientAuthenticationToken'. Allowed access is \".json_encode($ObjectAccessArray));\n                }\n                if (!$blnForceUpdate) {\n                    // Perform the Optimistic Locking check\n                    $objResult = $objDatabase->Query('\n                    SELECT `LastUpdated` FROM `ClientAuthenticationToken` WHERE\n\t\t\t\t\t\t\t`Id` = ' . $objDatabase->SqlVariable($this->intId) . '');\n\n                $objRow = $objResult->FetchArray();\n                if ($objRow[0] != $this->strLastUpdated)\n                    throw new dxOptimisticLockingException('ClientAuthenticationToken');\n            }\n\n            // Perform the UPDATE query\n            $objDatabase->NonQuery('\n            UPDATE `ClientAuthenticationToken` SET\n\t\t\t\t\t\t\t`Token` = ' . $objDatabase->SqlVariable($this->strToken) . ',\n\t\t\t\t\t\t\t`UpdateDateTime` = ' . $objDatabase->SqlVariable($this->dttUpdateDateTime) . ',\n\t\t\t\t\t\t\t`ExpiredToken` = ' . $objDatabase->SqlVariable($this->strExpiredToken) . ',\n\t\t\t\t\t\t\t`IsNative` = ' . $objDatabase->SqlVariable($this->blnIsNative) . ',\n\t\t\t\t\t\t\t`DeviceUuid` = ' . $objDatabase->SqlVariable($this->strDeviceUuid) . ',\n\t\t\t\t\t\t\t`DevicePlatform` = ' . $objDatabase->SqlVariable($this->strDevicePlatform) . ',\n\t\t\t\t\t\t\t`DeviceOs` = ' . $objDatabase->SqlVariable($this->strDeviceOs) . ',\n\t\t\t\t\t\t\t`ClientConnection` = ' . $objDatabase->SqlVariable($this->intClientConnection) . ',\n\t\t\t\t\t\t\t`SearchMetaInfo` = ' . $objDatabase->SqlVariable($this->strSearchMetaInfo) . ',\n\t\t\t\t\t\t\t`ObjectOwner` = ' . $objDatabase->SqlVariable($this->intObjectOwner) . ',\n\t\t\t\t\t\t\t`DeviceRegistrationDateTime` = ' . $objDatabase->SqlVariable($this->dttDeviceRegistrationDateTime) . '\n            WHERE\n\t\t\t\t\t\t\t`Id` = ' . $objDatabase->SqlVariable($this->intId) . '');\n            }\n\n        } catch (dxCallerException $objExc) {\n            $objExc->IncrementOffset();\n            throw $objExc;\n        }\n        try {\n            $newAuditLogEntry->ObjectId = $this->intId;\n            $newAuditLogEntry->Save();\n        } catch(dxCallerException $e) {\n            error_log('Could not save audit log while saving ClientAuthenticationToken. Details: '.$newAuditLogEntry->getJson().'<br>Error details: '.$e->getMessage());\n        }\n        // Update __blnRestored and any Non-Identity PK Columns (if applicable)\n        $this->__blnRestored = true;\n\n        // Update Local Timestamp\n        $objResult = $objDatabase->Query('SELECT `LastUpdated` FROM\n                                            `ClientAuthenticationToken` WHERE\n                \t\t\t\t\t\t\t`Id` = ' . $objDatabase->SqlVariable($this->intId) . '');\n\n        $objRow = $objResult->FetchArray();\n        $this->strLastUpdated = $objRow[0];\n\n        $this->DeleteCache();\n\n        // Return\n        return $mixToReturn;\n    }\n    /**\n     * Delete this ClientAuthenticationToken\n     * @return void\n     */\n    public function Delete() {\n        if ((is_null($this->intId)))\n            throw new dxUndefinedPrimaryKeyException('Cannot delete this ClientAuthenticationToken with an unset primary key.');\n\n        $ObjectAccessArray = ProjectAccessManager::getObjectAccess(ProjectFunctions::getCurrentAccountId(),\"ClientAuthenticationToken\",$this->intId);\n        if (!in_array(AccessOperation::DELETE_STR,$ObjectAccessArray)) {\n            // This user is not allowed to delete an object of this type\n            throw new Exception(\"User is not allowed to perform operation \".AccessOperation::DELETE_STR.\" on entity of type 'ClientAuthenticationToken'. Allowed access is \".json_encode($ObjectAccessArray));\n        }\n\n        // Get the Database Object for this Class\n        $objDatabase = ClientAuthenticationToken::GetDatabase();\n        $newAuditLogEntry = new AuditLogEntry();\n        $ChangedArray = array();\n        $newAuditLogEntry->EntryTimeStamp = dxDateTime::Now();\n        $newAuditLogEntry->ObjectId = $this->intId;\n        $newAuditLogEntry->ObjectName = 'ClientAuthenticationToken';\n        $newAuditLogEntry->UserEmail = ProjectFunctions::getCurrentUserEmailForAudit();\n        $newAuditLogEntry->ModificationType = 'Delete';\n        $ChangedArray = array_merge($ChangedArray,array(\"Id\" => $this->intId));\n        $ChangedArray = array_merge($ChangedArray,array(\"Token\" => $this->strToken));\n        $ChangedArray = array_merge($ChangedArray,array(\"UpdateDateTime\" => $this->dttUpdateDateTime));\n        $ChangedArray = array_merge($ChangedArray,array(\"ExpiredToken\" => $this->strExpiredToken));\n        $ChangedArray = array_merge($ChangedArray,array(\"IsNative\" => $this->blnIsNative));\n        $ChangedArray = array_merge($ChangedArray,array(\"DeviceUuid\" => $this->strDeviceUuid));\n        $ChangedArray = array_merge($ChangedArray,array(\"DevicePlatform\" => $this->strDevicePlatform));\n        $ChangedArray = array_merge($ChangedArray,array(\"DeviceOs\" => $this->strDeviceOs));\n        $ChangedArray = array_merge($ChangedArray,array(\"ClientConnection\" => $this->intClientConnection));\n        $ChangedArray = array_merge($ChangedArray,array(\"SearchMetaInfo\" => $this->strSearchMetaInfo));\n        $ChangedArray = array_merge($ChangedArray,array(\"LastUpdated\" => $this->strLastUpdated));\n        $ChangedArray = array_merge($ChangedArray,array(\"ObjectOwner\" => $this->intObjectOwner));\n        $ChangedArray = array_merge($ChangedArray,array(\"DeviceRegistrationDateTime\" => $this->dttDeviceRegistrationDateTime));\n        $newAuditLogEntry->AuditLogEntryDetail = json_encode($ChangedArray);\n        try {\n            $newAuditLogEntry->Save();\n        } catch(dxCallerException $e) {\n            error_log('Could not save audit log while deleting ClientAuthenticationToken. Details: '.$newAuditLogEntry->getJson().'<br>Error details: '.$e->getMessage());\n        }\n\n        // Perform the SQL Query\n        $objDatabase->NonQuery('\n            DELETE FROM\n                `ClientAuthenticationToken`\n            WHERE\n                `Id` = ' . $objDatabase->SqlVariable($this->intId) . '');\n\n        $this->DeleteCache();\n    }\n\n    /**\n     * Delete this ClientAuthenticationToken ONLY from the cache\n     * @return void\n     */\n    public function DeleteCache() {\n        if (ProjectFunctions::$objCacheProvider && ProjectFunctions::$Database[1]->Caching) {\n            $strCacheKey = ProjectFunctions::$objCacheProvider->CreateKey(ProjectFunctions::$Database[1]->Database, 'ClientAuthenticationToken', $this->intId);\n            ProjectFunctions::$objCacheProvider->Delete($strCacheKey);\n        }\n    }\n\n    /**\n     * Delete all ClientAuthenticationTokens\n     * @return void\n     */\n    public static function DeleteAll() {\n        // Get the Database Object for this Class\n        $objDatabase = ClientAuthenticationToken::GetDatabase();\n\n        // Perform the Query\n        $objDatabase->NonQuery('\n            DELETE FROM\n                `ClientAuthenticationToken`');\n\n        if (ProjectFunctions::$objCacheProvider && ProjectFunctions::$Database[1]->Caching) {\n            ProjectFunctions::$objCacheProvider->DeleteAll();\n        }\n    }\n\n    /**\n     * Truncate ClientAuthenticationToken table\n     * @return void\n     */\n    public static function Truncate() {\n        // Get the Database Object for this Class\n        $objDatabase = ClientAuthenticationToken::GetDatabase();\n\n        // Perform the Query\n        $objDatabase->NonQuery('\n            TRUNCATE `ClientAuthenticationToken`');\n\n        if (ProjectFunctions::$objCacheProvider && ProjectFunctions::$Database[1]->Caching) {\n            ProjectFunctions::$objCacheProvider->DeleteAll();\n        }\n    }\n    /**\n     * Reload this ClientAuthenticationToken from the database.\n     * @return void\n     */\n    public function Reload() {\n        // Make sure we are actually Restored from the database\n        if (!$this->__blnRestored)\n            throw new dxCallerException('Cannot call Reload() on a new, unsaved ClientAuthenticationToken object.');\n\n        $this->DeleteCache();\n\n        // Reload the Object\n        $objReloaded = ClientAuthenticationToken::Load($this->intId);\n\n        // Update $this's local variables to match\n        $this->strToken = $objReloaded->strToken;\n        $this->dttUpdateDateTime = $objReloaded->dttUpdateDateTime;\n        $this->strExpiredToken = $objReloaded->strExpiredToken;\n        $this->blnIsNative = $objReloaded->blnIsNative;\n        $this->strDeviceUuid = $objReloaded->strDeviceUuid;\n        $this->strDevicePlatform = $objReloaded->strDevicePlatform;\n        $this->strDeviceOs = $objReloaded->strDeviceOs;\n        $this->ClientConnection = $objReloaded->ClientConnection;\n        $this->strSearchMetaInfo = $objReloaded->strSearchMetaInfo;\n        $this->strLastUpdated = $objReloaded->strLastUpdated;\n        $this->intObjectOwner = $objReloaded->intObjectOwner;\n        $this->dttDeviceRegistrationDateTime = $objReloaded->dttDeviceRegistrationDateTime;\n    }\n    ////////////////////\n    // PUBLIC OVERRIDERS\n    ////////////////////\n\n        /**\n     * Override method to perform a property \"Get\"\n     * This will get the value of $strName\n     *\n     * @param string $strName Name of the property to get\n     * @return mixed\n     */\n    public function __get($strName) {\n        switch ($strName) {\n            ///////////////////\n            // Member Variables\n            ///////////////////\n            case 'Id':\n                /**\n                 * Gets the value for intId (Read-Only PK)\n                 * @return integer\n                 */\n                return $this->intId;\n\n            case 'Token':\n                /**\n                 * Gets the value for strToken (Unique)\n                 * @return string\n                 */\n                return $this->strToken;\n\n            case 'UpdateDateTime':\n                /**\n                 * Gets the value for dttUpdateDateTime \n                 * @return dxDateTime\n                 */\n                return $this->dttUpdateDateTime;\n\n            case 'ExpiredToken':\n                /**\n                 * Gets the value for strExpiredToken (Unique)\n                 * @return string\n                 */\n                return $this->strExpiredToken;\n\n            case 'IsNative':\n                /**\n                 * Gets the value for blnIsNative \n                 * @return boolean\n                 */\n                return $this->blnIsNative;\n\n            case 'DeviceUuid':\n                /**\n                 * Gets the value for strDeviceUuid \n                 * @return string\n                 */\n                return $this->strDeviceUuid;\n\n            case 'DevicePlatform':\n                /**\n                 * Gets the value for strDevicePlatform \n                 * @return string\n                 */\n                return $this->strDevicePlatform;\n\n            case 'DeviceOs':\n                /**\n                 * Gets the value for strDeviceOs \n                 * @return string\n                 */\n                return $this->strDeviceOs;\n\n            case 'ClientConnection':\n                /**\n                 * Gets the value for intClientConnection \n                 * @return integer\n                 */\n                return $this->intClientConnection;\n\n            case 'SearchMetaInfo':\n                /**\n                 * Gets the value for strSearchMetaInfo \n                 * @return string\n                 */\n                return $this->strSearchMetaInfo;\n\n            case 'LastUpdated':\n                /**\n                 * Gets the value for strLastUpdated (Read-Only Timestamp)\n                 * @return string\n                 */\n                return $this->strLastUpdated;\n\n            case 'ObjectOwner':\n                /**\n                 * Gets the value for intObjectOwner \n                 * @return integer\n                 */\n                return $this->intObjectOwner;\n\n            case 'DeviceRegistrationDateTime':\n                /**\n                 * Gets the value for dttDeviceRegistrationDateTime \n                 * @return dxDateTime\n                 */\n                return $this->dttDeviceRegistrationDateTime;\n\n\n            ///////////////////\n            // Member Objects\n            ///////////////////\n            case 'ClientConnectionObject':\n                /**\n                 * Gets the value for the ClientConnection object referenced by intClientConnection \n                 * @return ClientConnection\n                 */\n                try {\n                    if ((!$this->objClientConnectionObject) && (!is_null($this->intClientConnection)))\n                        $this->objClientConnectionObject = ClientConnection::Load($this->intClientConnection);\n                    return $this->objClientConnectionObject;\n                } catch (dxCallerException $objExc) {\n                    $objExc->IncrementOffset();\n                    throw $objExc;\n                }\n\n\n            ////////////////////////////\n            // Virtual Object References (Many to Many and Reverse References)\n            // (If restored via a \"Many-to\" expansion)\n            ////////////////////////////\n\n            case '_PushRegistration':\n                /**\n                 * Gets the value for the private _objPushRegistration (Read-Only)\n                 * if set due to an expansion on the PushRegistration.ClientAuthenticationToken reverse relationship\n                 * @return PushRegistration\n                 */\n                return $this->_objPushRegistration;\n\n            case '_PushRegistrationArray':\n                /**\n                 * Gets the value for the private _objPushRegistrationArray (Read-Only)\n                 * if set due to an ExpandAsArray on the PushRegistration.ClientAuthenticationToken reverse relationship\n                 * @return PushRegistration[]\n                 */\n                return $this->_objPushRegistrationArray;\n\n\n            case '__Restored':\n                return $this->__blnRestored;\n\n            default:\n                try {\n                    return parent::__get($strName);\n                } catch (dxCallerException $objExc) {\n                    $objExc->IncrementOffset();\n                    throw $objExc;\n                }\n        }\n    }\n        /**\n     * Override method to perform a property \"Set\"\n     * This will set the property $strName to be $mixValue\n     *\n     * @param string $strName Name of the property to set\n     * @param string $mixValue New value of the property\n     * @return mixed\n     */\n    public function __set($strName, $mixValue) {\n        switch ($strName) {\n            ///////////////////\n            // Member Variables\n            ///////////////////\n            case 'Token':\n                /**\n                 * Sets the value for strToken (Unique)\n                 * @param string $mixValue\n                 * @return string\n                 */\n                try {\n                    return ($this->strToken = dxType::Cast($mixValue, dxType::String));\n                } catch (dxCallerException $objExc) {\n                    $objExc->IncrementOffset();\n                    throw $objExc;\n                }\n\n            case 'UpdateDateTime':\n                /**\n                 * Sets the value for dttUpdateDateTime \n                 * @param dxDateTime $mixValue\n                 * @return dxDateTime\n                 */\n                try {\n                    return ($this->dttUpdateDateTime = dxType::Cast($mixValue, dxType::DateTime));\n                } catch (dxCallerException $objExc) {\n                    $objExc->IncrementOffset();\n                    throw $objExc;\n                }\n\n            case 'ExpiredToken':\n                /**\n                 * Sets the value for strExpiredToken (Unique)\n                 * @param string $mixValue\n                 * @return string\n                 */\n                try {\n                    return ($this->strExpiredToken = dxType::Cast($mixValue, dxType::String));\n                } catch (dxCallerException $objExc) {\n                    $objExc->IncrementOffset();\n                    throw $objExc;\n                }\n\n            case 'IsNative':\n                /**\n                 * Sets the value for blnIsNative \n                 * @param boolean $mixValue\n                 * @return boolean\n                 */\n                try {\n                    return ($this->blnIsNative = dxType::Cast($mixValue, dxType::Boolean));\n                } catch (dxCallerException $objExc) {\n                    $objExc->IncrementOffset();\n                    throw $objExc;\n                }\n\n            case 'DeviceUuid':\n                /**\n                 * Sets the value for strDeviceUuid \n                 * @param string $mixValue\n                 * @return string\n                 */\n                try {\n                    return ($this->strDeviceUuid = dxType::Cast($mixValue, dxType::String));\n                } catch (dxCallerException $objExc) {\n                    $objExc->IncrementOffset();\n                    throw $objExc;\n                }\n\n            case 'DevicePlatform':\n                /**\n                 * Sets the value for strDevicePlatform \n                 * @param string $mixValue\n                 * @return string\n                 */\n                try {\n                    return ($this->strDevicePlatform = dxType::Cast($mixValue, dxType::String));\n                } catch (dxCallerException $objExc) {\n                    $objExc->IncrementOffset();\n                    throw $objExc;\n                }\n\n            case 'DeviceOs':\n                /**\n                 * Sets the value for strDeviceOs \n                 * @param string $mixValue\n                 * @return string\n                 */\n                try {\n                    return ($this->strDeviceOs = dxType::Cast($mixValue, dxType::String));\n                } catch (dxCallerException $objExc) {\n                    $objExc->IncrementOffset();\n                    throw $objExc;\n                }\n\n            case 'ClientConnection':\n                /**\n                 * Sets the value for intClientConnection \n                 * @param integer $mixValue\n                 * @return integer\n                 */\n                try {\n                    $this->objClientConnectionObject = null;\n                    return ($this->intClientConnection = dxType::Cast($mixValue, dxType::Integer));\n                } catch (dxCallerException $objExc) {\n                    $objExc->IncrementOffset();\n                    throw $objExc;\n                }\n\n            case 'SearchMetaInfo':\n                /**\n                 * Sets the value for strSearchMetaInfo \n                 * @param string $mixValue\n                 * @return string\n                 */\n                try {\n                    return ($this->strSearchMetaInfo = dxType::Cast($mixValue, dxType::String));\n                } catch (dxCallerException $objExc) {\n                    $objExc->IncrementOffset();\n                    throw $objExc;\n                }\n\n            case 'ObjectOwner':\n                /**\n                 * Sets the value for intObjectOwner \n                 * @param integer $mixValue\n                 * @return integer\n                 */\n                try {\n                    return ($this->intObjectOwner = dxType::Cast($mixValue, dxType::Integer));\n                } catch (dxCallerException $objExc) {\n                    $objExc->IncrementOffset();\n                    throw $objExc;\n                }\n\n            case 'DeviceRegistrationDateTime':\n                /**\n                 * Sets the value for dttDeviceRegistrationDateTime \n                 * @param dxDateTime $mixValue\n                 * @return dxDateTime\n                 */\n                try {\n                    return ($this->dttDeviceRegistrationDateTime = dxType::Cast($mixValue, dxType::DateTime));\n                } catch (dxCallerException $objExc) {\n                    $objExc->IncrementOffset();\n                    throw $objExc;\n                }\n\n\n            ///////////////////\n            // Member Objects\n            ///////////////////\n            case 'ClientConnectionObject':\n                /**\n                 * Sets the value for the ClientConnection object referenced by intClientConnection \n                 * @param ClientConnection $mixValue\n                 * @return ClientConnection\n                 */\n                if (is_null($mixValue)) {\n                    $this->intClientConnection = null;\n                    $this->objClientConnectionObject = null;\n                    return null;\n                } else {\n                    // Make sure $mixValue actually is a ClientConnection object\n                    try {\n                        $mixValue = dxType::Cast($mixValue, 'ClientConnection');\n                    } catch (dxInvalidCastException $objExc) {\n                        $objExc->IncrementOffset();\n                        throw $objExc;\n                    }\n\n                    // Make sure $mixValue is a SAVED ClientConnection object\n                    if (is_null($mixValue->Id))\n                        throw new dxCallerException('Unable to set an unsaved ClientConnectionObject for this ClientAuthenticationToken');\n\n                    // Update Local Member Variables\n                    $this->objClientConnectionObject = $mixValue;\n                    $this->intClientConnection = $mixValue->Id;\n\n                    // Return $mixValue\n                    return $mixValue;\n                }\n                break;\n\n            default:\n                try {\n                    return parent::__set($strName, $mixValue);\n                } catch (dxCallerException $objExc) {\n                    $objExc->IncrementOffset();\n                    throw $objExc;\n                }\n        }\n    }\n    /**\n     * Lookup a VirtualAttribute value (if applicable).  Returns NULL if none found.\n     * @param string $strName\n     * @return string\n     */\n    public function GetVirtualAttribute($strName) {\n        if (array_key_exists($strName, $this->__strVirtualAttributeArray))\n            return $this->__strVirtualAttributeArray[$strName];\n        return null;\n    }\n\n    ///////////////////////////////\n    // ASSOCIATED OBJECTS' METHODS\n    ///////////////////////////////\n\n\n\n    // Related Objects' Methods for PushRegistration\n    //-------------------------------------------------------------------\n\n    /**\n     * Gets all associated PushRegistrations as an array of PushRegistration objects\n     * @param dxQueryClause[] $objOptionalClauses additional optional dxQueryClause objects for this query\n     * @return PushRegistration[]\n    */\n    public function GetPushRegistrationArray($objOptionalClauses = null) {\n        if ((is_null($this->intId)))\n            return array();\n\n        try {\n            return PushRegistration::LoadArrayByClientAuthenticationToken($this->intId, $objOptionalClauses);\n        } catch (dxCallerException $objExc) {\n            $objExc->IncrementOffset();\n            throw $objExc;\n        }\n    }\n\n    /**\n     * Counts all associated PushRegistrations\n     * @return int\n    */\n    public function CountPushRegistrations() {\n        if ((is_null($this->intId)))\n            return 0;\n\n        return PushRegistration::CountByClientAuthenticationToken($this->intId);\n    }\n\n    /**\n     * Associates a PushRegistration\n     * @param PushRegistration $objPushRegistration\n     * @return void\n    */\n    public function AssociatePushRegistration(PushRegistration $objPushRegistration) {\n        if ((is_null($this->intId)))\n            throw new dxUndefinedPrimaryKeyException('Unable to call AssociatePushRegistration on this unsaved ClientAuthenticationToken.');\n        if ((is_null($objPushRegistration->Id)))\n            throw new dxUndefinedPrimaryKeyException('Unable to call AssociatePushRegistration on this ClientAuthenticationToken with an unsaved PushRegistration.');\n\n        // Get the Database Object for this Class\n        $objDatabase = ClientAuthenticationToken::GetDatabase();\n\n        // Perform the SQL Query\n        $objDatabase->NonQuery('\n            UPDATE\n                `PushRegistration`\n            SET\n                `ClientAuthenticationToken` = ' . $objDatabase->SqlVariable($this->intId) . '\n            WHERE\n                `Id` = ' . $objDatabase->SqlVariable($objPushRegistration->Id) . '\n        ');\n    }\n\n    /**\n     * Unassociates a PushRegistration\n     * @param PushRegistration $objPushRegistration\n     * @return void\n    */\n    public function UnassociatePushRegistration(PushRegistration $objPushRegistration) {\n        if ((is_null($this->intId)))\n            throw new dxUndefinedPrimaryKeyException('Unable to call UnassociatePushRegistration on this unsaved ClientAuthenticationToken.');\n        if ((is_null($objPushRegistration->Id)))\n            throw new dxUndefinedPrimaryKeyException('Unable to call UnassociatePushRegistration on this ClientAuthenticationToken with an unsaved PushRegistration.');\n\n        // Get the Database Object for this Class\n        $objDatabase = ClientAuthenticationToken::GetDatabase();\n\n        // Perform the SQL Query\n        $objDatabase->NonQuery('\n            UPDATE\n                `PushRegistration`\n            SET\n                `ClientAuthenticationToken` = null\n            WHERE\n                `Id` = ' . $objDatabase->SqlVariable($objPushRegistration->Id) . ' AND\n                `ClientAuthenticationToken` = ' . $objDatabase->SqlVariable($this->intId) . '\n        ');\n    }\n\n    /**\n     * Unassociates all PushRegistrations\n     * @return void\n    */\n    public function UnassociateAllPushRegistrations() {\n        if ((is_null($this->intId)))\n            throw new dxUndefinedPrimaryKeyException('Unable to call UnassociatePushRegistration on this unsaved ClientAuthenticationToken.');\n\n        // Get the Database Object for this Class\n        $objDatabase = ClientAuthenticationToken::GetDatabase();\n\n        // Perform the SQL Query\n        $objDatabase->NonQuery('\n            UPDATE\n                `PushRegistration`\n            SET\n                `ClientAuthenticationToken` = null\n            WHERE\n                `ClientAuthenticationToken` = ' . $objDatabase->SqlVariable($this->intId) . '\n        ');\n    }\n\n    /**\n     * Deletes an associated PushRegistration\n     * @param PushRegistration $objPushRegistration\n     * @return void\n    */\n    public function DeleteAssociatedPushRegistration(PushRegistration $objPushRegistration) {\n        if ((is_null($this->intId)))\n            throw new dxUndefinedPrimaryKeyException('Unable to call UnassociatePushRegistration on this unsaved ClientAuthenticationToken.');\n        if ((is_null($objPushRegistration->Id)))\n            throw new dxUndefinedPrimaryKeyException('Unable to call UnassociatePushRegistration on this ClientAuthenticationToken with an unsaved PushRegistration.');\n\n        // Get the Database Object for this Class\n        $objDatabase = ClientAuthenticationToken::GetDatabase();\n\n        // Perform the SQL Query\n        $objDatabase->NonQuery('\n            DELETE FROM\n                `PushRegistration`\n            WHERE\n                `Id` = ' . $objDatabase->SqlVariable($objPushRegistration->Id) . ' AND\n                `ClientAuthenticationToken` = ' . $objDatabase->SqlVariable($this->intId) . '\n        ');\n    }\n\n    /**\n     * Deletes all associated PushRegistrations\n     * @return void\n    */\n    public function DeleteAllPushRegistrations() {\n        if ((is_null($this->intId)))\n            throw new dxUndefinedPrimaryKeyException('Unable to call UnassociatePushRegistration on this unsaved ClientAuthenticationToken.');\n\n        // Get the Database Object for this Class\n        $objDatabase = ClientAuthenticationToken::GetDatabase();\n\n        // Perform the SQL Query\n        $objDatabase->NonQuery('\n            DELETE FROM\n                `PushRegistration`\n            WHERE\n                `ClientAuthenticationToken` = ' . $objDatabase->SqlVariable($this->intId) . '\n        ');\n    }\n\n\n    \n///////////////////////////////\n    // METHODS TO EXTRACT INFO ABOUT THE CLASS\n    ///////////////////////////////\n\n    /**\n     * Static method to retrieve the Database object that owns this class.\n     * @return string Name of the table from which this class has been created.\n     */\n    public static function GetTableName() {\n        return \"ClientAuthenticationToken\";\n    }\n\n    /**\n     * Static method to retrieve the Table name from which this class has been created.\n     * @return string Name of the table from which this class has been created.\n     */\n    public static function GetDatabaseName() {\n        return ProjectFunctions::$Database[ClientAuthenticationToken::GetDatabaseIndex()]->Database;\n    }\n\n    /**\n     * Static method to retrieve the Database index in the configuration.inc.php file.\n     * This can be useful when there are two databases of the same name which create\n     * confusion for the developer. There are no internal uses of this function but are\n     * here to help retrieve info if need be!\n     * @return int position or index of the database in the config file.\n     */\n    public static function GetDatabaseIndex() {\n        return 1;\n    }\n\n    ////////////////////////////////////////\n    // METHODS for SOAP-BASED WEB SERVICES\n    ////////////////////////////////////////\n\n    public static function GetSoapComplexTypeXml() {\n        $strToReturn = '<complexType name=\"ClientAuthenticationToken\"><sequence>';\n        $strToReturn .= '<element name=\"Id\" type=\"xsd:int\"/>';\n        $strToReturn .= '<element name=\"Token\" type=\"xsd:string\"/>';\n        $strToReturn .= '<element name=\"UpdateDateTime\" type=\"xsd:dateTime\"/>';\n        $strToReturn .= '<element name=\"ExpiredToken\" type=\"xsd:string\"/>';\n        $strToReturn .= '<element name=\"IsNative\" type=\"xsd:boolean\"/>';\n        $strToReturn .= '<element name=\"DeviceUuid\" type=\"xsd:string\"/>';\n        $strToReturn .= '<element name=\"DevicePlatform\" type=\"xsd:string\"/>';\n        $strToReturn .= '<element name=\"DeviceOs\" type=\"xsd:string\"/>';\n        $strToReturn .= '<element name=\"ClientConnectionObject\" type=\"xsd1:ClientConnection\"/>';\n        $strToReturn .= '<element name=\"SearchMetaInfo\" type=\"xsd:string\"/>';\n        $strToReturn .= '<element name=\"LastUpdated\" type=\"xsd:string\"/>';\n        $strToReturn .= '<element name=\"ObjectOwner\" type=\"xsd:int\"/>';\n        $strToReturn .= '<element name=\"DeviceRegistrationDateTime\" type=\"xsd:dateTime\"/>';\n        $strToReturn .= '<element name=\"__blnRestored\" type=\"xsd:boolean\"/>';\n        $strToReturn .= '</sequence></complexType>';\n        return $strToReturn;\n    }\n\n    public static function AlterSoapComplexTypeArray(&$strComplexTypeArray) {\n        if (!array_key_exists('ClientAuthenticationToken', $strComplexTypeArray)) {\n            $strComplexTypeArray['ClientAuthenticationToken'] = ClientAuthenticationToken::GetSoapComplexTypeXml();\n            ClientConnection::AlterSoapComplexTypeArray($strComplexTypeArray);\n        }\n    }\n\n    public static function GetArrayFromSoapArray($objSoapArray) {\n        $objArrayToReturn = array();\n\n        foreach ($objSoapArray as $objSoapObject)\n            array_push($objArrayToReturn, ClientAuthenticationToken::GetObjectFromSoapObject($objSoapObject));\n\n        return $objArrayToReturn;\n    }\n\n    public static function GetObjectFromSoapObject($objSoapObject) {\n        $objToReturn = new ClientAuthenticationToken();\n        if (property_exists($objSoapObject, 'Id'))\n            $objToReturn->intId = $objSoapObject->Id;\n        if (property_exists($objSoapObject, 'Token'))\n            $objToReturn->strToken = $objSoapObject->Token;\n        if (property_exists($objSoapObject, 'UpdateDateTime'))\n            $objToReturn->dttUpdateDateTime = new dxDateTime($objSoapObject->UpdateDateTime);\n        if (property_exists($objSoapObject, 'ExpiredToken'))\n            $objToReturn->strExpiredToken = $objSoapObject->ExpiredToken;\n        if (property_exists($objSoapObject, 'IsNative'))\n            $objToReturn->blnIsNative = $objSoapObject->IsNative;\n        if (property_exists($objSoapObject, 'DeviceUuid'))\n            $objToReturn->strDeviceUuid = $objSoapObject->DeviceUuid;\n        if (property_exists($objSoapObject, 'DevicePlatform'))\n            $objToReturn->strDevicePlatform = $objSoapObject->DevicePlatform;\n        if (property_exists($objSoapObject, 'DeviceOs'))\n            $objToReturn->strDeviceOs = $objSoapObject->DeviceOs;\n        if ((property_exists($objSoapObject, 'ClientConnectionObject')) &&\n            ($objSoapObject->ClientConnectionObject))\n            $objToReturn->ClientConnectionObject = ClientConnection::GetObjectFromSoapObject($objSoapObject->ClientConnectionObject);\n        if (property_exists($objSoapObject, 'SearchMetaInfo'))\n            $objToReturn->strSearchMetaInfo = $objSoapObject->SearchMetaInfo;\n        if (property_exists($objSoapObject, 'LastUpdated'))\n            $objToReturn->strLastUpdated = $objSoapObject->LastUpdated;\n        if (property_exists($objSoapObject, 'ObjectOwner'))\n            $objToReturn->intObjectOwner = $objSoapObject->ObjectOwner;\n        if (property_exists($objSoapObject, 'DeviceRegistrationDateTime'))\n            $objToReturn->dttDeviceRegistrationDateTime = new dxDateTime($objSoapObject->DeviceRegistrationDateTime);\n        if (property_exists($objSoapObject, '__blnRestored'))\n            $objToReturn->__blnRestored = $objSoapObject->__blnRestored;\n        return $objToReturn;\n    }\n\n    public static function GetSoapArrayFromArray($objArray) {\n        if (!$objArray)\n            return null;\n\n        $objArrayToReturn = array();\n\n        foreach ($objArray as $objObject)\n            array_push($objArrayToReturn, ClientAuthenticationToken::GetSoapObjectFromObject($objObject, true));\n\n        return unserialize(serialize($objArrayToReturn));\n    }\n\n    public static function GetSoapObjectFromObject($objObject, $blnBindRelatedObjects) {\n        if ($objObject->dttUpdateDateTime)\n            $objObject->dttUpdateDateTime = $objObject->dttUpdateDateTime->qFormat(dxDateTime::FormatSoap);\n        if ($objObject->objClientConnectionObject)\n            $objObject->objClientConnectionObject = ClientConnection::GetSoapObjectFromObject($objObject->objClientConnectionObject, false);\n        else if (!$blnBindRelatedObjects)\n            $objObject->intClientConnection = null;\n        if ($objObject->dttDeviceRegistrationDateTime)\n            $objObject->dttDeviceRegistrationDateTime = $objObject->dttDeviceRegistrationDateTime->qFormat(dxDateTime::FormatSoap);\n        return $objObject;\n    }\n\n\n    ////////////////////////////////////////\n    // METHODS for JSON Object Translation\n    ////////////////////////////////////////\n\n    // this function is required for objects that implement the\n    // IteratorAggregate interface\n    public function getIterator() {\n        ///////////////////\n        // Member Variables\n        ///////////////////\n        $iArray['Id'] = $this->intId;\n        $iArray['Token'] = $this->strToken;\n        $iArray['UpdateDateTime'] = $this->dttUpdateDateTime;\n        $iArray['ExpiredToken'] = $this->strExpiredToken;\n        $iArray['IsNative'] = $this->blnIsNative;\n        $iArray['DeviceUuid'] = $this->strDeviceUuid;\n        $iArray['DevicePlatform'] = $this->strDevicePlatform;\n        $iArray['DeviceOs'] = $this->strDeviceOs;\n        $iArray['ClientConnection'] = $this->intClientConnection;\n        $iArray['SearchMetaInfo'] = $this->strSearchMetaInfo;\n        $iArray['LastUpdated'] = $this->strLastUpdated;\n        $iArray['ObjectOwner'] = $this->intObjectOwner;\n        $iArray['DeviceRegistrationDateTime'] = $this->dttDeviceRegistrationDateTime;\n        return new ArrayIterator($iArray);\n    }\n\n    // this function returns a Json formatted string using the\n    // IteratorAggregate interface\n    public function getJson() {\n        return json_encode($this->getIterator());\n    }\n\n    /**\n     * Default \"toJsObject\" handler\n     * Specifies how the object should be displayed in JQuery UI lists and menus. Note that these lists use\n     * value and label differently.\n     *\n     * value \t= The short form of what to display in the list and selection.\n     * label \t= [optional] If defined, is what is displayed in the menu\n     * id \t\t= Primary key of object.\n     *\n     * @return an array that specifies how to display the object\n     */\n    public function toJsObject () {\n        return JavaScriptHelper::toJsObject(array('value' => $this->__toString(), 'id' =>  $this->intId ));\n    }\n\n\n}\n\n/////////////////////////////////////\n\t// ADDITIONAL CLASSES for DIVBLOX QUERY\n\t/////////////////////////////////////\n\n    /**\n     * @uses dxQueryNode\n     *\n     * @property-read dxQueryNode $Id\n     * @property-read dxQueryNode $Token\n     * @property-read dxQueryNode $UpdateDateTime\n     * @property-read dxQueryNode $ExpiredToken\n     * @property-read dxQueryNode $IsNative\n     * @property-read dxQueryNode $DeviceUuid\n     * @property-read dxQueryNode $DevicePlatform\n     * @property-read dxQueryNode $DeviceOs\n     * @property-read dxQueryNode $ClientConnection\n     * @property-read dxQueryNodeClientConnection $ClientConnectionObject\n     * @property-read dxQueryNode $SearchMetaInfo\n     * @property-read dxQueryNode $LastUpdated\n     * @property-read dxQueryNode $ObjectOwner\n     * @property-read dxQueryNode $DeviceRegistrationDateTime\n     *\n     *\n     * @property-read dxQueryReverseReferenceNodePushRegistration $PushRegistration\n\n     * @property-read dxQueryNode $_PrimaryKeyNode\n     **/\n\tclass dxQueryNodeClientAuthenticationToken extends dxQueryNode {\n\t\tprotected $strTableName = 'ClientAuthenticationToken';\n\t\tprotected $strPrimaryKey = 'Id';\n\t\tprotected $strClassName = 'ClientAuthenticationToken';\n\t\tpublic function __get($strName) {\n\t\t\tswitch ($strName) {\n\t\t\t\tcase 'Id':\n\t\t\t\t\treturn new dxQueryNode('Id', 'Id', 'Integer', $this);\n\t\t\t\tcase 'Token':\n\t\t\t\t\treturn new dxQueryNode('Token', 'Token', 'VarChar', $this);\n\t\t\t\tcase 'UpdateDateTime':\n\t\t\t\t\treturn new dxQueryNode('UpdateDateTime', 'UpdateDateTime', 'DateTime', $this);\n\t\t\t\tcase 'ExpiredToken':\n\t\t\t\t\treturn new dxQueryNode('ExpiredToken', 'ExpiredToken', 'VarChar', $this);\n\t\t\t\tcase 'IsNative':\n\t\t\t\t\treturn new dxQueryNode('IsNative', 'IsNative', 'Bit', $this);\n\t\t\t\tcase 'DeviceUuid':\n\t\t\t\t\treturn new dxQueryNode('DeviceUuid', 'DeviceUuid', 'VarChar', $this);\n\t\t\t\tcase 'DevicePlatform':\n\t\t\t\t\treturn new dxQueryNode('DevicePlatform', 'DevicePlatform', 'VarChar', $this);\n\t\t\t\tcase 'DeviceOs':\n\t\t\t\t\treturn new dxQueryNode('DeviceOs', 'DeviceOs', 'VarChar', $this);\n\t\t\t\tcase 'ClientConnection':\n\t\t\t\t\treturn new dxQueryNode('ClientConnection', 'ClientConnection', 'Integer', $this);\n\t\t\t\tcase 'ClientConnectionObject':\n\t\t\t\t\treturn new dxQueryNodeClientConnection('ClientConnection', 'ClientConnectionObject', 'Integer', $this);\n\t\t\t\tcase 'SearchMetaInfo':\n\t\t\t\t\treturn new dxQueryNode('SearchMetaInfo', 'SearchMetaInfo', 'Blob', $this);\n\t\t\t\tcase 'LastUpdated':\n\t\t\t\t\treturn new dxQueryNode('LastUpdated', 'LastUpdated', 'VarChar', $this);\n\t\t\t\tcase 'ObjectOwner':\n\t\t\t\t\treturn new dxQueryNode('ObjectOwner', 'ObjectOwner', 'Integer', $this);\n\t\t\t\tcase 'DeviceRegistrationDateTime':\n\t\t\t\t\treturn new dxQueryNode('DeviceRegistrationDateTime', 'DeviceRegistrationDateTime', 'DateTime', $this);\n\t\t\t\tcase 'PushRegistration':\n\t\t\t\t\treturn new dxQueryReverseReferenceNodePushRegistration($this, 'pushregistration', 'reverse_reference', 'ClientAuthenticationToken', 'PushRegistration');\n\n\t\t\t\tcase '_PrimaryKeyNode':\n\t\t\t\t\treturn new dxQueryNode('Id', 'Id', 'Integer', $this);\n\t\t\t\tdefault:\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn parent::__get($strName);\n\t\t\t\t\t} catch (dxCallerException $objExc) {\n\t\t\t\t\t\t$objExc->IncrementOffset();\n\t\t\t\t\t\tthrow $objExc;\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n    /**\n     * @property-read dxQueryNode $Id\n     * @property-read dxQueryNode $Token\n     * @property-read dxQueryNode $UpdateDateTime\n     * @property-read dxQueryNode $ExpiredToken\n     * @property-read dxQueryNode $IsNative\n     * @property-read dxQueryNode $DeviceUuid\n     * @property-read dxQueryNode $DevicePlatform\n     * @property-read dxQueryNode $DeviceOs\n     * @property-read dxQueryNode $ClientConnection\n     * @property-read dxQueryNodeClientConnection $ClientConnectionObject\n     * @property-read dxQueryNode $SearchMetaInfo\n     * @property-read dxQueryNode $LastUpdated\n     * @property-read dxQueryNode $ObjectOwner\n     * @property-read dxQueryNode $DeviceRegistrationDateTime\n     *\n     *\n     * @property-read dxQueryReverseReferenceNodePushRegistration $PushRegistration\n\n     * @property-read dxQueryNode $_PrimaryKeyNode\n     **/\n\tclass dxQueryReverseReferenceNodeClientAuthenticationToken extends dxQueryReverseReferenceNode {\n\t\tprotected $strTableName = 'ClientAuthenticationToken';\n\t\tprotected $strPrimaryKey = 'Id';\n\t\tprotected $strClassName = 'ClientAuthenticationToken';\n\t\tpublic function __get($strName) {\n\t\t\tswitch ($strName) {\n\t\t\t\tcase 'Id':\n\t\t\t\t\treturn new dxQueryNode('Id', 'Id', 'integer', $this);\n\t\t\t\tcase 'Token':\n\t\t\t\t\treturn new dxQueryNode('Token', 'Token', 'string', $this);\n\t\t\t\tcase 'UpdateDateTime':\n\t\t\t\t\treturn new dxQueryNode('UpdateDateTime', 'UpdateDateTime', 'dxDateTime', $this);\n\t\t\t\tcase 'ExpiredToken':\n\t\t\t\t\treturn new dxQueryNode('ExpiredToken', 'ExpiredToken', 'string', $this);\n\t\t\t\tcase 'IsNative':\n\t\t\t\t\treturn new dxQueryNode('IsNative', 'IsNative', 'boolean', $this);\n\t\t\t\tcase 'DeviceUuid':\n\t\t\t\t\treturn new dxQueryNode('DeviceUuid', 'DeviceUuid', 'string', $this);\n\t\t\t\tcase 'DevicePlatform':\n\t\t\t\t\treturn new dxQueryNode('DevicePlatform', 'DevicePlatform', 'string', $this);\n\t\t\t\tcase 'DeviceOs':\n\t\t\t\t\treturn new dxQueryNode('DeviceOs', 'DeviceOs', 'string', $this);\n\t\t\t\tcase 'ClientConnection':\n\t\t\t\t\treturn new dxQueryNode('ClientConnection', 'ClientConnection', 'integer', $this);\n\t\t\t\tcase 'ClientConnectionObject':\n\t\t\t\t\treturn new dxQueryNodeClientConnection('ClientConnection', 'ClientConnectionObject', 'integer', $this);\n\t\t\t\tcase 'SearchMetaInfo':\n\t\t\t\t\treturn new dxQueryNode('SearchMetaInfo', 'SearchMetaInfo', 'string', $this);\n\t\t\t\tcase 'LastUpdated':\n\t\t\t\t\treturn new dxQueryNode('LastUpdated', 'LastUpdated', 'string', $this);\n\t\t\t\tcase 'ObjectOwner':\n\t\t\t\t\treturn new dxQueryNode('ObjectOwner', 'ObjectOwner', 'integer', $this);\n\t\t\t\tcase 'DeviceRegistrationDateTime':\n\t\t\t\t\treturn new dxQueryNode('DeviceRegistrationDateTime', 'DeviceRegistrationDateTime', 'dxDateTime', $this);\n\t\t\t\tcase 'PushRegistration':\n\t\t\t\t\treturn new dxQueryReverseReferenceNodePushRegistration($this, 'pushregistration', 'reverse_reference', 'ClientAuthenticationToken', 'PushRegistration');\n\n\t\t\t\tcase '_PrimaryKeyNode':\n\t\t\t\t\treturn new dxQueryNode('Id', 'Id', 'integer', $this);\n\t\t\t\tdefault:\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn parent::__get($strName);\n\t\t\t\t\t} catch (dxCallerException $objExc) {\n\t\t\t\t\t\t$objExc->IncrementOffset();\n\t\t\t\t\t\tthrow $objExc;\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n?>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- divblox/config/database/data_model_orm/generated/ClientAuthenticationTokenGen.class.php	(revision 8088b90ea0ab6ee30e69c949666fde75c4664610)
+++ divblox/config/database/data_model_orm/generated/ClientAuthenticationTokenGen.class.php	(date 1589789351358)
@@ -23,11 +23,11 @@
  * @property string $DeviceUuid the value for strDeviceUuid 
  * @property string $DevicePlatform the value for strDevicePlatform 
  * @property string $DeviceOs the value for strDeviceOs 
+ * @property dxDateTime $DeviceRegistrationDateTime the value for dttDeviceRegistrationDateTime 
+ * @property-read string $LastUpdated the value for strLastUpdated (Read-Only Timestamp)
  * @property integer $ClientConnection the value for intClientConnection 
  * @property string $SearchMetaInfo the value for strSearchMetaInfo 
- * @property-read string $LastUpdated the value for strLastUpdated (Read-Only Timestamp)
  * @property integer $ObjectOwner the value for intObjectOwner 
- * @property dxDateTime $DeviceRegistrationDateTime the value for dttDeviceRegistrationDateTime 
  * @property ClientConnection $ClientConnectionObject the value for the ClientConnection object referenced by intClientConnection 
  * @property-read PushRegistration $_PushRegistration the value for the private _objPushRegistration (Read-Only) if set due to an expansion on the PushRegistration.ClientAuthenticationToken reverse relationship
  * @property-read PushRegistration[] $_PushRegistrationArray the value for the private _objPushRegistrationArray (Read-Only) if set due to an ExpandAsArray on the PushRegistration.ClientAuthenticationToken reverse relationship
@@ -108,6 +108,22 @@
     const DeviceOsDefault = null;
 
 
+    /**
+     * Protected member variable that maps to the database column ClientAuthenticationToken.DeviceRegistrationDateTime
+     * @var dxDateTime dttDeviceRegistrationDateTime
+     */
+    protected $dttDeviceRegistrationDateTime;
+    const DeviceRegistrationDateTimeDefault = null;
+
+
+    /**
+     * Protected member variable that maps to the database column ClientAuthenticationToken.LastUpdated
+     * @var string strLastUpdated
+     */
+    protected $strLastUpdated;
+    const LastUpdatedDefault = null;
+
+
     /**
      * Protected member variable that maps to the database column ClientAuthenticationToken.ClientConnection
      * @var integer intClientConnection
@@ -124,14 +140,6 @@
     const SearchMetaInfoDefault = null;
 
 
-    /**
-     * Protected member variable that maps to the database column ClientAuthenticationToken.LastUpdated
-     * @var string strLastUpdated
-     */
-    protected $strLastUpdated;
-    const LastUpdatedDefault = null;
-
-
     /**
      * Protected member variable that maps to the database column ClientAuthenticationToken.ObjectOwner
      * @var integer intObjectOwner
@@ -140,14 +148,6 @@
     const ObjectOwnerDefault = null;
 
 
-    /**
-     * Protected member variable that maps to the database column ClientAuthenticationToken.DeviceRegistrationDateTime
-     * @var dxDateTime dttDeviceRegistrationDateTime
-     */
-    protected $dttDeviceRegistrationDateTime;
-    const DeviceRegistrationDateTimeDefault = null;
-
-
     /**
      * Private member variable that stores a reference to a single PushRegistration object
      * (of type PushRegistration), if this ClientAuthenticationToken object was restored with
@@ -206,11 +206,11 @@
         $this->strDeviceUuid = ClientAuthenticationToken::DeviceUuidDefault;
         $this->strDevicePlatform = ClientAuthenticationToken::DevicePlatformDefault;
         $this->strDeviceOs = ClientAuthenticationToken::DeviceOsDefault;
+        $this->dttDeviceRegistrationDateTime = (ClientAuthenticationToken::DeviceRegistrationDateTimeDefault === null)?null:new dxDateTime(ClientAuthenticationToken::DeviceRegistrationDateTimeDefault);
+        $this->strLastUpdated = ClientAuthenticationToken::LastUpdatedDefault;
         $this->intClientConnection = ClientAuthenticationToken::ClientConnectionDefault;
         $this->strSearchMetaInfo = ClientAuthenticationToken::SearchMetaInfoDefault;
-        $this->strLastUpdated = ClientAuthenticationToken::LastUpdatedDefault;
         $this->intObjectOwner = ClientAuthenticationToken::ObjectOwnerDefault;
-        $this->dttDeviceRegistrationDateTime = (ClientAuthenticationToken::DeviceRegistrationDateTimeDefault === null)?null:new dxDateTime(ClientAuthenticationToken::DeviceRegistrationDateTimeDefault);
     }
 
     ///////////////////////////////
@@ -555,11 +555,11 @@
             $objBuilder->AddSelectItem($strTableName, 'DeviceUuid', $strAliasPrefix . 'DeviceUuid');
             $objBuilder->AddSelectItem($strTableName, 'DevicePlatform', $strAliasPrefix . 'DevicePlatform');
             $objBuilder->AddSelectItem($strTableName, 'DeviceOs', $strAliasPrefix . 'DeviceOs');
+            $objBuilder->AddSelectItem($strTableName, 'DeviceRegistrationDateTime', $strAliasPrefix . 'DeviceRegistrationDateTime');
+            $objBuilder->AddSelectItem($strTableName, 'LastUpdated', $strAliasPrefix . 'LastUpdated');
             $objBuilder->AddSelectItem($strTableName, 'ClientConnection', $strAliasPrefix . 'ClientConnection');
             $objBuilder->AddSelectItem($strTableName, 'SearchMetaInfo', $strAliasPrefix . 'SearchMetaInfo');
-            $objBuilder->AddSelectItem($strTableName, 'LastUpdated', $strAliasPrefix . 'LastUpdated');
             $objBuilder->AddSelectItem($strTableName, 'ObjectOwner', $strAliasPrefix . 'ObjectOwner');
-            $objBuilder->AddSelectItem($strTableName, 'DeviceRegistrationDateTime', $strAliasPrefix . 'DeviceRegistrationDateTime');
         }
     }
     ///////////////////////////////
@@ -705,21 +705,21 @@
         $strAlias = $strAliasPrefix . 'DeviceOs';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->strDeviceOs = $objDbRow->GetColumn($strAliasName, 'VarChar');
+        $strAlias = $strAliasPrefix . 'DeviceRegistrationDateTime';
+        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
+        $objToReturn->dttDeviceRegistrationDateTime = $objDbRow->GetColumn($strAliasName, 'DateTime');
+        $strAlias = $strAliasPrefix . 'LastUpdated';
+        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
+        $objToReturn->strLastUpdated = $objDbRow->GetColumn($strAliasName, 'VarChar');
         $strAlias = $strAliasPrefix . 'ClientConnection';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->intClientConnection = $objDbRow->GetColumn($strAliasName, 'Integer');
         $strAlias = $strAliasPrefix . 'SearchMetaInfo';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->strSearchMetaInfo = $objDbRow->GetColumn($strAliasName, 'Blob');
-        $strAlias = $strAliasPrefix . 'LastUpdated';
-        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
-        $objToReturn->strLastUpdated = $objDbRow->GetColumn($strAliasName, 'VarChar');
         $strAlias = $strAliasPrefix . 'ObjectOwner';
         $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
         $objToReturn->intObjectOwner = $objDbRow->GetColumn($strAliasName, 'Integer');
-        $strAlias = $strAliasPrefix . 'DeviceRegistrationDateTime';
-        $strAliasName = !empty($strColumnAliasArray[$strAlias]) ? $strColumnAliasArray[$strAlias] : $strAlias;
-        $objToReturn->dttDeviceRegistrationDateTime = $objDbRow->GetColumn($strAliasName, 'DateTime');
 
         if (isset($objPreviousItemArray) && is_array($objPreviousItemArray)) {
             foreach ($objPreviousItemArray as $objPreviousItem) {
@@ -967,11 +967,11 @@
             $ChangedArray = array_merge($ChangedArray,array("DeviceUuid" => $this->strDeviceUuid));
             $ChangedArray = array_merge($ChangedArray,array("DevicePlatform" => $this->strDevicePlatform));
             $ChangedArray = array_merge($ChangedArray,array("DeviceOs" => $this->strDeviceOs));
+            $ChangedArray = array_merge($ChangedArray,array("DeviceRegistrationDateTime" => $this->dttDeviceRegistrationDateTime));
+            $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
             $ChangedArray = array_merge($ChangedArray,array("ClientConnection" => $this->intClientConnection));
             $ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => $this->strSearchMetaInfo));
-            $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
             $ChangedArray = array_merge($ChangedArray,array("ObjectOwner" => $this->intObjectOwner));
-            $ChangedArray = array_merge($ChangedArray,array("DeviceRegistrationDateTime" => $this->dttDeviceRegistrationDateTime));
             $newAuditLogEntry->AuditLogEntryDetail = json_encode($ChangedArray);
         } else {
             $newAuditLogEntry->ModificationType = 'Update';
@@ -1039,6 +1039,22 @@
                 $ChangedArray = array_merge($ChangedArray,array("DeviceOs" => array("Before" => $ExistingValueStr,"After" => $this->strDeviceOs)));
                 //$ChangedArray = array_merge($ChangedArray,array("DeviceOs" => "From: ".$ExistingValueStr." to: ".$this->strDeviceOs));
             }
+            $ExistingValueStr = "NULL";
+            if (!is_null($ExistingObj->DeviceRegistrationDateTime)) {
+                $ExistingValueStr = $ExistingObj->DeviceRegistrationDateTime;
+            }
+            if ($ExistingObj->DeviceRegistrationDateTime != $this->dttDeviceRegistrationDateTime) {
+                $ChangedArray = array_merge($ChangedArray,array("DeviceRegistrationDateTime" => array("Before" => $ExistingValueStr,"After" => $this->dttDeviceRegistrationDateTime)));
+                //$ChangedArray = array_merge($ChangedArray,array("DeviceRegistrationDateTime" => "From: ".$ExistingValueStr." to: ".$this->dttDeviceRegistrationDateTime));
+            }
+            $ExistingValueStr = "NULL";
+            if (!is_null($ExistingObj->LastUpdated)) {
+                $ExistingValueStr = $ExistingObj->LastUpdated;
+            }
+            if ($ExistingObj->LastUpdated != $this->strLastUpdated) {
+                $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => array("Before" => $ExistingValueStr,"After" => $this->strLastUpdated)));
+                //$ChangedArray = array_merge($ChangedArray,array("LastUpdated" => "From: ".$ExistingValueStr." to: ".$this->strLastUpdated));
+            }
             $ExistingValueStr = "NULL";
             if (!is_null($ExistingObj->ClientConnection)) {
                 $ExistingValueStr = $ExistingObj->ClientConnection;
@@ -1055,14 +1071,6 @@
                 $ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => array("Before" => $ExistingValueStr,"After" => $this->strSearchMetaInfo)));
                 //$ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => "From: ".$ExistingValueStr." to: ".$this->strSearchMetaInfo));
             }
-            $ExistingValueStr = "NULL";
-            if (!is_null($ExistingObj->LastUpdated)) {
-                $ExistingValueStr = $ExistingObj->LastUpdated;
-            }
-            if ($ExistingObj->LastUpdated != $this->strLastUpdated) {
-                $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => array("Before" => $ExistingValueStr,"After" => $this->strLastUpdated)));
-                //$ChangedArray = array_merge($ChangedArray,array("LastUpdated" => "From: ".$ExistingValueStr." to: ".$this->strLastUpdated));
-            }
             $ExistingValueStr = "NULL";
             if (!is_null($ExistingObj->ObjectOwner)) {
                 $ExistingValueStr = $ExistingObj->ObjectOwner;
@@ -1071,14 +1079,6 @@
                 $ChangedArray = array_merge($ChangedArray,array("ObjectOwner" => array("Before" => $ExistingValueStr,"After" => $this->intObjectOwner)));
                 //$ChangedArray = array_merge($ChangedArray,array("ObjectOwner" => "From: ".$ExistingValueStr." to: ".$this->intObjectOwner));
             }
-            $ExistingValueStr = "NULL";
-            if (!is_null($ExistingObj->DeviceRegistrationDateTime)) {
-                $ExistingValueStr = $ExistingObj->DeviceRegistrationDateTime;
-            }
-            if ($ExistingObj->DeviceRegistrationDateTime != $this->dttDeviceRegistrationDateTime) {
-                $ChangedArray = array_merge($ChangedArray,array("DeviceRegistrationDateTime" => array("Before" => $ExistingValueStr,"After" => $this->dttDeviceRegistrationDateTime)));
-                //$ChangedArray = array_merge($ChangedArray,array("DeviceRegistrationDateTime" => "From: ".$ExistingValueStr." to: ".$this->dttDeviceRegistrationDateTime));
-            }
             $newAuditLogEntry->AuditLogEntryDetail = json_encode($ChangedArray);
         }
         try {
@@ -1097,10 +1097,10 @@
 							`DeviceUuid`,
 							`DevicePlatform`,
 							`DeviceOs`,
+							`DeviceRegistrationDateTime`,
 							`ClientConnection`,
 							`SearchMetaInfo`,
-							`ObjectOwner`,
-							`DeviceRegistrationDateTime`
+							`ObjectOwner`
 						) VALUES (
 							' . $objDatabase->SqlVariable($this->strToken) . ',
 							' . $objDatabase->SqlVariable($this->dttUpdateDateTime) . ',
@@ -1109,10 +1109,10 @@
 							' . $objDatabase->SqlVariable($this->strDeviceUuid) . ',
 							' . $objDatabase->SqlVariable($this->strDevicePlatform) . ',
 							' . $objDatabase->SqlVariable($this->strDeviceOs) . ',
+							' . $objDatabase->SqlVariable($this->dttDeviceRegistrationDateTime) . ',
 							' . $objDatabase->SqlVariable($this->intClientConnection) . ',
 							' . $objDatabase->SqlVariable($this->strSearchMetaInfo) . ',
-							' . $objDatabase->SqlVariable($this->intObjectOwner) . ',
-							' . $objDatabase->SqlVariable($this->dttDeviceRegistrationDateTime) . '
+							' . $objDatabase->SqlVariable($this->intObjectOwner) . '
 						)
                 ');
 					// Update Identity column and return its value
@@ -1145,10 +1145,10 @@
 							`DeviceUuid` = ' . $objDatabase->SqlVariable($this->strDeviceUuid) . ',
 							`DevicePlatform` = ' . $objDatabase->SqlVariable($this->strDevicePlatform) . ',
 							`DeviceOs` = ' . $objDatabase->SqlVariable($this->strDeviceOs) . ',
+							`DeviceRegistrationDateTime` = ' . $objDatabase->SqlVariable($this->dttDeviceRegistrationDateTime) . ',
 							`ClientConnection` = ' . $objDatabase->SqlVariable($this->intClientConnection) . ',
 							`SearchMetaInfo` = ' . $objDatabase->SqlVariable($this->strSearchMetaInfo) . ',
-							`ObjectOwner` = ' . $objDatabase->SqlVariable($this->intObjectOwner) . ',
-							`DeviceRegistrationDateTime` = ' . $objDatabase->SqlVariable($this->dttDeviceRegistrationDateTime) . '
+							`ObjectOwner` = ' . $objDatabase->SqlVariable($this->intObjectOwner) . '
             WHERE
 							`Id` = ' . $objDatabase->SqlVariable($this->intId) . '');
             }
@@ -1210,11 +1210,11 @@
         $ChangedArray = array_merge($ChangedArray,array("DeviceUuid" => $this->strDeviceUuid));
         $ChangedArray = array_merge($ChangedArray,array("DevicePlatform" => $this->strDevicePlatform));
         $ChangedArray = array_merge($ChangedArray,array("DeviceOs" => $this->strDeviceOs));
+        $ChangedArray = array_merge($ChangedArray,array("DeviceRegistrationDateTime" => $this->dttDeviceRegistrationDateTime));
+        $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
         $ChangedArray = array_merge($ChangedArray,array("ClientConnection" => $this->intClientConnection));
         $ChangedArray = array_merge($ChangedArray,array("SearchMetaInfo" => $this->strSearchMetaInfo));
-        $ChangedArray = array_merge($ChangedArray,array("LastUpdated" => $this->strLastUpdated));
         $ChangedArray = array_merge($ChangedArray,array("ObjectOwner" => $this->intObjectOwner));
-        $ChangedArray = array_merge($ChangedArray,array("DeviceRegistrationDateTime" => $this->dttDeviceRegistrationDateTime));
         $newAuditLogEntry->AuditLogEntryDetail = json_encode($ChangedArray);
         try {
             $newAuditLogEntry->Save();
@@ -1299,11 +1299,11 @@
         $this->strDeviceUuid = $objReloaded->strDeviceUuid;
         $this->strDevicePlatform = $objReloaded->strDevicePlatform;
         $this->strDeviceOs = $objReloaded->strDeviceOs;
+        $this->dttDeviceRegistrationDateTime = $objReloaded->dttDeviceRegistrationDateTime;
+        $this->strLastUpdated = $objReloaded->strLastUpdated;
         $this->ClientConnection = $objReloaded->ClientConnection;
         $this->strSearchMetaInfo = $objReloaded->strSearchMetaInfo;
-        $this->strLastUpdated = $objReloaded->strLastUpdated;
         $this->intObjectOwner = $objReloaded->intObjectOwner;
-        $this->dttDeviceRegistrationDateTime = $objReloaded->dttDeviceRegistrationDateTime;
     }
     ////////////////////
     // PUBLIC OVERRIDERS
@@ -1377,6 +1377,20 @@
                  */
                 return $this->strDeviceOs;
 
+            case 'DeviceRegistrationDateTime':
+                /**
+                 * Gets the value for dttDeviceRegistrationDateTime 
+                 * @return dxDateTime
+                 */
+                return $this->dttDeviceRegistrationDateTime;
+
+            case 'LastUpdated':
+                /**
+                 * Gets the value for strLastUpdated (Read-Only Timestamp)
+                 * @return string
+                 */
+                return $this->strLastUpdated;
+
             case 'ClientConnection':
                 /**
                  * Gets the value for intClientConnection 
@@ -1391,13 +1405,6 @@
                  */
                 return $this->strSearchMetaInfo;
 
-            case 'LastUpdated':
-                /**
-                 * Gets the value for strLastUpdated (Read-Only Timestamp)
-                 * @return string
-                 */
-                return $this->strLastUpdated;
-
             case 'ObjectOwner':
                 /**
                  * Gets the value for intObjectOwner 
@@ -1405,13 +1412,6 @@
                  */
                 return $this->intObjectOwner;
 
-            case 'DeviceRegistrationDateTime':
-                /**
-                 * Gets the value for dttDeviceRegistrationDateTime 
-                 * @return dxDateTime
-                 */
-                return $this->dttDeviceRegistrationDateTime;
-
 
             ///////////////////
             // Member Objects
@@ -1569,6 +1569,19 @@
                     throw $objExc;
                 }
 
+            case 'DeviceRegistrationDateTime':
+                /**
+                 * Sets the value for dttDeviceRegistrationDateTime 
+                 * @param dxDateTime $mixValue
+                 * @return dxDateTime
+                 */
+                try {
+                    return ($this->dttDeviceRegistrationDateTime = dxType::Cast($mixValue, dxType::DateTime));
+                } catch (dxCallerException $objExc) {
+                    $objExc->IncrementOffset();
+                    throw $objExc;
+                }
+
             case 'ClientConnection':
                 /**
                  * Sets the value for intClientConnection 
@@ -1609,19 +1622,6 @@
                     throw $objExc;
                 }
 
-            case 'DeviceRegistrationDateTime':
-                /**
-                 * Sets the value for dttDeviceRegistrationDateTime 
-                 * @param dxDateTime $mixValue
-                 * @return dxDateTime
-                 */
-                try {
-                    return ($this->dttDeviceRegistrationDateTime = dxType::Cast($mixValue, dxType::DateTime));
-                } catch (dxCallerException $objExc) {
-                    $objExc->IncrementOffset();
-                    throw $objExc;
-                }
-
 
             ///////////////////
             // Member Objects
@@ -1879,11 +1879,11 @@
         $strToReturn .= '<element name="DeviceUuid" type="xsd:string"/>';
         $strToReturn .= '<element name="DevicePlatform" type="xsd:string"/>';
         $strToReturn .= '<element name="DeviceOs" type="xsd:string"/>';
+        $strToReturn .= '<element name="DeviceRegistrationDateTime" type="xsd:dateTime"/>';
+        $strToReturn .= '<element name="LastUpdated" type="xsd:string"/>';
         $strToReturn .= '<element name="ClientConnectionObject" type="xsd1:ClientConnection"/>';
         $strToReturn .= '<element name="SearchMetaInfo" type="xsd:string"/>';
-        $strToReturn .= '<element name="LastUpdated" type="xsd:string"/>';
         $strToReturn .= '<element name="ObjectOwner" type="xsd:int"/>';
-        $strToReturn .= '<element name="DeviceRegistrationDateTime" type="xsd:dateTime"/>';
         $strToReturn .= '<element name="__blnRestored" type="xsd:boolean"/>';
         $strToReturn .= '</sequence></complexType>';
         return $strToReturn;
@@ -1923,17 +1923,17 @@
             $objToReturn->strDevicePlatform = $objSoapObject->DevicePlatform;
         if (property_exists($objSoapObject, 'DeviceOs'))
             $objToReturn->strDeviceOs = $objSoapObject->DeviceOs;
+        if (property_exists($objSoapObject, 'DeviceRegistrationDateTime'))
+            $objToReturn->dttDeviceRegistrationDateTime = new dxDateTime($objSoapObject->DeviceRegistrationDateTime);
+        if (property_exists($objSoapObject, 'LastUpdated'))
+            $objToReturn->strLastUpdated = $objSoapObject->LastUpdated;
         if ((property_exists($objSoapObject, 'ClientConnectionObject')) &&
             ($objSoapObject->ClientConnectionObject))
             $objToReturn->ClientConnectionObject = ClientConnection::GetObjectFromSoapObject($objSoapObject->ClientConnectionObject);
         if (property_exists($objSoapObject, 'SearchMetaInfo'))
             $objToReturn->strSearchMetaInfo = $objSoapObject->SearchMetaInfo;
-        if (property_exists($objSoapObject, 'LastUpdated'))
-            $objToReturn->strLastUpdated = $objSoapObject->LastUpdated;
         if (property_exists($objSoapObject, 'ObjectOwner'))
             $objToReturn->intObjectOwner = $objSoapObject->ObjectOwner;
-        if (property_exists($objSoapObject, 'DeviceRegistrationDateTime'))
-            $objToReturn->dttDeviceRegistrationDateTime = new dxDateTime($objSoapObject->DeviceRegistrationDateTime);
         if (property_exists($objSoapObject, '__blnRestored'))
             $objToReturn->__blnRestored = $objSoapObject->__blnRestored;
         return $objToReturn;
@@ -1954,12 +1954,12 @@
     public static function GetSoapObjectFromObject($objObject, $blnBindRelatedObjects) {
         if ($objObject->dttUpdateDateTime)
             $objObject->dttUpdateDateTime = $objObject->dttUpdateDateTime->qFormat(dxDateTime::FormatSoap);
+        if ($objObject->dttDeviceRegistrationDateTime)
+            $objObject->dttDeviceRegistrationDateTime = $objObject->dttDeviceRegistrationDateTime->qFormat(dxDateTime::FormatSoap);
         if ($objObject->objClientConnectionObject)
             $objObject->objClientConnectionObject = ClientConnection::GetSoapObjectFromObject($objObject->objClientConnectionObject, false);
         else if (!$blnBindRelatedObjects)
             $objObject->intClientConnection = null;
-        if ($objObject->dttDeviceRegistrationDateTime)
-            $objObject->dttDeviceRegistrationDateTime = $objObject->dttDeviceRegistrationDateTime->qFormat(dxDateTime::FormatSoap);
         return $objObject;
     }
 
@@ -1982,11 +1982,11 @@
         $iArray['DeviceUuid'] = $this->strDeviceUuid;
         $iArray['DevicePlatform'] = $this->strDevicePlatform;
         $iArray['DeviceOs'] = $this->strDeviceOs;
+        $iArray['DeviceRegistrationDateTime'] = $this->dttDeviceRegistrationDateTime;
+        $iArray['LastUpdated'] = $this->strLastUpdated;
         $iArray['ClientConnection'] = $this->intClientConnection;
         $iArray['SearchMetaInfo'] = $this->strSearchMetaInfo;
-        $iArray['LastUpdated'] = $this->strLastUpdated;
         $iArray['ObjectOwner'] = $this->intObjectOwner;
-        $iArray['DeviceRegistrationDateTime'] = $this->dttDeviceRegistrationDateTime;
         return new ArrayIterator($iArray);
     }
 
@@ -2029,12 +2029,12 @@
      * @property-read dxQueryNode $DeviceUuid
      * @property-read dxQueryNode $DevicePlatform
      * @property-read dxQueryNode $DeviceOs
+     * @property-read dxQueryNode $DeviceRegistrationDateTime
+     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $ClientConnection
      * @property-read dxQueryNodeClientConnection $ClientConnectionObject
      * @property-read dxQueryNode $SearchMetaInfo
-     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $ObjectOwner
-     * @property-read dxQueryNode $DeviceRegistrationDateTime
      *
      *
      * @property-read dxQueryReverseReferenceNodePushRegistration $PushRegistration
@@ -2063,18 +2063,18 @@
 					return new dxQueryNode('DevicePlatform', 'DevicePlatform', 'VarChar', $this);
 				case 'DeviceOs':
 					return new dxQueryNode('DeviceOs', 'DeviceOs', 'VarChar', $this);
+				case 'DeviceRegistrationDateTime':
+					return new dxQueryNode('DeviceRegistrationDateTime', 'DeviceRegistrationDateTime', 'DateTime', $this);
+				case 'LastUpdated':
+					return new dxQueryNode('LastUpdated', 'LastUpdated', 'VarChar', $this);
 				case 'ClientConnection':
 					return new dxQueryNode('ClientConnection', 'ClientConnection', 'Integer', $this);
 				case 'ClientConnectionObject':
 					return new dxQueryNodeClientConnection('ClientConnection', 'ClientConnectionObject', 'Integer', $this);
 				case 'SearchMetaInfo':
 					return new dxQueryNode('SearchMetaInfo', 'SearchMetaInfo', 'Blob', $this);
-				case 'LastUpdated':
-					return new dxQueryNode('LastUpdated', 'LastUpdated', 'VarChar', $this);
 				case 'ObjectOwner':
 					return new dxQueryNode('ObjectOwner', 'ObjectOwner', 'Integer', $this);
-				case 'DeviceRegistrationDateTime':
-					return new dxQueryNode('DeviceRegistrationDateTime', 'DeviceRegistrationDateTime', 'DateTime', $this);
 				case 'PushRegistration':
 					return new dxQueryReverseReferenceNodePushRegistration($this, 'pushregistration', 'reverse_reference', 'ClientAuthenticationToken', 'PushRegistration');
 
@@ -2100,12 +2100,12 @@
      * @property-read dxQueryNode $DeviceUuid
      * @property-read dxQueryNode $DevicePlatform
      * @property-read dxQueryNode $DeviceOs
+     * @property-read dxQueryNode $DeviceRegistrationDateTime
+     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $ClientConnection
      * @property-read dxQueryNodeClientConnection $ClientConnectionObject
      * @property-read dxQueryNode $SearchMetaInfo
-     * @property-read dxQueryNode $LastUpdated
      * @property-read dxQueryNode $ObjectOwner
-     * @property-read dxQueryNode $DeviceRegistrationDateTime
      *
      *
      * @property-read dxQueryReverseReferenceNodePushRegistration $PushRegistration
@@ -2134,18 +2134,18 @@
 					return new dxQueryNode('DevicePlatform', 'DevicePlatform', 'string', $this);
 				case 'DeviceOs':
 					return new dxQueryNode('DeviceOs', 'DeviceOs', 'string', $this);
+				case 'DeviceRegistrationDateTime':
+					return new dxQueryNode('DeviceRegistrationDateTime', 'DeviceRegistrationDateTime', 'dxDateTime', $this);
+				case 'LastUpdated':
+					return new dxQueryNode('LastUpdated', 'LastUpdated', 'string', $this);
 				case 'ClientConnection':
 					return new dxQueryNode('ClientConnection', 'ClientConnection', 'integer', $this);
 				case 'ClientConnectionObject':
 					return new dxQueryNodeClientConnection('ClientConnection', 'ClientConnectionObject', 'integer', $this);
 				case 'SearchMetaInfo':
 					return new dxQueryNode('SearchMetaInfo', 'SearchMetaInfo', 'string', $this);
-				case 'LastUpdated':
-					return new dxQueryNode('LastUpdated', 'LastUpdated', 'string', $this);
 				case 'ObjectOwner':
 					return new dxQueryNode('ObjectOwner', 'ObjectOwner', 'integer', $this);
-				case 'DeviceRegistrationDateTime':
-					return new dxQueryNode('DeviceRegistrationDateTime', 'DeviceRegistrationDateTime', 'dxDateTime', $this);
 				case 'PushRegistration':
 					return new dxQueryReverseReferenceNodePushRegistration($this, 'pushregistration', 'reverse_reference', 'ClientAuthenticationToken', 'PushRegistration');
 
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/generate-ph5p-patch.php divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/generate-ph5p-patch.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/flush.php divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/flush.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/PH5P.patch divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/PH5P.patch
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/rename-config.php divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/rename-config.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/config-scanner.php divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/config-scanner.php
diff --git divblox/config/framework/divblox_admin/initialization_wizard/ionCube/README.txt divblox/config/framework/divblox_admin/initialization_wizard/ionCube/README.txt
diff --git divblox/config/framework/divblox_admin/initialization_wizard/ionCube/index.php divblox/config/framework/divblox_admin/initialization_wizard/ionCube/index.php
diff --git divblox/config/framework/divblox_admin/initialization_wizard/ionCube/USER-GUIDE.txt divblox/config/framework/divblox_admin/initialization_wizard/ionCube/USER-GUIDE.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/test-settings.travis.php divblox/assets/php/third_party/htmlpurifier-4.10.0/test-settings.travis.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/README.md divblox/assets/php/third_party/htmlpurifier-4.10.0/README.md
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/INSTALL.fr.utf8 divblox/assets/php/third_party/htmlpurifier-4.10.0/INSTALL.fr.utf8
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/TODO divblox/assets/php/third_party/htmlpurifier-4.10.0/TODO
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/LICENSE divblox/assets/php/third_party/htmlpurifier-4.10.0/LICENSE
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/phpdoc.ini divblox/assets/php/third_party/htmlpurifier-4.10.0/phpdoc.ini
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/release1-update.php divblox/assets/php/third_party/htmlpurifier-4.10.0/release1-update.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/package.php divblox/assets/php/third_party/htmlpurifier-4.10.0/package.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/NEWS divblox/assets/php/third_party/htmlpurifier-4.10.0/NEWS
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/test-settings.sample.php divblox/assets/php/third_party/htmlpurifier-4.10.0/test-settings.sample.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/art/icon-16x16.svg divblox/assets/php/third_party/htmlpurifier-4.10.0/art/icon-16x16.svg
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/enduser-customize.html divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/enduser-customize.html
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/enduser-tidy.html divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/enduser-tidy.html
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/ref-devnetwork.html divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/ref-devnetwork.html
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/dev-config-schema.html divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/dev-config-schema.html
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/ref-css-length.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/ref-css-length.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/enduser-id.html divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/enduser-id.html
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/enduser-utf8.html divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/enduser-utf8.html
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/ref-proprietary-tags.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/ref-proprietary-tags.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/dev-flush.html divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/dev-flush.html
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/dev-progress.html divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/dev-progress.html
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/index.html divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/index.html
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/proposal-new-directives.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/proposal-new-directives.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/dev-naming.html divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/dev-naming.html
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/proposal-filter-levels.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/proposal-filter-levels.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/enduser-slow.html divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/enduser-slow.html
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/dev-advanced-api.html divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/dev-advanced-api.html
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/dev-includes.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/dev-includes.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/proposal-colors.html divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/proposal-colors.html
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/ref-html-modularization.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/ref-html-modularization.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/entities/xhtml-special.ent divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/entities/xhtml-special.ent
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/entities/xhtml-symbol.ent divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/entities/xhtml-symbol.ent
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/examples/basic.php divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/examples/basic.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/specimens/html-align-to-css.html divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/specimens/html-align-to-css.html
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/specimens/LICENSE divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/specimens/LICENSE
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/specimens/jochem-blok-word.html divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/specimens/jochem-blok-word.html
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/multitest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/multitest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/index.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/index.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/CliTestCase.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/CliTestCase.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/PHPT/Reporter/SimpleTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/PHPT/Reporter/SimpleTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/PHPT/Controller/SimpleTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/PHPT/Controller/SimpleTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLDefinitionTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLDefinitionTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/EncoderTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/EncoderTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ChildDefHarness.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ChildDefHarness.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ErrorCollectorEMock.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ErrorCollectorEMock.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModuleManagerTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModuleManagerTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/LanguageTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/LanguageTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/DefinitionTestable.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/DefinitionTestable.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Harness.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Harness.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDefTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDefTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigTest-create.ini divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigTest-create.ini
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/EntityLookupTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/EntityLookupTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/DefinitionTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/DefinitionTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModuleTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModuleTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTypesTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTypesTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/DefinitionCacheTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/DefinitionCacheTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/URIParserTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/URIParserTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransformHarness.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransformHarness.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/URIFilterHarness.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/URIFilterHarness.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/URIDefinitionTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/URIDefinitionTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/TagTransformTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/TagTransformTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigTest-finalize.ini divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigTest-finalize.ini
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/.gitignore divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/.gitignore
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/utf8.phpt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/utf8.phpt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/domxml.phpt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/domxml.phpt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/stub.phpt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/stub.phpt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/ze1_compatibility_mode.phpt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/ze1_compatibility_mode.phpt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/kses/basic.phpt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/kses/basic.phpt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/_autoload.inc divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/_autoload.inc
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/auto-includes.phpt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/auto-includes.phpt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/standalone-with-prefix.phpt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/standalone-with-prefix.phpt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/error-auto-with-spl-nonstatic-autoload.phpt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/error-auto-with-spl-nonstatic-autoload.phpt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/path-includes.phpt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/path-includes.phpt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/auto-without-spl-with-autoload.phpt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/auto-without-spl-with-autoload.phpt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/_no-autoload.inc divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/_no-autoload.inc
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/safe-object-embed-munge.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/safe-object-embed-munge.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/style-onload.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/style-onload.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/script-dbl-comment.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/script-dbl-comment.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/id-enabled.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/id-enabled.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/inline-list-loop.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/inline-list-loop.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/trusted-comments-required.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/trusted-comments-required.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/script-bare.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/script-bare.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/trusted-comments.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/trusted-comments.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/t78.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/t78.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/script-comment.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/script-comment.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/basic.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/basic.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/script-ideal.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/script-ideal.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/safe-iframe-invalid.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/safe-iframe-invalid.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/secure-munge.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/secure-munge.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/strict-underline.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/strict-underline.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/disable-uri.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/disable-uri.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/munge.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/munge.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/css-allowed-remove.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/css-allowed-remove.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/safe-iframe.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/safe-iframe.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/double-youtube.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/double-youtube.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/blacklist-preserve.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/blacklist-preserve.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Filter/ExtractStyleBlocksTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Filter/ExtractStyleBlocksTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/LangTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/LangTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/CompositeTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/CompositeTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/MultipleTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/MultipleTest.php
diff --git project/components/ungrouped/imageviewer/component.js project/components/ungrouped/imageviewer/component.js
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/NumberTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/NumberTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/URITest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/URITest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/ImportantDecoratorTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/ImportantDecoratorTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/BorderTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/BorderTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/BackgroundPositionTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/BackgroundPositionTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/FontFamilyTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/FontFamilyTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/ColorTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/ColorTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/FontTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/FontTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/URI/IPv4Test.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/URI/IPv4Test.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/HTML/LengthTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/HTML/LengthTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/HTML/NmtokensTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/HTML/NmtokensTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/HTML/FrameTargetTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/HTML/FrameTargetTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/HTML/ClassTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/HTML/ClassTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/HTML/LinkTypesTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/HTML/LinkTypesTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ChildDef/TableTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ChildDef/TableTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ChildDef/ChameleonTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ChildDef/ChameleonTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Injector/DisplayLinkURITest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Injector/DisplayLinkURITest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/CoreTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/CoreTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/RemoveForeignElements_TidyTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/RemoveForeignElements_TidyTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/CompositeTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/CompositeTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/ValidateAttributesTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/ValidateAttributesTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/MakeWellFormed_InjectorTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/MakeWellFormed_InjectorTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/MakeWellFormed_ErrorsTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/MakeWellFormed_ErrorsTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/MakeWellFormedTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/MakeWellFormedTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/MakeWellFormed/EndInsertInjectorTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/MakeWellFormed/EndInsertInjectorTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/MakeWellFormed/EndRewindInjectorTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/MakeWellFormed/EndRewindInjectorTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/MakeWellFormed/SkipInjectorTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/MakeWellFormed/SkipInjectorTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/URIFilter/DisableResourcesTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/URIFilter/DisableResourcesTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/URIFilter/MakeAbsoluteTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/URIFilter/MakeAbsoluteTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/FormsTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/FormsTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/NofollowTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/NofollowTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/TargetNoreferrerTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/TargetNoreferrerTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/SafeObjectTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/SafeObjectTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/ImageTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/ImageTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/ObjectTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/ObjectTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/ScriptingTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/ScriptingTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/aliasesAliasCollision.vtest divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/aliasesAliasCollision.vtest
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/typeDefined.vtest divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/typeDefined.vtest
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/defaultType.vtest divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/defaultType.vtest
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/unique.vtest divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/unique.vtest
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/aliasesDirectiveCollision.vtest divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/aliasesDirectiveCollision.vtest
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/typeWithAllowedIsStringType.vtest divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/typeWithAllowedIsStringType.vtest
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/allowedIsString.vtest divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/allowedIsString.vtest
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/valueAliasesAliasNotAllowed.vtest divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/valueAliasesAliasNotAllowed.vtest
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/valueAliasesAliasIsString.vtest divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/valueAliasesAliasIsString.vtest
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransform/ImgRequiredTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransform/ImgRequiredTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransform/LangTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransform/LangTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransform/LengthTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransform/LengthTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransform/NameSyncTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransform/NameSyncTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransform/BackgroundTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransform/BackgroundTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransform/ImgSpaceTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransform/ImgSpaceTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransform/BgColorTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransform/BgColorTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransform/NameTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransform/NameTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/DefinitionCache/SerializerTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/DefinitionCache/SerializerTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/DefinitionCache/Decorator/MemoryTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/DefinitionCache/Decorator/MemoryTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/DefinitionCache/SerializerTest/README divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/DefinitionCache/SerializerTest/README
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/StringHashParser/AppendMultiline.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/StringHashParser/AppendMultiline.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/StringHashParser/Default.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/StringHashParser/Default.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/StringHashParser/OverrideSingle.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/StringHashParser/OverrideSingle.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/extras/HTMLPurifierExtras.auto.php divblox/assets/php/third_party/htmlpurifier-4.10.0/extras/HTMLPurifierExtras.auto.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier.composer.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier.composer.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier.safe-includes.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier.safe-includes.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier.includes.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier.includes.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/DoctypeRegistry.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/DoctypeRegistry.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/StringHash.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/StringHash.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Printer.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Printer.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ChildDef.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ChildDef.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIScheme.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIScheme.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Queue.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Queue.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Encoder.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Encoder.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ElementDef.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ElementDef.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Exception.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Exception.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ErrorStruct.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ErrorStruct.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/TagTransform.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/TagTransform.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/DefinitionCache.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/DefinitionCache.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Filter.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Filter.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIDefinition.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIDefinition.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Strategy.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Strategy.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Generator.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Generator.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTypes.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTypes.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/LanguageFactory.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/LanguageFactory.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLDefinition.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLDefinition.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIParser.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIParser.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrValidator.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrValidator.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Node/Comment.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Node/Comment.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Lexer/DirectLex.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Lexer/DirectLex.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Lexer/DOMLex.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Lexer/DOMLex.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Lexer/PH5P.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Lexer/PH5P.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Token/Tag.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Token/Tag.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Token/End.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Token/End.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/Integer.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/Integer.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/Switch.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/Switch.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/Text.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/Text.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/URI.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/URI.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/ImportantDecorator.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/ImportantDecorator.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/Composite.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/Composite.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/Length.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/Length.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/Font.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/Font.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/ListStyle.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/ListStyle.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/Filter.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/Filter.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/AlphaValue.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/AlphaValue.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/URI.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/URI.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/Background.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/Background.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/Percentage.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/Percentage.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/DenyElementDecorator.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/DenyElementDecorator.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/BackgroundPosition.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/BackgroundPosition.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/URI/Email/SimpleCheck.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/URI/Email/SimpleCheck.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/HTML/Class.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/HTML/Class.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/HTML/Nmtokens.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/HTML/Nmtokens.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/HTML/MultiLength.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/HTML/MultiLength.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/HTML/Bool.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/HTML/Bool.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/HTML/Length.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/HTML/Length.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Printer/ConfigForm.css divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Printer/ConfigForm.css
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ChildDef/Required.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ChildDef/Required.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ChildDef/Chameleon.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ChildDef/Chameleon.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ChildDef/Empty.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ChildDef/Empty.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ChildDef/Custom.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ChildDef/Custom.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ChildDef/StrictBlockquote.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ChildDef/StrictBlockquote.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Injector/DisplayLinkURI.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Injector/DisplayLinkURI.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Injector/RemoveSpansWithoutAttributes.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Injector/RemoveSpansWithoutAttributes.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Injector/PurifierLinkify.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Injector/PurifierLinkify.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Language/messages/en.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Language/messages/en.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Language/messages/en-x-testmini.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Language/messages/en-x-testmini.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Language/messages/en-x-test.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Language/messages/en-x-test.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Strategy/Core.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Strategy/Core.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Strategy/ValidateAttributes.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Strategy/ValidateAttributes.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Strategy/FixNesting.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Strategy/FixNesting.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIFilter/MakeAbsolute.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIFilter/MakeAbsolute.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIFilter/SafeIframe.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIFilter/SafeIframe.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIFilter/HostBlacklist.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIFilter/HostBlacklist.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIFilter/DisableExternalResources.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIFilter/DisableExternalResources.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIFilter/DisableExternal.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIFilter/DisableExternal.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIScheme/http.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIScheme/http.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIScheme/data.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIScheme/data.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIScheme/news.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIScheme/news.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIScheme/ftp.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIScheme/ftp.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIScheme/mailto.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIScheme/mailto.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/VarParser/Flexible.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/VarParser/Flexible.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/VarParser/Native.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/VarParser/Native.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Forms.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Forms.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Object.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Object.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/TargetBlank.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/TargetBlank.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Nofollow.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Nofollow.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Legacy.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Legacy.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Scripting.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Scripting.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Hypertext.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Hypertext.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/SafeScripting.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/SafeScripting.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Target.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Target.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/SafeObject.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/SafeObject.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/SafeEmbed.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/SafeEmbed.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Name.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Name.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/StyleAttribute.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/StyleAttribute.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/TargetNoreferrer.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/TargetNoreferrer.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Tables.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Tables.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Tidy/Transitional.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Tidy/Transitional.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Tidy/Proprietary.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Tidy/Proprietary.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Tidy/XHTML.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Tidy/XHTML.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/ValidatorAtom.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/ValidatorAtom.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/InterchangeBuilder.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/InterchangeBuilder.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.SafeIframe.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.SafeIframe.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.DisableExternalResources.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.DisableExternalResources.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Output.CommentScriptContents.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Output.CommentScriptContents.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Cache.SerializerPermissions.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Cache.SerializerPermissions.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/CSS.AllowDuplicates.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/CSS.AllowDuplicates.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.AllowedModules.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.AllowedModules.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/AutoFormat.RemoveEmpty.RemoveNbsp.Exceptions.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/AutoFormat.RemoveEmpty.RemoveNbsp.Exceptions.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.AggressivelyFixLt.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.AggressivelyFixLt.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.BlockWrapper.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.BlockWrapper.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/CSS.AllowImportant.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/CSS.AllowImportant.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.AggressivelyRemoveScript.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.AggressivelyRemoveScript.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Cache.DefinitionImpl.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Cache.DefinitionImpl.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.DefaultTextDir.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.DefaultTextDir.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.ForbiddenClasses.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.ForbiddenClasses.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.DisableExcludes.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.DisableExcludes.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.Encoding.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.Encoding.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.SafeScripting.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.SafeScripting.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.EscapeInvalidTags.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.EscapeInvalidTags.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Test.ForceNoIconv.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Test.ForceNoIconv.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.Trusted.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.Trusted.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.TidyAdd.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.TidyAdd.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Output.TidyFormat.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Output.TidyFormat.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.NormalizeNewlines.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.NormalizeNewlines.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.DefinitionRev.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.DefinitionRev.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Output.SortAttr.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Output.SortAttr.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Output.Newline.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Output.Newline.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.AllowedComments.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.AllowedComments.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.TidyLevel.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.TidyLevel.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.CustomDoctype.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.CustomDoctype.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.Doctype.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.Doctype.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.Host.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.Host.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.HostBlacklist.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.HostBlacklist.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.DisableResources.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.DisableResources.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Filter.ExtractStyleBlocks.TidyImpl.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Filter.ExtractStyleBlocks.TidyImpl.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.CollectErrors.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.CollectErrors.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/CSS.Proprietary.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/CSS.Proprietary.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.IDBlacklist.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.IDBlacklist.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.SafeEmbed.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.SafeEmbed.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.AllowedAttributes.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.AllowedAttributes.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.Disable.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.Disable.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.AllowedSchemes.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.AllowedSchemes.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.XHTML.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.XHTML.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.Base.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.Base.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.ColorKeywords.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.ColorKeywords.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.AllowedFrameTargets.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.AllowedFrameTargets.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.DefinitionRev.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.DefinitionRev.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Output.FlashCompat.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Output.FlashCompat.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.HiddenElements.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.HiddenElements.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.MaxImgLength.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.MaxImgLength.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.ID.HTML5.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.ID.HTML5.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.Attr.Name.UseCDATA.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.Attr.Name.UseCDATA.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/AutoFormat.PurifierLinkify.DocURL.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/AutoFormat.PurifierLinkify.DocURL.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/AutoFormat.RemoveSpansWithoutAttributes.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/AutoFormat.RemoveSpansWithoutAttributes.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.DefaultInvalidImageAlt.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.DefaultInvalidImageAlt.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/CSS.AllowedProperties.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/CSS.AllowedProperties.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.ConvertDocumentToFragment.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.ConvertDocumentToFragment.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/Builder/ConfigSchema.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/Builder/ConfigSchema.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/BdoDir.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/BdoDir.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/Background.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/Background.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/TargetNoopener.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/TargetNoopener.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/ScriptRequired.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/ScriptRequired.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/Textarea.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/Textarea.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/EnumToCSS.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/EnumToCSS.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/TargetBlank.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/TargetBlank.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/NameSync.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/NameSync.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/DefinitionCache/Null.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/DefinitionCache/Null.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/DefinitionCache/Serializer.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/DefinitionCache/Serializer.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/DefinitionCache/Decorator/Memory.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/DefinitionCache/Decorator/Memory.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/DefinitionCache/Decorator/Template.php.in divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/DefinitionCache/Decorator/Template.php.in
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/INSTALL divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/INSTALL
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/htmlpurifier.php divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/htmlpurifier.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/README divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/README
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/info.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/info.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/settings/form.php divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/settings/form.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/configdoc/generate.php divblox/assets/php/third_party/htmlpurifier-4.10.0/configdoc/generate.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/configdoc/styles/plain.css divblox/assets/php/third_party/htmlpurifier-4.10.0/configdoc/styles/plain.css
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/configdoc/styles/plain.xsl divblox/assets/php/third_party/htmlpurifier-4.10.0/configdoc/styles/plain.xsl
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/benchmarks/.htaccess divblox/assets/php/third_party/htmlpurifier-4.10.0/benchmarks/.htaccess
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/benchmarks/Trace.php divblox/assets/php/third_party/htmlpurifier-4.10.0/benchmarks/Trace.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/benchmarks/samples/Lexer/4.html divblox/assets/php/third_party/htmlpurifier-4.10.0/benchmarks/samples/Lexer/4.html
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/all.php divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/all.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/xssAttacks.xml divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/xssAttacks.xml
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/configForm.php divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/configForm.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/attrTransform.php divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/attrTransform.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/innerHTML.js divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/innerHTML.js
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/dataScheme.php divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/dataScheme.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/printDefinition.php divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/printDefinition.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/extractStyleBlocks.php divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/extractStyleBlocks.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/basic.php divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/basic.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/innerHTML.html divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/innerHTML.html
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/common.php divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/common.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/variableWidthAttack.php divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/variableWidthAttack.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/basic/allElements.css divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/basic/allElements.css
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.nullbool.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.nullbool.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.itext.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.itext.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.list.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.list.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/info.ini divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/info.ini
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.bool.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.bool.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.float.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.float.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.hash.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.hash.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.text.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.text.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.mixed.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.mixed.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Directive.Deprecated.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Directive.Deprecated.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/common.php divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/common.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/PH5P.php divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/PH5P.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/add-vimline.php divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/add-vimline.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/old-remove-require-once.php divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/old-remove-require-once.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/old-remove-schema-def.php divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/old-remove-schema-def.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/old-extract-schema.php divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/old-extract-schema.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/generate-schema-cache.php divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/generate-schema-cache.php
diff --git divblox_ioncube_lic divblox_ioncube_lic
diff --git divblox/config/framework/divblox_admin/initialization_wizard/ionCube/LICENSE.txt divblox/config/framework/divblox_admin/initialization_wizard/ionCube/LICENSE.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/CREDITS divblox/assets/php/third_party/htmlpurifier-4.10.0/CREDITS
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/INSTALL divblox/assets/php/third_party/htmlpurifier-4.10.0/INSTALL
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/.travis.yml divblox/assets/php/third_party/htmlpurifier-4.10.0/.travis.yml
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/composer.json divblox/assets/php/third_party/htmlpurifier-4.10.0/composer.json
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/WYSIWYG divblox/assets/php/third_party/htmlpurifier-4.10.0/WYSIWYG
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/art/logo.svg divblox/assets/php/third_party/htmlpurifier-4.10.0/art/logo.svg
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/art/icon-32x32.svg divblox/assets/php/third_party/htmlpurifier-4.10.0/art/icon-32x32.svg
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/fixquotes.htc divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/fixquotes.htc
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/style.css divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/style.css
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/enduser-youtube.html divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/enduser-youtube.html
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/proposal-language.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/proposal-language.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/enduser-overview.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/enduser-overview.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/dev-config-naming.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/dev-config-naming.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/proposal-config.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/proposal-config.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/proposal-errors.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/proposal-errors.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/dev-code-quality.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/dev-code-quality.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/ref-content-models.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/ref-content-models.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/dev-optimization.html divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/dev-optimization.html
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/proposal-plists.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/proposal-plists.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/enduser-security.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/enduser-security.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/dev-config-bcbreaks.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/dev-config-bcbreaks.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/dtd/xhtml1-transitional.dtd divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/dtd/xhtml1-transitional.dtd
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/entities/xhtml-lat1.ent divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/entities/xhtml-lat1.ent
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/specimens/windows-live-mail-desktop-beta.html divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/specimens/windows-live-mail-desktop-beta.html
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/common.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/common.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/Debugger.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/Debugger.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/default_load.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/default_load.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/generate_mock_once.func.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/generate_mock_once.func.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifierTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifierTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/path2class.func.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/path2class.func.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/tmp/README divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/tmp/README
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/FSTools/FileSystemHarness.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/FSTools/FileSystemHarness.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/FSTools/FileTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/FSTools/FileTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/StrategyHarness.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/StrategyHarness.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/LanguageFactoryTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/LanguageFactoryTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/StringHashParserTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/StringHashParserTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/TokenTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/TokenTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/TokenFactoryTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/TokenFactoryTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigTest-loadIni.ini divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigTest-loadIni.ini
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/DefinitionCacheHarness.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/DefinitionCacheHarness.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/DefinitionCacheFactoryTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/DefinitionCacheFactoryTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/StringHashTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/StringHashTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/VarParserHarness.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/VarParserHarness.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/IDAccumulatorTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/IDAccumulatorTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PercentEncoderTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PercentEncoderTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ZipperTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ZipperTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/LengthTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/LengthTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/GeneratorTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/GeneratorTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/UnitConverterTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/UnitConverterTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchemaTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchemaTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/URISchemeTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/URISchemeTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PropertyListTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PropertyListTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ErrorCollectorTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ErrorCollectorTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrCollectionsTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrCollectionsTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ComplexHarness.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ComplexHarness.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDefHarness.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDefHarness.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/URIHarness.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/URIHarness.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/DoctypeRegistryTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/DoctypeRegistryTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/URISchemeRegistryTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/URISchemeRegistryTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ErrorsHarness.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ErrorsHarness.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/func.phpt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/func.phpt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/auto-without-spl-autoload.phpt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/auto-without-spl-autoload.phpt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/auto-with-autoload.phpt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/auto-with-autoload.phpt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/auto.phpt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/auto.phpt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/path-includes-autoload.phpt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/path-includes-autoload.phpt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/standalone.phpt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/standalone.phpt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/safe-includes.phpt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/safe-includes.phpt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/whitespace-preserve.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/whitespace-preserve.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/safe-iframe-youtube.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/safe-iframe-youtube.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/id-img.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/id-img.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/shift-jis-remove-yen.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/shift-jis-remove-yen.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/tidy-background.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/tidy-background.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/li-disabled.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/li-disabled.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/munge-extra.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/munge-extra.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/strict-blockquote.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/strict-blockquote.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/safe-object-embed.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/safe-object-embed.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/id-name-mix.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/id-name-mix.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/allowed-remove.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/allowed-remove.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/strict-blockquote-with-inline.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/strict-blockquote-with-inline.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/shift-jis-preserve-yen.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/shift-jis-preserve-yen.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/empty.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/empty.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/script-cdata.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/script-cdata.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/css-allowed-preserve.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/css-allowed-preserve.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/allowed-preserve.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/allowed-preserve.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/name.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/name.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/id-default.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/id-default.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/list-nesting.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/list-nesting.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/safe-iframe-googlemaps.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/safe-iframe-googlemaps.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/blacklist-remove.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/blacklist-remove.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Lexer/DirectLex_ErrorsTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Lexer/DirectLex_ErrorsTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/URITest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/URITest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/IntegerTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/IntegerTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSSTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSSTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/SwitchTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/SwitchTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/EnumTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/EnumTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/BackgroundTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/BackgroundTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/PercentageTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/PercentageTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/AlphaValueTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/AlphaValueTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/ListStyleTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/ListStyleTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/TextDecorationTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/TextDecorationTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/LengthTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/LengthTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/URI/EmailHarness.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/URI/EmailHarness.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/URI/HostTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/URI/HostTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/URI/IPv6Test.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/URI/IPv6Test.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/HTML/BoolTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/HTML/BoolTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/HTML/IDTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/HTML/IDTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/HTML/MultiLengthTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/HTML/MultiLengthTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/HTML/PixelsTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/HTML/PixelsTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/HTML/ColorTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/HTML/ColorTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ChildDef/ListTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ChildDef/ListTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ChildDef/RequiredTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ChildDef/RequiredTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ChildDef/CustomTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ChildDef/CustomTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ChildDef/OptionalTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ChildDef/OptionalTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ChildDef/StrictBlockquoteTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ChildDef/StrictBlockquoteTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Injector/AutoParagraphTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Injector/AutoParagraphTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Injector/LinkifyTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Injector/LinkifyTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Injector/SafeObjectTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Injector/SafeObjectTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Injector/PurifierLinkifyTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Injector/PurifierLinkifyTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Injector/RemoveEmptyTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Injector/RemoveEmptyTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/ValidateAttributes_TidyTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/ValidateAttributes_TidyTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/ErrorsHarness.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/ErrorsHarness.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/RemoveForeignElementsTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/RemoveForeignElementsTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/RemoveForeignElements_ErrorsTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/RemoveForeignElements_ErrorsTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/ValidateAttributes_IDTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/ValidateAttributes_IDTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/FixNesting_ErrorsTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/FixNesting_ErrorsTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/MakeWellFormed/SkipInjector.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/MakeWellFormed/SkipInjector.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/MakeWellFormed/EndInsertInjector.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/MakeWellFormed/EndInsertInjector.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/URIFilter/MungeTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/URIFilter/MungeTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/URIFilter/DisableExternalTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/URIFilter/DisableExternalTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/URIFilter/DisableExternalResourcesTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/URIFilter/DisableExternalResourcesTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/URIFilter/HostBlacklistTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/URIFilter/HostBlacklistTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/VarParser/FlexibleTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/VarParser/FlexibleTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/VarParser/NativeTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/VarParser/NativeTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/NameTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/NameTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/TargetBlankTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/TargetBlankTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/SafeEmbedTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/SafeEmbedTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/TidyTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/TidyTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/RubyTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/RubyTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/TargetNoopenerTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/TargetNoopenerTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/SimpleTest/TextReporter.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/SimpleTest/TextReporter.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/ValidatorAtomTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/ValidatorAtomTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/ValidatorTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/ValidatorTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/InterchangeTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/InterchangeTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/ignoreNamespace.vtest divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/ignoreNamespace.vtest
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/defaultIsAllowed.vtest divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/defaultIsAllowed.vtest
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/descriptionNotEmpty.vtest divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/descriptionNotEmpty.vtest
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/typeWithValueAliasesIsStringType.vtest divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/typeWithValueAliasesIsStringType.vtest
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/valueAliasesRealIsString.vtest divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/valueAliasesRealIsString.vtest
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/typeExists.vtest divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/typeExists.vtest
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/defaultNullWithAllowed.vtest divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/defaultNullWithAllowed.vtest
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/valueAliasesNotAliasSelf.vtest divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/valueAliasesNotAliasSelf.vtest
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/allowedNotEmpty.vtest divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/allowedNotEmpty.vtest
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransform/BorderTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransform/BorderTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransform/BdoDirTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransform/BdoDirTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransform/BoolToCSSTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransform/BoolToCSSTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransform/InputTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransform/InputTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/DefinitionCache/DecoratorHarness.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/DefinitionCache/DecoratorHarness.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/StringHashParser/Simple.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/StringHashParser/Simple.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/extras/FSTools.php divblox/assets/php/third_party/htmlpurifier-4.10.0/extras/FSTools.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/extras/HTMLPurifierExtras.php divblox/assets/php/third_party/htmlpurifier-4.10.0/extras/HTMLPurifierExtras.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/extras/HTMLPurifierExtras.autoload.php divblox/assets/php/third_party/htmlpurifier-4.10.0/extras/HTMLPurifierExtras.autoload.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/extras/HTMLPurifierExtras.autoload-legacy.php divblox/assets/php/third_party/htmlpurifier-4.10.0/extras/HTMLPurifierExtras.autoload-legacy.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/extras/README divblox/assets/php/third_party/htmlpurifier-4.10.0/extras/README
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/extras/ConfigDoc/HTMLXSLTProcessor.php divblox/assets/php/third_party/htmlpurifier-4.10.0/extras/ConfigDoc/HTMLXSLTProcessor.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier.autoload.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier.autoload.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier.autoload-legacy.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier.autoload-legacy.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier.kses.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier.kses.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier.auto.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier.auto.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier.path.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier.path.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/VarParser.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/VarParser.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/TokenFactory.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/TokenFactory.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Doctype.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Doctype.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/PropertyListIterator.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/PropertyListIterator.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Language.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Language.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Bootstrap.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Bootstrap.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/PropertyList.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/PropertyList.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Arborize.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Arborize.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Length.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Length.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/CSSDefinition.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/CSSDefinition.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/StringHashParser.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/StringHashParser.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URISchemeRegistry.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URISchemeRegistry.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/EntityLookup.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/EntityLookup.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/EntityParser.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/EntityParser.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/PercentEncoder.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/PercentEncoder.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/IDAccumulator.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/IDAccumulator.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIFilter.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIFilter.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Node.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Node.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Context.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Context.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/VarParserException.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/VarParserException.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Zipper.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Zipper.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Config.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Config.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrCollections.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrCollections.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Lexer.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Lexer.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/DefinitionCacheFactory.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/DefinitionCacheFactory.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Injector.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Injector.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ContentSets.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ContentSets.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModuleManager.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModuleManager.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ErrorCollector.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ErrorCollector.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Token.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Token.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URI.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URI.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Definition.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Definition.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Node/Text.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Node/Text.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Node/Element.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Node/Element.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Token/Text.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Token/Text.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Token/Start.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Token/Start.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Token/Comment.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Token/Comment.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Token/Empty.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Token/Empty.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Filter/YouTube.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Filter/YouTube.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/Clone.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/Clone.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/Enum.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/Enum.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/Ident.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/Ident.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/Border.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/Border.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/Multiple.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/Multiple.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/Number.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/Number.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/Color.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/Color.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/FontFamily.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/FontFamily.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/TextDecoration.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/CSS/TextDecoration.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/URI/Email.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/URI/Email.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/URI/Host.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/URI/Host.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/HTML/ID.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/HTML/ID.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/HTML/Color.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/HTML/Color.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/HTML/LinkTypes.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/HTML/LinkTypes.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Printer/ConfigForm.js divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Printer/ConfigForm.js
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Printer/CSSDefinition.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Printer/CSSDefinition.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Printer/ConfigForm.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Printer/ConfigForm.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ChildDef/Table.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ChildDef/Table.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ChildDef/Optional.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ChildDef/Optional.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ChildDef/List.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ChildDef/List.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Injector/AutoParagraph.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Injector/AutoParagraph.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Injector/SafeObject.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Injector/SafeObject.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Injector/Linkify.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Injector/Linkify.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Strategy/RemoveForeignElements.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Strategy/RemoveForeignElements.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Strategy/MakeWellFormed.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Strategy/MakeWellFormed.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIFilter/DisableResources.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIFilter/DisableResources.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIFilter/Munge.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIFilter/Munge.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIScheme/tel.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIScheme/tel.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIScheme/https.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIScheme/https.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIScheme/file.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIScheme/file.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIScheme/nntp.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/URIScheme/nntp.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Bdo.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Bdo.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Proprietary.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Proprietary.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Ruby.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Ruby.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/XMLCommonAttributes.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/XMLCommonAttributes.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/List.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/List.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Tidy.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Tidy.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Iframe.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Iframe.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Edit.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Edit.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Image.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Image.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Text.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Text.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/CommonAttributes.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/CommonAttributes.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Tidy/XHTMLAndHTML4.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Tidy/XHTMLAndHTML4.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Tidy/Name.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Tidy/Name.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/Validator.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/Validator.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/Exception.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/Exception.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/Interchange.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/Interchange.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Filter.ExtractStyleBlocks.Scope.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Filter.ExtractStyleBlocks.Scope.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.OverrideAllowedSchemes.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.OverrideAllowedSchemes.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.MungeResources.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.MungeResources.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.Language.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.Language.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.AllowedClasses.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.AllowedClasses.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/AutoFormat.RemoveEmpty.Predicate.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/AutoFormat.RemoveEmpty.Predicate.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.AllowedCommentsRegexp.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.AllowedCommentsRegexp.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.EnableIDNA.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.EnableIDNA.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.ForbiddenElements.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.ForbiddenElements.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.LegacyEntityDecoder.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.LegacyEntityDecoder.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.SafeObject.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.SafeObject.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.Nofollow.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.Nofollow.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Filter.ExtractStyleBlocks.Escaping.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Filter.ExtractStyleBlocks.Escaping.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/CSS.Trusted.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/CSS.Trusted.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.EscapeInvalidChildren.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.EscapeInvalidChildren.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.SafeIframeRegexp.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.SafeIframeRegexp.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.DisableExternal.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.DisableExternal.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.AllowedRev.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.AllowedRev.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.IDPrefix.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.IDPrefix.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.AllowedElements.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.AllowedElements.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.Allowed.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.Allowed.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.IDPrefixLocal.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.IDPrefixLocal.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/AutoFormat.AutoParagraph.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/AutoFormat.AutoParagraph.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.RemoveInvalidImg.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.RemoveInvalidImg.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.AllowedRel.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.AllowedRel.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.TargetBlank.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.TargetBlank.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.DefaultScheme.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.DefaultScheme.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Cache.SerializerPath.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Cache.SerializerPath.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.ClassUseCDATA.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.ClassUseCDATA.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.MakeAbsolute.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.MakeAbsolute.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.ForbiddenAttributes.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.ForbiddenAttributes.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.EnableID.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.EnableID.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.Strict.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.Strict.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.Munge.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.Munge.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.AllowHostnameUnderscore.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.AllowHostnameUnderscore.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.CoreModules.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.CoreModules.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.IDBlacklistRegexp.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.IDBlacklistRegexp.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Filter.Custom.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Filter.Custom.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.Proprietary.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.Proprietary.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.RemoveScriptContents.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.RemoveScriptContents.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/AutoFormat.Linkify.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/AutoFormat.Linkify.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/CSS.AllowedFonts.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/CSS.AllowedFonts.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Filter.ExtractStyleBlocks.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Filter.ExtractStyleBlocks.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/AutoFormat.Custom.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/AutoFormat.Custom.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.MaintainLineNumbers.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.MaintainLineNumbers.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.LexerImpl.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.LexerImpl.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.RemoveProcessingInstructions.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.RemoveProcessingInstructions.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.TargetNoopener.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.TargetNoopener.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.DirectLexLineNumberSyncInterval.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.DirectLexLineNumberSyncInterval.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/CSS.MaxImgLength.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/CSS.MaxImgLength.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.DefinitionID.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.DefinitionID.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.TargetNoreferrer.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.TargetNoreferrer.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Output.FixInnerHTML.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Output.FixInnerHTML.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Filter.YouTube.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Filter.YouTube.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/info.ini divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/info.ini
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/AutoFormat.DisplayLinkURI.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/AutoFormat.DisplayLinkURI.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/CSS.DefinitionRev.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/CSS.DefinitionRev.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.TidyRemove.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.TidyRemove.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.Parent.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.Parent.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.FlashAllowFullScreen.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/HTML.FlashAllowFullScreen.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/CSS.AllowTricky.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/CSS.AllowTricky.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.EscapeNonASCIICharacters.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Core.EscapeNonASCIICharacters.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/Builder/Xml.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/Builder/Xml.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/Interchange/Directive.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/Interchange/Directive.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/TagTransform/Simple.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/TagTransform/Simple.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/TagTransform/Font.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/TagTransform/Font.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/BoolToCSS.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/BoolToCSS.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/SafeParam.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/SafeParam.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/Nofollow.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/Nofollow.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/Length.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/Length.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/SafeEmbed.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/SafeEmbed.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/Border.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/Border.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/TargetNoreferrer.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/TargetNoreferrer.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/SafeObject.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/SafeObject.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/BgColor.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/BgColor.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/Input.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/Input.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/ImgSpace.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/ImgSpace.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/DefinitionCache/Decorator.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/DefinitionCache/Decorator.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/DefinitionCache/Decorator/Cleanup.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/DefinitionCache/Decorator/Cleanup.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/migrate.bbcode.php divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/migrate.bbcode.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/settings.php divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/settings.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/Changelog divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/Changelog
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/.gitignore divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/.gitignore
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/init-config.php divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/init-config.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/config.default.php divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/config.default.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/settings/migrate-sigs.php divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/settings/migrate-sigs.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/settings/migrate-sigs-form.php divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/settings/migrate-sigs-form.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/configdoc/types.xml divblox/assets/php/third_party/htmlpurifier-4.10.0/configdoc/types.xml
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/benchmarks/ConfigSchema.php divblox/assets/php/third_party/htmlpurifier-4.10.0/benchmarks/ConfigSchema.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/benchmarks/Lexer.php divblox/assets/php/third_party/htmlpurifier-4.10.0/benchmarks/Lexer.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/benchmarks/samples/Lexer/1.html divblox/assets/php/third_party/htmlpurifier-4.10.0/benchmarks/samples/Lexer/1.html
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/benchmarks/samples/Lexer/2.html divblox/assets/php/third_party/htmlpurifier-4.10.0/benchmarks/samples/Lexer/2.html
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/benchmarks/samples/Lexer/DISCLAIMER.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/benchmarks/samples/Lexer/DISCLAIMER.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/allConfigForm.php divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/allConfigForm.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/xssAttacks.php divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/xssAttacks.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/attrTransform.xml divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/attrTransform.xml
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/basic/legacy.css divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/basic/legacy.css
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/basic/legacy.html divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/basic/legacy.html
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/basic/allElements.html divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/basic/allElements.html
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.nullstring.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.nullstring.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.int.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.int.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Directive.Allowed.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Directive.Allowed.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.lookup.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.lookup.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.string.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.string.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Directive.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Directive.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.istring.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/test-schema/Type.istring.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/remove-trailing-whitespace.php divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/remove-trailing-whitespace.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/.htaccess divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/.htaccess
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/update-config.php divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/update-config.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/HTML/Pixels.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/HTML/Pixels.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/HTML/FrameTarget.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/HTML/FrameTarget.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/generate-includes.php divblox/assets/php/third_party/htmlpurifier-4.10.0/maintenance/generate-includes.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Printer/HTMLDefinition.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Printer/HTMLDefinition.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/auto-with-spl-autoload.phpt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/auto-with-spl-autoload.phpt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/standalone-autoload.phpt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/standalone-autoload.phpt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/auto-with-spl-autoload-default.phpt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/PHPT/loading/auto-with-spl-autoload-default.phpt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Injector/RemoveEmpty.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Injector/RemoveEmpty.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Language/classes/en-x-test.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Language/classes/en-x-test.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Strategy/Composite.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Strategy/Composite.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/inline-wraps-block.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/inline-wraps-block.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/file-uri.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/file-uri.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/trusted-comments-table.htmlt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLT/trusted-comments-table.htmlt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Lexer/DirectLexTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Lexer/DirectLexTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/TextTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/TextTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/NonXMLCommonAttributes.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/NonXMLCommonAttributes.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/FilterTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/CSS/FilterTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/TargetNoopener.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/TargetNoopener.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Presentation.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Presentation.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Tidy/Strict.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/HTMLModule/Tidy/Strict.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/URI/Email/SimpleCheckTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrDef/URI/Email/SimpleCheckTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.DefaultInvalidImage.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.DefaultInvalidImage.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/FixNestingTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/FixNestingTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/AutoFormat.RemoveEmpty.RemoveNbsp.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/AutoFormat.RemoveEmpty.RemoveNbsp.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/MakeWellFormed/EndRewindInjector.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/Strategy/MakeWellFormed/EndRewindInjector.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/AutoFormat.RemoveEmpty.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/AutoFormat.RemoveEmpty.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/SafeScriptingTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/SafeScriptingTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.DefaultImageAlt.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/Attr.DefaultImageAlt.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/ProprietaryTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModule/ProprietaryTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/SimpleTest/Reporter.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/SimpleTest/Reporter.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/AutoFormat.PurifierLinkify.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/AutoFormat.PurifierLinkify.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/ValidatorTestCase.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/ValidatorTestCase.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/CSS.ForbiddenProperties.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/CSS.ForbiddenProperties.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.MungeSecretKey.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.MungeSecretKey.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/valueAliasesRealAllowed.vtest divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigSchema/Validator/directive/valueAliasesRealAllowed.vtest
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.DefinitionID.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/schema/URI.DefinitionID.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/release2-tag.php divblox/assets/php/third_party/htmlpurifier-4.10.0/release2-tag.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransform/EnumToCSSTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransform/EnumToCSSTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/WHATSNEW divblox/assets/php/third_party/htmlpurifier-4.10.0/WHATSNEW
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/Doxyfile divblox/assets/php/third_party/htmlpurifier-4.10.0/Doxyfile
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/DefinitionCache/DecoratorTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/DefinitionCache/DecoratorTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/Interchange/Id.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema/Interchange/Id.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/DefinitionCache/Decorator/CleanupTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/DefinitionCache/Decorator/CleanupTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/StringHashParser/Multi.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/StringHashParser/Multi.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/ImgRequired.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/ImgRequired.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/Name.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/Name.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/extras/FSTools/File.php divblox/assets/php/third_party/htmlpurifier-4.10.0/extras/FSTools/File.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/Lang.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrTransform/Lang.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier.func.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier.func.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/ref-whatwg.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/ref-whatwg.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/enduser-uri-filter.html divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/enduser-uri-filter.html
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/proposal-css-extraction.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/docs/proposal-css-extraction.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/modx.txt divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/modx.txt
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/settings/save.php divblox/assets/php/third_party/htmlpurifier-4.10.0/plugins/phorum/settings/save.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/test_files.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/test_files.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/ConfigSchema.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/UnitConverter.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/UnitConverter.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/PHPT/Section/PRESKIPIF.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/PHPT/Section/PRESKIPIF.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/benchmarks/samples/Lexer/3.html divblox/assets/php/third_party/htmlpurifier-4.10.0/benchmarks/samples/Lexer/3.html
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/preserveYouTube.php divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/preserveYouTube.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/InjectorHarness.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/InjectorHarness.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/EntityParserTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/EntityParserTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ContextTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ContextTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ConfigTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ElementDefTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/ElementDefTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransformTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrTransformTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModuleHarness.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/HTMLModuleHarness.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/cacheConfig.php divblox/assets/php/third_party/htmlpurifier-4.10.0/smoketests/cacheConfig.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Filter/ExtractStyleBlocks.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/Filter/ExtractStyleBlocks.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/Lang.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/Lang.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/LexerTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/LexerTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/URITest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/URITest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrValidator_ErrorsTest.php divblox/assets/php/third_party/htmlpurifier-4.10.0/tests/HTMLPurifier/AttrValidator_ErrorsTest.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/URI/IPv4.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/URI/IPv4.php
diff --git divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/URI/IPv6.php divblox/assets/php/third_party/htmlpurifier-4.10.0/library/HTMLPurifier/AttrDef/URI/IPv6.php
